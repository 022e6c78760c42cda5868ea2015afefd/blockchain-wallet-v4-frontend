{
	"create_time": "2021-04-21T09:32:58.000Z",
	"display_name": "Backend and Clients Tracking Plan",
	"name": "workspaces/blockchain/tracking-plans/rs_1rTQPq3YJO50gUMOeV9FoPd5eY2",
	"rules": {
		"events": [
			{
				"description": "the user's password was changed successfully.",
				"name": "Account Password Changed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "security_v1",
						"source": [
							"client",
							"backend"
						]
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"account_type": {
									"description": "What account we are talking about : USERKEY account : the Private Key (non custodial) wallet. CUSTODIAL : the custodial account allowing user to access their Trading, Savings, and/or Exchange wallets",
									"enum": [
										"CUSTODIAL",
										"USERKEY"
									],
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is managing Security events\n",
									"enum": [
										"WALLET",
										"EXCHANGE"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"account_type"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user reset their password during a recovery process. This is triggered when the user enters the new password. This is different to the Account Password Changed event which is when user updates it for security reason by providing the old password.",
				"name": "Account Password Reset",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "recovery_v1",
						"source": [
							"client",
							"backend"
						]
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"account_type": {
									"description": "What account we are talking about : USERKEY account : the Private Key (non custodial) wallet. CUSTODIAL : the custodial account allowing user to access their Trading, Savings, and/or Exchange wallets",
									"enum": [
										"CUSTODIAL",
										"USERKEY"
									],
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"exchange": {
									"description": "Parameters about the exchange account",
									"properties": {
										"two_fa_mode": {
											"description": "Whether the exchange account has 2FA set up",
											"type": "boolean"
										},
										"user_id": {
											"description": "Exchange user credentials ID",
											"type": "string"
										}
									},
									"required": [
									],
									"type": "object"
								},
								"mergeable": {
									"description": "Indicates if possible to merge two unlinked accounts",
									"type": "boolean"
								},
								"platform": {
									"description": "what platform the account is for",
									"enum": [
										"WALLET",
										"EXCHANGE"
									],
									"type": "string"
								},
								"site_redirect": {
									"description": "In reset : Whether the user is being redirected to the exchange or wallet",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"upgradeable": {
									"description": "Indicates if possible to upgrade to a new unified Blockchain.com Account",
									"type": "boolean"
								},
								"wallet": {
									"description": "Parameters about the wallet account",
									"properties": {
										"auth_type": {
											"description": "The wallet 2FA type that is enforced.",
											"enum": [
												"0_NONE",
												"1_YUBIKEY",
												"2_EMAIL",
												"3_YUBIKEY_MTGOX",
												"4_GOOGLE_AUTHENTICATOR",
												"5_SMS"
											],
											"type": "string"
										},
										"exchange": {
											"description": "Parameters about the exchange account",
											"properties": {
												"two_fa_mode": {
													"description": "Whether the exchange account has 2FA set up",
													"properties": {
													},
													"required": [
													],
													"type": "object"
												},
												"user_id": {
													"description": "Exchange user credentials ID",
													"type": "object"
												}
											},
											"required": [
											],
											"type": "object"
										},
										"guid_first_four": {
											"description": "The first four characters of the wallet.guid field",
											"pattern": "^.{4,4}$",
											"type": "string"
										},
										"has_cloud_backup": {
											"description": "Whether the wallet has cloud backups",
											"type": "boolean"
										},
										"is_mobile_setup": {
											"description": "Whether the wallet has a mobile client set up",
											"type": "boolean"
										},
										"last_mnemonic_backup": {
											"description": "The last time, in unix timestamp, in which a wallet has their mnemonic backup verified",
											"type": "integer"
										},
										"mobile_device_type": {
											"description": "The type of device being verified",
											"enum": [
												"APP-Android",
												"APP-iOS"
											],
											"type": "string"
										},
										"nabu": {
											"description": "Parameter about the nabu account",
											"properties": {
												"recovery_eligible": {
													"description": "Whether the nabu user is eligible for recovery. Usually if account has value (> $300 or 1 payment method linked)",
													"type": "boolean"
												},
												"user_id": {
													"description": "The Nabu User ID. This is from the users table in nabu gateway",
													"type": "object"
												}
											},
											"required": [
											],
											"type": "object"
										}
									},
									"required": [
									],
									"type": "object"
								},
								"with_recovery_phrase": {
									"description": "Whether the resetting the password was after successfully providing the recovery phrase (True). If Not, (False) it is the reset flow without recovery phrase after acknowledging there could be loss of funds",
									"type": "boolean"
								}
							},
							"required": [
								"site_redirect",
								"platform",
								"account_type",
								"with_recovery_phrase"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user tried to recover his account by resetting his password but it failed for some reasons. The alternative when it is successful is Account Password Reset.",
				"name": "Account Recovery Failed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "recovery_v1",
						"source": [
							"client",
							"backend"
						]
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"account_type": {
									"description": "What account we are talking about : USERKEY account : the Private Key (non custodial) wallet. CUSTODIAL : the custodial account allowing user to access their Trading, Savings, and/or Exchange wallets",
									"enum": [
										"CUSTODIAL",
										"USERKEY"
									],
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"exchange": {
									"description": "Parameters about the exchange account",
									"properties": {
										"two_fa_mode": {
											"description": "Whether the exchange account has 2FA set up",
											"type": "boolean"
										},
										"user_id": {
											"description": "Exchange user credentials ID",
											"type": "string"
										}
									},
									"required": [
									],
									"type": "object"
								},
								"mergeable": {
									"description": "Indicates if possible to merge two unlinked accounts",
									"type": "boolean"
								},
								"platform": {
									"description": "what platform the account is for",
									"enum": [
										"WALLET",
										"EXCHANGE"
									],
									"type": "string"
								},
								"site_redirect": {
									"description": "In reset : Whether the user is being redirected to the exchange or wallet",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"upgradeable": {
									"description": "Indicates if possible to upgrade to a new unified Blockchain.com Account",
									"type": "boolean"
								},
								"wallet": {
									"description": "Parameters about the wallet account",
									"properties": {
										"auth_type": {
											"description": "The wallet 2FA type that is enforced.",
											"enum": [
												"0_NONE",
												"1_YUBIKEY",
												"2_EMAIL",
												"3_YUBIKEY_MTGOX",
												"4_GOOGLE_AUTHENTICATOR",
												"5_SMS"
											],
											"type": "string"
										},
										"exchange": {
											"description": "Parameters about the exchange account",
											"properties": {
												"two_fa_mode": {
													"description": "Whether the exchange account has 2FA set up",
													"properties": {
													},
													"required": [
													],
													"type": "object"
												},
												"user_id": {
													"description": "Exchange user credentials ID",
													"type": "object"
												}
											},
											"required": [
											],
											"type": "object"
										},
										"guid_first_four": {
											"description": "The first four characters of the wallet.guid field",
											"pattern": "^.{4,4}$",
											"type": "string"
										},
										"has_cloud_backup": {
											"description": "Whether the wallet has cloud backups",
											"type": "boolean"
										},
										"is_mobile_setup": {
											"description": "Whether the wallet has a mobile client set up",
											"type": "boolean"
										},
										"last_mnemonic_backup": {
											"description": "The last time, in unix timestamp, in which a wallet has their mnemonic backup verified",
											"type": "integer"
										},
										"mobile_device_type": {
											"description": "The type of device being verified",
											"enum": [
												"APP-Android",
												"APP-iOS"
											],
											"type": "string"
										},
										"nabu": {
											"description": "Parameter about the nabu account",
											"properties": {
												"recovery_eligible": {
													"description": "Whether the nabu user is eligible for recovery. Usually if account has value (> $300 or 1 payment method linked)",
													"type": "boolean"
												},
												"user_id": {
													"description": "The Nabu User ID. This is from the users table in nabu gateway",
													"type": "object"
												}
											},
											"required": [
											],
											"type": "object"
										}
									},
									"required": [
									],
									"type": "object"
								}
							},
							"required": [
								"site_redirect",
								"platform",
								"account_type"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user clicks on button which shows the widget to input the number.",
				"name": "Add Mobile Number Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "settings_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is using the Settings",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "A user has imported an address to the wallet by adding the PK",
				"name": "Address Imported",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "settings_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"currency": {
									"description": "",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"funds_transferred": {
									"description": "True if user transferred funds from the imported address to an existing wallet.",
									"type": "boolean"
								},
								"label_added": {
									"description": "True if the user added a label when importing address",
									"type": "boolean"
								},
								"platform": {
									"description": "From what platform the user is using the Settings",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"funds_transferred",
								"currency",
								"platform",
								"label_added"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "User enters and submits his address",
				"name": "Address Information Entered",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "onboarding_e1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is entering PII from",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Non custodial address Label was updated.",
				"name": "Address Label Edited",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "settings_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"currency": {
									"description": "",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is using the Settings",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"transaction_format": {
									"description": "Segwit format or Legacy format",
									"enum": [
										"LEGACY",
										"SEGWIT"
									],
									"type": "string"
								}
							},
							"required": [
								"transaction_format",
								"currency",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "A messaged signed by address' owner was verified ",
				"name": "Address Message Verified",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "settings_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"currency": {
									"description": "",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is using the Settings",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"currency"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Track each time the user opens the widget to verify a Bitcoin message.",
				"name": "Address Verify Message Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "settings_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is using the Settings",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Bitcoin address label edited from the addresses list.",
				"name": "Addresses Revealed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "settings_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"currency": {
									"description": "",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is using the Settings",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"transaction_format": {
									"description": "Segwit format or Legacy format",
									"enum": [
										"LEGACY",
										"SEGWIT"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"transaction_format",
								"currency"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user clicks on the widget or button to switch between native fiat and currency amounts",
				"name": "Amount Switched",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "swap_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the amount form is from. ",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"product": {
									"description": "for what product the user has switched the amount. BUY: buy crypto with Simplebuy product. SAVINGS : interest savings account product SELL: sell crypto with Simplebuy product. SEND : send product to send or move crypto.  SIMPLEBUY: either buy or sell transaction (prefer BUY or SELL if known). SWAP : swap product",
									"enum": [
										"BUY",
										"SAVINGS",
										"SELL",
										"SEND",
										"SIMPLEBUY",
										"SWAP"
									],
									"type": "string"
								},
								"switch_to": {
									"description": "whether the amount switches to FIAT or Crypto. If the users sees $100 and wants to enter amount in BTC, it will click on the button and trigger this event with switch_to = CRYPTO",
									"enum": [
										"CRYPTO",
										"FIAT"
									],
									"type": "string"
								}
							},
							"required": [
								"switch_to",
								"product",
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "User clicks to open site with information about Blockchain.com APIs.",
				"name": "Api Access Link Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "security_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is managing Security events\n",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "user backgrounds the application",
				"name": "Application Backgrounded",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-Android",
										"APP-iOS"
									],
									"type": "string"
								},
								"platfrom": {
									"description": "From Which platform (WALLET or EXCHANGE)\n",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platfrom"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "receive a crash notification from your app, but is not meant to supplant traditional crash reporting tools.",
				"name": "Application Crashed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-Android",
										"APP-iOS"
									],
									"type": "string"
								},
								"platfrom": {
									"description": "From Which platform (WALLET or EXCHANGE)\n",
									"enum": [
										" WALLET",
										"EXCHANGE"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platfrom"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "This event fires when a user first opens your mobile application. Note, if the user never opens your app after installing, we will not be able to collect this event.",
				"name": "Application Installed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"build": {
									"description": "The build number of the installed app.\n",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-Android",
										"APP-iOS"
									],
									"type": "string"
								},
								"gps_adid": {
									"description": "the google play store advertising identifier",
									"type": "string"
								},
								"install_begin_timestamp_server_seconds": {
									"description": "The timestamp in seconds when the install started",
									"type": "number"
								},
								"install_referrer": {
									"description": "The referrer from the google play store referrer api",
									"type": "string"
								},
								"platform": {
									"description": "From Which platform (WALLET or EXCHANGE)\n",
									"enum": [
										" WALLET",
										"EXCHANGE"
									],
									"type": "string"
								},
								"version": {
									"description": "The version installed.",
									"type": "string"
								}
							},
							"required": [
								"platform",
								"version",
								"build",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "This event fires when a user first opens your mobile application. Note, if the user never opens your app after installing, we will not be able to collect this event.",
				"name": "Application Opened",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"build": {
									"description": "The build number of the installed app.\n",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-Android",
										"APP-iOS"
									],
									"type": "string"
								},
								"from_background": {
									"description": "If application transitioned from “Background” to “Inactive” state prior to foregrounding (as opposed to from “Not Running” state).",
									"type": "boolean"
								},
								"platform": {
									"description": "From Which platform (WALLET or EXCHANGE)\n",
									"enum": [
										" EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"referring_application": {
									"description": "The value of UIApplicationLaunchOptionsSourceApplicationKey from launchOptions. Automatically collected on iOS only.",
									"type": "string"
								},
								"url": {
									"description": "The value of UIApplicationLaunchOptionsURLKey from launchOptions. Collected on iOS only.",
									"type": "string"
								},
								"version": {
									"description": "The version installed.",
									"type": "string"
								}
							},
							"required": [
								"device",
								"from_background",
								"version",
								"build",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "user backgrounds the application",
				"name": "Application Uninstalled",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-Android",
										"APP-iOS"
									],
									"type": "string"
								},
								"platform": {
									"description": "From Which platform (WALLET or EXCHANGE)\n",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "user updates the application.",
				"name": "Application Updated",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"build": {
									"description": "The build number of the installed app.\n",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-Android",
										"APP-iOS"
									],
									"type": "string"
								},
								"installed_version": {
									"description": "Which version was installed the first time.",
									"type": "string"
								},
								"platfrom": {
									"description": "From Which platform (WALLET or EXCHANGE)\n",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"previous_build": {
									"description": "The previously recorded build.",
									"type": "string"
								},
								"previous_version": {
									"description": "The previously recorded version.",
									"type": "string"
								},
								"version": {
									"description": "The version installed.",
									"type": "string"
								}
							},
							"required": [
								"version",
								"build",
								"device",
								"platfrom"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user sets the time period for the auto log out feature : after n minutes, the user automatically logs out.",
				"name": "Auto Logout Period Set",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "settings_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"minutes": {
									"description": "minutes set for the max inactivity time period",
									"type": "integer"
								},
								"platform": {
									"description": "From what platform the user is using the Settings",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"minutes",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "A user's bank account state is updated",
				"name": "Bank Account State Triggered",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"withdraw_v1",
							"settings_v1"
						],
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"bank_name": {
									"description": "What is the bank name. Found in extra_attributes -> 'bankName'. For example, BARCLAYS BANK PLC. Could be empty",
									"pattern": "",
									"type": "string"
								},
								"currency": {
									"description": "What fiat currency the bank account is for",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"entity": {
									"description": "Payment Entity. Found in distinct(extra_attributes -> 'entity') and could be empty (optional). For example, Fintecture(EU) or \"Safeconnect(UK)\"",
									"type": "string"
								},
								"institution_name": {
									"description": "",
									"type": "string"
								},
								"partner": {
									"description": "What is the bank partner. Found in partner column. Should be all upper case like in the table",
									"pattern": "",
									"type": "string"
								},
								"service": {
									"description": "Whether this is ACH, OPEN_BANK. This does not apply for bank accounts, so set value to BANK_ACCOUNT in that case. You could know this by looking at account_ref which is either \"ach_account\" -> ACH or \"open_banking\" -> OPEN_BANKING",
									"enum": [
										"ACH",
										"BANK_ACCOUNT",
										"OPEN_BANKING"
									],
									"type": "string"
								},
								"state": {
									"description": "The updated state of the bank account",
									"enum": [
										"ACTIVE",
										"BLOCKED",
										"CREATED",
										"FRAUD_REVIEW",
										"PENDING"
									],
									"type": "string"
								},
								"type": {
									"description": "What type of account it is. BANK_TRANSFER_ACCOUNT is renamed into BANK_TRANSFER and is for open banking and ach",
									"enum": [
										"BANK_ACCOUNT",
										"BANK_TRANSFER"
									],
									"type": "string"
								}
							},
							"required": [
								"currency",
								"partner",
								"type",
								"state"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"name": "Beneficiary Updated",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"card_decline_code": {
									"description": "Common card decline code shared between acquirers",
									"type": [
										"string",
										"null"
									]
								},
								"card_generic_decline_code": {
									"description": "Card decline code (acquirer specific)",
									"type": [
										"string",
										"null"
									]
								},
								"currency": {
									"description": "",
									"pattern": "^[A-Z0-9]{1,15}$",
									"type": "string"
								},
								"institution_name": {
									"description": "",
									"type": "string"
								},
								"partner": {
									"description": "The card partner. From the partner column. Should be all upper case like in the table.",
									"pattern": "^[A-Z0-9_]{1,15}$",
									"type": "string"
								},
								"processing_account": {
									"description": "The accounts from the processor. They are independent accounts (api key, jurisdictions, etc.). There could be many accounts for the same processor. Should be snake case like in the database ! For example : stripe_uk1, stripe_us1, checkoutdotcom_uk1 or checkoutdotcom_us1",
									"type": "string"
								},
								"processor": {
									"description": "The payment partner that is processing our payments and that is linked to the beneficiary account. For cards, this is the acquirer. Should be upper case ! For example : SIGNATURE, LHV, STRIPE EVERYPAY, CHECKOUT_COM, etc.",
									"type": "string"
								},
								"state": {
									"description": "",
									"enum": [
										"ACTIVE",
										"BLOCKED",
										"CREATED",
										"FRAUD_REVIEW",
										"PENDING"
									],
									"type": "string"
								},
								"type": {
									"description": "",
									"enum": [
										"BANK_ACCOUNT",
										"BANK_TRANSFER",
										"CARD",
										"CRYPTO"
									],
									"type": "string"
								}
							},
							"required": [
								"type",
								"processor",
								"currency",
								"partner",
								"state"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Face Id or fingerprint security layer for mobile app was enabled or disabled.",
				"name": "Biometrics Updated",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "security_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"is_enabled": {
									"description": "Face Id was enabled or disabled.",
									"type": "boolean"
								},
								"platform": {
									"description": "From what platform the user is managing Security events",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"is_enabled",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user enters and submits the amount for a buy transaction",
				"name": "Buy Amount Entered",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"simplebuy_v1",
							"buy_rec",
							"simple_trade_e1"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"frequency": {
									"description": "What is the recurring frequency of the buy. Set it as ONE_TIME if it is not a recurring buy",
									"enum": [
										"BI_WEEKLY",
										"DAILY",
										"MONTHLY",
										"ONE_TIME",
										"WEEKLY"
									],
									"type": "string"
								},
								"input_amount": {
									"description": "The amount for the input currency ",
									"type": "number"
								},
								"input_currency": {
									"description": "Currency symbol for the currency being paid in exchange for some crypto. For example USD",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"max_card_limit": {
									"description": "What is the maximum amount (in input_currency) being allowed for the Card order. Should be empty for other payment types. Amount usually recorded as a float. If 500 EUR, record 500.",
									"type": "number"
								},
								"output_currency": {
									"description": "Currency symbol for the currency being received. For example BTC",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"payment_method": {
									"description": "The payment method used for the order",
									"enum": [
										"APPLE_PAY",
										"BANK_TRANSFER",
										"FUNDS",
										"GOOGLE_PAY",
										"PAYMENT_CARD"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user wants to buy from",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"input_currency",
								"input_amount",
								"device",
								"platform",
								"output_currency"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user clicked on the widget or button which sets pre selected amounts to the order\n",
				"name": "Buy Amount Helper Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "simple_trade_e1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"amount": {
									"description": "What amount in amount_currency the user clicks on ",
									"type": "number"
								},
								"amount_currency": {
									"description": "What currency  for the amount selected",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"WEB"
									],
									"type": "string"
								},
								"input_currency": {
									"description": "Currency symbol for the currency being paid in exchange for some crypto. For example USD",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"output_currency": {
									"description": "Currency symbol for the currency being received. For example BTC",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"platform": {
									"description": "From what platform the amount is triggered",
									"enum": [
										"EXCHANGE"
									],
									"type": "string"
								}
							},
							"required": [
								"amount_currency",
								"input_currency",
								"output_currency",
								"platform",
								"device",
								"amount"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user clicked on the widget or button which sets the max amount allowed or possible to the order.",
				"name": "Buy Amount Max Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"simplebuy_v1",
							"simple_trade_e1"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"amount": {
									"description": "Max amount (input_currency) displayed when clicked. example $25000",
									"type": "number"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"input_currency": {
									"description": "Currency symbol for the currency being paid in exchange for some crypto. For example USD",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"max_card_limit": {
									"description": "What is the maximum amount (in input_currency) being allowed for the Card order. Should be empty for other payment types. Amount usually recorded as a float. If 500 EUR, record 500.",
									"type": "number"
								},
								"output_currency": {
									"description": "Currency symbol for the currency being received. For example BTC",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"payment_type": {
									"description": "What payment type is selected : \nBANK_ACCOUNT: funds sent from a bank account. \nBANK_TRANSFER : Funds sent from Linked account via Open Banking or ACH. \nFUNDS: Funds taken from available funds in fiat wallet. \nPAYMENT_CARD:  by debit or credit card",
									"enum": [
										"APPLE_PAY",
										"BANK_ACCOUNT",
										"BANK_TRANSFER",
										"FUNDS",
										"GOOGLE_PAY",
										"PAYMENT_CARD"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user wants to buy from",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"output_currency",
								"device",
								"input_currency",
								"payment_type",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user clicked on the widget or button which sets the min amount allowed or possible to the order.",
				"name": "Buy Amount Min Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "simplebuy_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"amount_currency": {
									"description": "If the button explicitly displays the amount in a specific currency, what is the currency being clicked on for the min amount",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"input_currency": {
									"description": "Currency symbol for the currency being paid in exchange for some crypto. For example USD",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"output_currency": {
									"description": "Currency symbol for the currency being received. For example BTC",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"platform": {
									"description": "What platform the user wants to buy from",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device",
								"output_currency",
								"input_currency"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Buy order submitted by the user was cancelled (when updating a simple transaction with final state CANCELED)",
				"name": "Buy Cancelled",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"simplebuy_v1",
							"buy_rec"
						],
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device the payment was made from",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"fee_amount": {
									"description": "Fee (in \"currency\") being charged for the payment.",
									"type": "number"
								},
								"fee_amount_usd": {
									"description": "Amount in USD payed by the user.",
									"type": "number"
								},
								"input_amount": {
									"description": "The amount for the input currency, usually as a float. For USD, it should be for example 1.23, meaning 1.23 USD",
									"type": "number"
								},
								"input_amount_usd": {
									"description": "The amount paid by the user in USD, usually as a float. it should be for example 10.23, meaning 10.23 USD",
									"type": "number"
								},
								"input_currency": {
									"description": "Currency symbol for the currency being paid by the user in exchange for some crypto. For example USD\n",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"is_recurring_buy": {
									"description": "Whether the buy order was created automatically by a recurring buy order. It is when no \"recurringBuyId\" is found in input_attributes",
									"type": "boolean"
								},
								"output_amount": {
									"description": "The amount for the output currency, usually as a float. For BTC, it should be for example 1.23, meaning 1.23 BTC\n",
									"type": "number"
								},
								"output_currency": {
									"description": "Currency symbol for the currency being received by the user. For example BTC\n",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"payment_id": {
									"description": "id of the payment (id of the transaction from nabu payments)",
									"type": "string"
								},
								"payment_method": {
									"description": "The payment method used for the buy order. (the paymentType in simple_transactions input_attributes)",
									"enum": [
										"BANK_ACCOUNT",
										"BANK_TRANSFER",
										"FUNDS",
										"PAYMENT_CARD"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the event was started from. (WALLET if product=SIMPLEBUY and EXCHANGE if product=MERCURY\n",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"product": {
									"description": "The Product for which the buy order is (the product columns of the simple_transactions table)",
									"enum": [
										"MERCURY",
										"SIMPLEBUY"
									],
									"type": "string"
								},
								"quote_id": {
									"description": "The id used for the new pricing fee model (WALLET)",
									"type": "string"
								},
								"recurring_buy_id": {
									"description": "If the buy order was generated from a recurring buy, what is that recurringBuyId. Null otherwise",
									"type": [
										"string",
										"null"
									]
								},
								"transaction_id": {
									"description": "The id of the transaction for the buy order (the id of the simple_transactions table in nabu gateway)",
									"type": "string"
								}
							},
							"required": [
								"platform",
								"input_currency",
								"payment_method",
								"product",
								"output_currency"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Buy order submitted by the user is completed (when updating a simple transaction with final state FINISHED)",
				"name": "Buy Completed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"simplebuy_v1",
							"buy_rec"
						],
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device the payment was made from",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"fee_amount": {
									"description": "Fee (in \"currency\") being charged for the payment.",
									"type": "number"
								},
								"fee_amount_usd": {
									"description": "Amount in USD payed by the user.",
									"type": "number"
								},
								"input_amount": {
									"description": "The amount for the input currency, usually as a float. For BTC, it should be for example 1.23, meaning 1.23 BTC",
									"type": "number"
								},
								"input_amount_usd": {
									"description": "The amount paid by the user in USD, usually as a float. it should be for example 10.23, meaning 10.23 USD",
									"type": "number"
								},
								"input_currency": {
									"description": "Currency symbol for the currency being paid by the user in exchange for some crypto. For example USD\n",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"is_recurring_buy": {
									"description": "Whether the buy order was created automatically by a recurring buy order. It is when no \"recurringBuyId\" is found in input_attributes",
									"type": "boolean"
								},
								"output_amount": {
									"description": "The amount for the output currency, usually as a float. For BTC, it should be for example 1.23, meaning 1.23 BTC\n",
									"type": "number"
								},
								"output_currency": {
									"description": "Currency symbol for the currency being received by the user. For example BTC\n",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"payment_id": {
									"description": "id of the payment (id of the transaction from nabu payments)",
									"type": "string"
								},
								"payment_method": {
									"description": "The payment method used for the buy order. (the paymentType in simple_transactions input_attributes)",
									"enum": [
										"BANK_ACCOUNT",
										"BANK_TRANSFER",
										"FUNDS",
										"PAYMENT_CARD"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the event was started from. (WALLET if product=SIMPLEBUY and EXCHANGE if product=MERCURY\n",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"product": {
									"description": "The Product for which the buy order is (the product columns of the simple_transactions table)",
									"enum": [
										"MERCURY",
										"SIMPLEBUY"
									],
									"type": "string"
								},
								"quote_id": {
									"description": "The id used for the new pricing fee model (WALLET)",
									"type": "string"
								},
								"recurring_buy_id": {
									"description": "If the buy order was generated from a recurring buy, what is that recurringBuyId. Null otherwise",
									"type": [
										"string",
										"null"
									]
								},
								"spread_percentage": {
									"description": "Spread percentage applied to the exchange rate",
									"type": "number"
								},
								"transaction_id": {
									"description": "The id of the transaction for the buy order (the id of the simple_transactions table in nabu gateway)",
									"type": "string"
								}
							},
							"required": [
								"input_currency",
								"input_amount_usd",
								"spread_percentage",
								"input_amount",
								"payment_method",
								"product",
								"output_currency"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "User submits a buy order (when creating a simple transactions with state CREATED)",
				"name": "Buy Created",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"simplebuy_v1",
							"buy_rec"
						],
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device the payment was made from",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"fee_amount": {
									"description": "Fee (in \"currency\") being charged for the payment.",
									"type": "number"
								},
								"fee_amount_usd": {
									"description": "Amount in USD payed by the user.",
									"type": "number"
								},
								"input_amount": {
									"description": "The expected amount for the input currency, usually as a float. For BTC, it should be for example 1.23, meaning 1.23 BTC. Exact amount is only in Buy Completed",
									"type": "number"
								},
								"input_amount_usd": {
									"description": "The amount paid by the user in USD, usually as a float. it should be for example 10.23, meaning 10.23 USD",
									"type": "number"
								},
								"input_currency": {
									"description": "Currency symbol for the currency being paid by the user in exchange for some crypto. For example USD\n",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"is_recurring_buy": {
									"description": "Whether the buy order was created automatically by a recurring buy order. It is when no \"recurringBuyId\" is found in input_attributes",
									"type": "boolean"
								},
								"output_amount": {
									"description": "The expected amount for the output currency, usually as a float. For BTC, it should be for example 1.23, meaning 1.23 BTC. Exact amount is only in Buy Completed",
									"type": "number"
								},
								"output_currency": {
									"description": "Currency symbol for the currency being received by the user. For example BTC\n",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"payment_id": {
									"description": "id of the payment (id of the transaction from nabu payments)",
									"type": "string"
								},
								"payment_method": {
									"description": "The payment method used for the buy order. (the paymentType in simple_transactions input_attributes)",
									"enum": [
										"BANK_ACCOUNT",
										"BANK_TRANSFER",
										"FUNDS",
										"PAYMENT_CARD"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the event was started from. (WALLET if product=SIMPLEBUY and EXCHANGE if product=MERCURY\n",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"product": {
									"description": "The Product for which the buy order is (the product columns of the simple_transactions table)",
									"enum": [
										"MERCURY",
										"SIMPLEBUY"
									],
									"type": "string"
								},
								"quote_id": {
									"description": "The id used for the new pricing fee model (WALLET)",
									"type": "string"
								},
								"recurring_buy_id": {
									"description": "If the buy order was generated from a recurring buy, what is that recurringBuyId. Null otherwise",
									"type": [
										"string",
										"null"
									]
								},
								"transaction_id": {
									"description": "The id of the transaction for the buy order (the id of the simple_transactions table in nabu gateway)",
									"type": "string"
								}
							},
							"required": [
								"payment_method",
								"product",
								"output_currency",
								"platform",
								"input_currency"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Buy order submitted by the user had failed (when updating a simple transaction with final state FAILED)",
				"name": "Buy Expired",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"simplebuy_v1",
							"buy_rec"
						],
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device the payment was made from",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"fee_amount": {
									"description": "Fee (in \"currency\") being charged for the payment.",
									"type": "number"
								},
								"fee_amount_usd": {
									"description": "Amount in USD payed by the user.",
									"type": "number"
								},
								"input_amount": {
									"description": "The amount for the input currency, usually as a float. For BTC, it should be for example 1.23, meaning 1.23 BTC",
									"type": "number"
								},
								"input_amount_usd": {
									"description": "The amount paid by the user in USD, usually as a float. it should be for example 10.23, meaning 10.23 USD",
									"type": "number"
								},
								"input_currency": {
									"description": "Currency symbol for the currency being paid by the user in exchange for some crypto. For example USD\n",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"is_recurring_buy": {
									"description": "Whether the buy order was created automatically by a recurring buy order. It is when no \"recurringBuyId\" is found in input_attributes",
									"type": "boolean"
								},
								"output_amount": {
									"description": "The amount for the output currency, usually as a float. For BTC, it should be for example 1.23, meaning 1.23 BTC\n",
									"type": "number"
								},
								"output_currency": {
									"description": "Currency symbol for the currency being received by the user. For example BTC\n",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"payment_id": {
									"description": "id of the payment (id of the transaction from nabu payments)",
									"type": "string"
								},
								"payment_method": {
									"description": "The payment method used for the buy order. (the paymentType in simple_transactions input_attributes)",
									"enum": [
										"BANK_ACCOUNT",
										"BANK_TRANSFER",
										"FUNDS",
										"PAYMENT_CARD"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the event was started from. (WALLET if product=SIMPLEBUY and EXCHANGE if product=MERCURY\n",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"product": {
									"description": "The Product for which the buy order is (the product columns of the simple_transactions table)",
									"enum": [
										"MERCURY",
										"SIMPLEBUY"
									],
									"type": "string"
								},
								"quote_id": {
									"description": "The id used for the new pricing fee model (WALLET)",
									"type": "string"
								},
								"recurring_buy_id": {
									"description": "If the buy order was generated from a recurring buy, what is that recurringBuyId. Null otherwise",
									"type": [
										"string",
										"null"
									]
								},
								"transaction_id": {
									"description": "The id of the transaction for the buy order (the id of the simple_transactions table in nabu gateway)",
									"type": "string"
								}
							},
							"required": [
								"output_currency",
								"input_currency",
								"payment_method",
								"platform",
								"product"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Buy order submitted by the user had expired (when updating a simple transaction with final state EXPIRED)",
				"name": "Buy Failed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"simplebuy_v1",
							"buy_rec"
						],
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device the payment was made from",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"fee_amount": {
									"description": "Fee (in \"currency\") being charged for the payment.",
									"type": "number"
								},
								"fee_amount_usd": {
									"description": "Amount in USD payed by the user.",
									"type": "number"
								},
								"input_amount": {
									"description": "The amount for the input currency, usually as a float. For BTC, it should be for example 1.23, meaning 1.23 BTC",
									"type": "number"
								},
								"input_amount_usd": {
									"description": "The amount paid by the user in USD, usually as a float. it should be for example 10.23, meaning 10.23 USD",
									"type": "number"
								},
								"input_currency": {
									"description": "Currency symbol for the currency being paid by the user in exchange for some crypto. For example USD\n",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"is_recurring_buy": {
									"description": "Whether the buy order was created automatically by a recurring buy order. It is when no \"recurringBuyId\" is found in input_attributes",
									"type": "boolean"
								},
								"output_amount": {
									"description": "The amount for the output currency, usually as a float. For BTC, it should be for example 1.23, meaning 1.23 BTC\n",
									"type": "number"
								},
								"output_currency": {
									"description": "Currency symbol for the currency being received by the user. For example BTC\n",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"payment_id": {
									"description": "id of the payment (id of the transaction from nabu payments)",
									"type": "string"
								},
								"payment_method": {
									"description": "The payment method used for the buy order. (the paymentType in simple_transactions input_attributes)",
									"enum": [
										"BANK_ACCOUNT",
										"BANK_TRANSFER",
										"FUNDS",
										"PAYMENT_CARD"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the event was started from. (WALLET if product=SIMPLEBUY and EXCHANGE if product=MERCURY\n",
									"enum": [
									],
									"type": "string"
								},
								"product": {
									"description": "The Product for which the buy order is (the product columns of the simple_transactions table)",
									"enum": [
										"MERCURY",
										"SIMPLEBUY"
									],
									"type": "string"
								},
								"quote_id": {
									"description": "The id used for the new pricing fee model (WALLET)",
									"type": "string"
								},
								"recurring_buy_id": {
									"description": "If the buy order was generated from a recurring buy, what is that recurringBuyId. Null otherwise",
									"type": [
										"string",
										"null"
									]
								},
								"transaction_id": {
									"description": "The id of the transaction for the buy order (the id of the simple_transactions table in nabu gateway)",
									"type": "string"
								}
							},
							"required": [
								"product",
								"platform",
								"output_currency",
								"input_currency",
								"payment_method"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user clicks and submits the frequency he wants to select for the buy order",
				"name": "Buy Frequency Selected",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"simplebuy_v1",
							"buy_rec"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"frequency": {
									"description": "What is the recurring frequency of the buy. Set it as ONE_TIME if it is not a recurring buy",
									"enum": [
										"BI_WEEKLY",
										"DAILY",
										"MONTHLY",
										"ONE_TIME",
										"WEEKLY"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user wants to buy from",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"frequency",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user clicked on a Learn More widget in the end of the buy flow",
				"name": "Buy Learn More Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "simplebuy_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user wants to buy from",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"type": {
									"description": "What does the user want to learn more about ? WITHDRAWAL_LOCK",
									"enum": [
										"WITHDRAWAL_LOCK"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"type"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user has selected the payment method he wants to use for buying crypto.",
				"name": "Buy Payment Method Selected",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "simplebuy_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"payment_type": {
									"description": "What payment type is selected : \nBANK_ACCOUNT: funds sent from a bank account. \nBANK_TRANSFER : Funds sent from Linked account via Open Banking or ACH. \nFUNDS: Funds taken from available funds in fiat wallet. \nPAYMENT_CARD:  by debit or credit card",
									"enum": [
										"APPLE_PAY",
										"BANK_ACCOUNT",
										"BANK_TRANSFER",
										"FUNDS",
										"GOOGLE_PAY",
										"PAYMENT_CARD"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user wants to buy from",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"payment_type",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Buy order submitted by the user is rejected. it is not being created at all",
				"name": "Buy Rejected",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"simplebuy_v1",
							"buy_rec"
						],
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device the payment was made from",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"error_reason": {
									"description": "Error message related to the rejection. This is more detailed than the rejection_reason ",
									"type": "string"
								},
								"fee_amount": {
									"description": "Fee (in \"currency\") being charged for the payment.",
									"type": "number"
								},
								"fee_amount_usd": {
									"description": "Amount in USD payed by the user.",
									"type": "number"
								},
								"input_amount": {
									"description": "The expected amount for the input currency, usually as a float. For BTC, it should be for example 1.23, meaning 1.23 BTC. The exact amount might not be known.",
									"type": "number"
								},
								"input_amount_usd": {
									"description": "The amount paid by the user in USD, usually as a float. it should be for example 10.23, meaning 10.23 USD",
									"type": "number"
								},
								"input_currency": {
									"description": "Currency symbol for the currency being paid by the user in exchange for some crypto. For example USD\n",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"is_recurring_buy": {
									"description": "Whether the buy order was created automatically by a recurring buy order. It is when no \"recurringBuyId\" is found in input_attributes",
									"type": "boolean"
								},
								"output_amount": {
									"description": "The amount for the output currency, usually as a float. For BTC, it should be for example 1.23, meaning 1.23 BTC. The exact amount might not be known.\n",
									"type": "number"
								},
								"output_currency": {
									"description": "Currency symbol for the currency being received by the user. For example BTC\n",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"payment_id": {
									"description": "id of the payment (id of the transaction from nabu payments)",
									"type": "string"
								},
								"payment_method": {
									"description": "The payment method used for the buy order. (the paymentType in simple_transactions input_attributes)",
									"enum": [
										"BANK_ACCOUNT",
										"BANK_TRANSFER",
										"FUNDS",
										"PAYMENT_CARD"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the event was started from. (WALLET if product=SIMPLEBUY and EXCHANGE if product=MERCURY\n",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"product": {
									"description": "The Product for which the buy order is (the product columns of the simple_transactions table)",
									"enum": [
										"MERCURY",
										"SIMPLEBUY"
									],
									"type": "string"
								},
								"quote_id": {
									"description": "The id used for the new pricing fee model (WALLET)",
									"type": "string"
								},
								"recurring_buy_id": {
									"description": "If the buy order was generated from a recurring buy, what is that recurringBuyId. Null otherwise",
									"type": [
										"string",
										"null"
									]
								},
								"rejection_details": {
									"description": "More details about the rejection, if more context would be useful to know",
									"type": "string"
								},
								"rejection_reason": {
									"description": "The main reason why creating the buy order was rejected.",
									"enum": [
										"ARITHMETIC",
										"BAD_QUOTE_SPREAD",
										"FEATURE_DISABLED",
										"INSUFFICIENT_FUNDS",
										"INTERNAL_SERVER_ERROR",
										"INVALID_PAYMENT_METHOD",
										"MISSING_RATE",
										"USER_LIMITS_EXCEEDED"
									],
									"type": "string"
								}
							},
							"required": [
								"product",
								"output_currency",
								"input_currency",
								"platform",
								"rejection_reason",
								"payment_method"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Buy or Sell button which brings the user to the Buy Sell product (wallet) or SimpleTrade flow (exchange) is clicked.",
				"name": "Buy Sell Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"simplebuy_v1",
							"sell_v1",
							"simple_trade_e1"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"origin": {
									"description": "What button we are referring to. \nBUY_WIDGET: buy widget from Explorer. \nCURRENCY_PAGE : cta or menu on the coin page next to balance. \nDASHBOARD_PROMO : announcement card or promo on dashboard. \nDCA_EXPLAINER : from the DCA (Dollar Cost Averaging)) Info Viewed.\nDEEP_LINK : any deep link other than BUY_WIDGET\nNAVIGATION : navigation bar.\nPENDING_ORDER : user looks up details about pending order.\nPRICE_CHART (web only). \nSAVINGS (web only) : comes from interest savings product. \nSAVINGS_CONFIRMATION : from the confirmation screen of an interest savings deposit.\nSEND: comes from Send product. \nSELL (web only) : from sell product. \nSIMPLETRADE: from simple trade general product page \nTRANSACTION_DETAILS : from historical transaction details. \nTRANSACTION_LIST : from the historical transaction list\nWELCOME : from the onboarding flow. ",
									"enum": [
										"BUY_WIDGET",
										"CURRENCY_PAGE",
										"DASHBOARD_PROMO",
										"DCA_EXPLAINER",
										"DEEP_LINK",
										"EMPTY_FEED",
										"LINK_BANK",
										"NAVIGATION",
										"PENDING_ORDER",
										"PRICE_CHART",
										"SAVINGS",
										"SAVINGS_CONFIRMATION",
										"SELL",
										"SEND",
										"SETTINGS",
										"SIMPLETRADE",
										"TRANSACTION_DETAILS",
										"TRANSACTION_LIST",
										"WELCOME"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is clicking from",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"type": {
									"description": "Whether this is a BUY or SELL click. Sometimes it is the same button (e.g. Buy/Sell in navigation bar), in that case leave empty. Otherwise add whether it is Buy or Sell.",
									"enum": [
										"BUY",
										"SELL"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"origin",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Buy or Sell page or screen is viewed. This is the Buy Sell SimpleBuy (wallet) or SimpleTrade (exchange) product flow",
				"name": "Buy Sell Viewed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"simplebuy_v1",
							"simple_trade_e1"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"": {
									"description": "",
									"type": "object"
								},
								"device": {
									"description": "Device type from where the event was triggered.\n",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"path": {
									"description": "Path portion of the URL of the page. Equivalent to canonical path which defaults to location.pathname from the DOM API.",
									"type": "string"
								},
								"platform": {
									"description": "What platform the page viewed belongs to",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"referrer": {
									"description": "Full URL of the previous page. Equivalent to document.referrer from the DOM API.",
									"type": "string"
								},
								"search": {
									"description": "Query string portion of the URL of the page. Equivalent to location.search from the DOM API.",
									"type": "string"
								},
								"title": {
									"description": "Title of the page. Equivalent to document.title from the DOM API.",
									"type": "string"
								},
								"type": {
									"description": "Whether this is a BUY or SELL screen or page viewed. Sometimes it is the same button (e.g. Buy/Sell in navigation bar), in that case leave empty. Otherwise add whether it is Buy or Sell.",
									"enum": [
										"BUY",
										"SELL"
									],
									"type": "string"
								},
								"url": {
									"description": "Full URL of the page. First we look for the canonical url. If the canonical url is not provided, we use location.href from the DOM API.",
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user enters and submits the amount he wants to buy on the Buy Widget from the Explorer or Blockchain.com",
				"name": "Buy Widget Amount Entered",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"explorer",
							"dot_com"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "What device the event is tracked from",
									"enum": [
										"WEB"
									],
									"type": "string"
								},
								"input_amount": {
									"description": "\n",
									"type": "number"
								},
								"input_currency": {
									"description": "Currency symbol for the currency being paid in exchange for some crypto. For example USD",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"output_currency": {
									"description": "Currency symbol for the currency being received. For example BTC",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"platform": {
									"description": "What platform the event is referring to",
									"enum": [
										"BLOCKCHAIN_COM",
										"EXPLORER"
									],
									"type": "string"
								}
							},
							"required": [
								"input_currency",
								"input_amount",
								"output_currency",
								"device",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user clicks on a button or cta which opens the buy widget modal.",
				"name": "Buy Widget Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"explorer",
							"dot_com"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"currency": {
									"description": "If available, what is the currency the user wants to buy ? For example in the Explorer crypto prices page, did he click on a specific currency ?",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "What device the event is tracked from",
									"enum": [
										"WEB"
									],
									"type": "string"
								},
								"origin": {
									"description": "From which page was the widget clicked? HOME : Buy Crypto from landing page or explorer home page. CRYPTO_PRICES : from the explorer general price page with all the coins listed. CRYPTO_PRICE_DETAILS : from the explorer price page about a specific crypto",
									"enum": [
										"CRYPTO_PRICES",
										"CRYPTO_PRICE_DETAILS",
										"HOME",
										"NAVIGATION",
										"WIDGET"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the event is referring to",
									"enum": [
										"BLOCKCHAIN_COM",
										"EXPLORER"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform",
								"origin"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The device checks whether the camera access is authorised by the user.",
				"name": "Camera Permission Checked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "wconnect",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device the user was requested to access the camera from",
									"enum": [
										"APP-iOS"
									],
									"type": "string"
								},
								"is_authorised": {
									"description": "whether the camera access is authorised",
									"type": "boolean"
								},
								"origin": {
									"description": "Whether the permission was checked during KYC verification or when scanning a QR_CODE",
									"enum": [
										"KYC",
										"QR_CODE"
									],
									"type": "string"
								},
								"platform": {
									"description": "Platform the user is using wallet connect from. Currently it will be only available from the WALLET",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform",
								"is_authorised",
								"origin"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user answers the request to provide access to the camera or not",
				"name": "Camera Permission Request Actioned",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "wconnect",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"action": {
									"description": "What action the user took on the request. ALLOW : the user allows the device to access the camera. REJECT : the user does not allow the device to access the camera",
									"enum": [
										"ALLOW",
										"REJECT"
									],
									"type": "string"
								},
								"device": {
									"description": "Device the user answered the request from",
									"enum": [
										"APP-iOS"
									],
									"type": "string"
								},
								"platform": {
									"description": "Platform the user is using wallet connect from. Currently it will be only available from the WALLET",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform",
								"action"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user shows intent to cancel the recurring buy order. it will  require further confirmation later",
				"name": "Cancel Recurring Buy Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "buy_rec",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"frequency": {
									"description": "What is the frequency of the recurring buy. Also called period in the backend.",
									"enum": [
										"BI_WEEKLY",
										"DAILY",
										"MONTHLY",
										"WEEKLY"
									],
									"type": "string"
								},
								"input_amount": {
									"description": "The amount for the input currency",
									"type": "number"
								},
								"input_currency": {
									"description": "Currency symbol for the currency being paid in exchange for some crypto. For example USD",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"origin": {
									"description": "What button we are referring to : RECURRING_BUY_DETAILS : When looking at the details of an active recurring buy. TRANSACTION_DETAILS : When looking at the details of the buy transaction that came from a recurring buy",
									"enum": [
										"RECURRING_BUY_DETAILS",
										"TRANSACTION_DETAILS"
									],
									"type": "string"
								},
								"output_currency": {
									"description": "Currency symbol for the currency being received. For example BTC",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"payment_method": {
									"description": "The payment method used for the recurring buy order",
									"enum": [
										"BANK_TRANSFER",
										"FUNDS",
										"PAYMENT_CARD"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user wants to set up recurring buy from",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"origin",
								"frequency",
								"input_amount",
								"output_currency",
								"input_currency",
								"device",
								"payment_method",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "A user's card is activated. (when adding an account state ACTIVE with extra_attributes ->> 'type'  = 'PAYMENT_CARD') ",
				"name": "Card State Triggered",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"simplebuy_v1",
							"settings_v1"
						],
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"card_decline_code": {
									"description": "Common card decline code shared between acquirers",
									"type": [
										"string",
										"null"
									]
								},
								"card_generic_decline_code": {
									"description": "Card decline code (acquirer specific)",
									"type": [
										"string",
										"null"
									]
								},
								"country_billing": {
									"description": "The country used in the billing address. extra_attributes -> 'billing_address' ->> 'country'",
									"pattern": "^[A-Z]{2}$",
									"type": "string"
								},
								"currency": {
									"description": "Currency of the card",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"institution_name": {
									"description": "",
									"type": "string"
								},
								"issuer": {
									"description": "What entity or bank issued the card, such as Barclays, Revolut etc. (extra_attributes -> 'card' ->> 'issuer' from account).",
									"type": "string"
								},
								"partner": {
									"description": "The card partner. From the partner column. Should be all upper case like in the table.",
									"type": "string"
								},
								"processing_account": {
									"description": "The accounts from the processor (=acquirer). They are independent accounts (api key, jurisdictions, etc.). There could be many accounts for the same processor. Should be snake case like in the database ! For example : stripe_uk1, stripe_us1, checkoutdotcom_uk1 or checkoutdotcom_us1",
									"type": "string"
								},
								"processor": {
									"description": "This is the acquirer, i.e. our payment partner that is processing our payments and that is linked to the card. Should be upper case ! For example : STRIPE, EVERYPAY, CHECKOUT_COM",
									"type": "string"
								},
								"state": {
									"description": "The updated state of the card",
									"enum": [
										"ACTIVE",
										"BLOCKED",
										"CREATED",
										"FRAUD_REVIEW",
										"PENDING"
									],
									"type": "string"
								},
								"type": {
									"description": "Type of card. from extra_attributes -> 'card' ->> 'type' from account, transformed to upper_case. visa -> VISA. master_card -> MASTER_CARD",
									"enum": [
										"MASTER_CARD",
										"VISA"
									],
									"type": "string"
								}
							},
							"required": [
								"partner",
								"state",
								"processor",
								"type",
								"country_billing",
								"currency"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user clicks on button which shows the widget to input the NEW number. On mobile this event is also activated when entering a number for the first time.",
				"name": "Change Mobile Number Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "settings_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.\n",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is using the Settings",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "User opens numpad interface to enter new Pin Code.",
				"name": "Change Pin Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "security_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is managing Security events",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user has scanned the QR code to recover the account from the cloud backup. The feature is available on web only. It is triggered on web when the client doing the recovery receives the confirmation, and on the mobile app when the app client scans the code.",
				"name": "Cloud Backup Code Scanned",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "recovery_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"exchange": {
									"description": "Parameters about the exchange account",
									"properties": {
										"two_fa_mode": {
											"description": "Whether the exchange account has 2FA set up",
											"type": "boolean"
										},
										"user_id": {
											"description": "Exchange user credentials ID",
											"type": "string"
										}
									},
									"required": [
									],
									"type": "object"
								},
								"mergeable": {
									"description": "Indicates if possible to merge two unlinked accounts",
									"type": "boolean"
								},
								"platform": {
									"description": "What platform the user is is recovering the account from",
									"enum": [
										"WALLET",
										"EXCHANGE"
									],
									"type": "string"
								},
								"site_redirect": {
									"description": "Whether the user is being redirected to the exchange or wallet",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"upgradeable": {
									"description": "Indicates if possible to upgrade to a new unified Blockchain.com Account",
									"type": "boolean"
								},
								"wallet": {
									"description": "Parameters about the wallet account",
									"properties": {
										"auth_type": {
											"description": "The wallet 2FA type that is enforced.",
											"enum": [
												"0_NONE",
												"1_YUBIKEY",
												"2_EMAIL",
												"3_YUBIKEY_MTGOX",
												"4_GOOGLE_AUTHENTICATOR",
												"5_SMS"
											],
											"type": "string"
										},
										"exchange": {
											"description": "Parameters about the exchange account",
											"properties": {
												"two_fa_mode": {
													"description": "Whether the exchange account has 2FA set up",
													"properties": {
													},
													"required": [
													],
													"type": "object"
												},
												"user_id": {
													"description": "Exchange user credentials ID",
													"type": "object"
												}
											},
											"required": [
											],
											"type": "object"
										},
										"guid_first_four": {
											"description": "The first four characters of the wallet.guid field",
											"pattern": "^.{4,4}$",
											"type": "string"
										},
										"has_cloud_backup": {
											"description": "Whether the wallet has cloud backups",
											"type": "boolean"
										},
										"is_mobile_setup": {
											"description": "Whether the wallet has a mobile client set up",
											"type": "boolean"
										},
										"last_mnemonic_backup": {
											"description": "The last time, in unix timestamp, in which a wallet has their mnemonic backup verified",
											"type": "integer"
										},
										"mobile_device_type": {
											"description": "The type of device being verified",
											"enum": [
												"APP-Android",
												"APP-iOS"
											],
											"type": "string"
										},
										"nabu": {
											"description": "Parameter about the nabu account",
											"properties": {
												"recovery_eligible": {
													"description": "Whether the nabu user is eligible for recovery. Usually if account has value (> $300 or 1 payment method linked)",
													"type": "boolean"
												},
												"user_id": {
													"description": "The Nabu User ID. This is from the users table in nabu gateway",
													"type": "object"
												}
											},
											"required": [
											],
											"type": "object"
										}
									},
									"required": [
									],
									"type": "object"
								}
							},
							"required": [
								"device",
								"site_redirect",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "A user has submitted a search on the price page for a token or asset.",
				"name": "Coin Search Submitted",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"explorer",
							"dot_com"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"currency": {
									"description": "Currency symbol for the currency being selected to trade by the user.",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "What device the event is tracked from",
									"enum": [
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is searching from. For now, on BLOCKCHAIN_COM, the search is on the navigation bar, while on the explorer the search is just below next to the breadcrumb",
									"enum": [
										"EXPLORER"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user clicks on some actions that the user can take after clicking on an app",
				"name": "Connected Dapp Actioned",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "wconnect",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"action": {
									"description": "What action the user is doing. LAUNCH or DISCONNECT",
									"enum": [
										"DISCONNECT",
										"LAUNCH"
									],
									"type": "string"
								},
								"app_name": {
									"description": "What is the name of the application being actioned on. Prefer \"Proper Case\" name rather than snake_case or camelCase",
									"type": "string"
								},
								"device": {
									"description": "Device the user user is using wallet connect from",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"origin": {
									"description": "What button we are referring to. APPS_LIST : the list of already connected apps",
									"enum": [
										"APPS_LIST"
									],
									"type": "string"
								},
								"platform": {
									"description": "Platform the user is using wallet connect from. Currently it will be only available from the WALLET",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"app_name",
								"action",
								"device",
								"platform",
								"origin"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "A button to view a connected app is clicked.",
				"name": "Connected Dapp Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "wconnect",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"app_name": {
									"description": "What is the name of the application being clicked on. Prefer \"Proper Case\" name rather than snake_case or camelCase",
									"type": "string"
								},
								"device": {
									"description": "Device the user user is using wallet connect from",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"origin": {
									"description": "What button we are referring to. APPS_LIST : the list of already connected apps",
									"enum": [
										"APPS_LIST"
									],
									"type": "string"
								},
								"platform": {
									"description": "Platform the user is using wallet connect from. Currently it will be only available from the WALLET",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform",
								"origin",
								"app_name"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The list of connected Apps is clicked",
				"name": "Connected Dapps List Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "wconnect",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "The device the user clicked on the button to view the list of Apps from",
									"enum": [
										"APP-iOS"
									],
									"type": "string"
								},
								"origin": {
									"description": "What button we are referring to. QR_CODE : when a link pops up after scanning a QR code. SETTINGS : from the settings",
									"enum": [
										"QR_CODE",
										"SETTINGS"
									],
									"type": "string"
								},
								"platform": {
									"description": "Platform the user is using wallet connect from. Currently it will be only available from the WALLET",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform",
								"origin"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The list of connected Apps is viewed",
				"name": "Connected Dapps List Viewed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "wconnect",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "The device the user viewed the list of Apps from",
									"enum": [
										"APP-iOS"
									],
									"type": "string"
								},
								"platform": {
									"description": "Platform the user is using wallet connect from. Currently it will be only available from the WALLET",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Allows user to handle crypto payment links in the web browser.",
				"name": "Crypto Link Handling Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "settings_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is using the Settings",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Enables user Wallet to handle crypto payment links in the web browser.",
				"name": "Crypto Link Handling Enabled",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "settings_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is using the Settings",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "A custodial transfer is completed. (when adding an entry to custodial_transfers from nabu gateway). This is done when moving funds between custodial accounts.",
				"name": "Custodial Transfer Completed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "interest_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"amount": {
									"description": "Amount being transferred, in the given currency. e.g. for 1.23 BTC, the amount is 1.23",
									"type": "number"
								},
								"amount_usd": {
									"description": "Amount (in USD) being transferred. e.g. for 10.23, for $10.23",
									"type": "number"
								},
								"currency": {
									"description": "What currency is being transferred",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"destination": {
									"description": "To what account type the funds are coming from. This is usually named as a product SAVINGS or SIMPLEBUY",
									"enum": [
										"SAVINGS",
										"SIMPLEBUY"
									],
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"origin": {
									"description": "From what account type the funds are coming from. This is usually named as the product like SAVINGS or SIMPLEBUY",
									"enum": [
										"SAVINGS",
										"SIMPLEBUY"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the event was started from. WALLET is the only option\n",
									"enum": [
										"WALLET"
									],
									"type": "string"
								},
								"transfer_id": {
									"description": "id of the custodial transfer",
									"type": "string"
								}
							},
							"required": [
								"amount_usd",
								"platform",
								"currency",
								"amount",
								"origin",
								"destination",
								"transfer_id"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "A custodial transfer failed. This is done when trying to move funds between custodial accounts.",
				"name": "Custodial Transfer Failed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "interest_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"amount": {
									"description": "Amount being transferred, in the given currency. e.g. for 1.23 BTC, the amount is 1.23",
									"type": "number"
								},
								"amount_usd": {
									"description": "Amount (in USD) being transferred. e.g. for 10.23, for $10.23",
									"type": "number"
								},
								"currency": {
									"description": "What currency is being transferred",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"destination": {
									"description": "To what account type the funds are coming from. This is usually named as a product SAVINGS or SIMPLEBUY",
									"enum": [
										"SAVINGS",
										"SIMPLEBUY"
									],
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"failure_reason": {
									"description": "Why the custodial transfer failed",
									"type": "string"
								},
								"origin": {
									"description": "From what account type the funds are coming from. This is usually named as the product like SAVINGS or SIMPLEBUY",
									"enum": [
										"SAVINGS",
										"SIMPLEBUY"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the event was started from. WALLET is the only option\n",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"currency",
								"amount",
								"origin",
								"destination",
								"platform",
								"amount_usd"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user takes some actions in the dapp connection promp.",
				"name": "Dapp Connection Actioned",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "wconnect",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"action": {
									"description": "What action the user is doing. CONFIRM : when confirming the connection to the app. CANCEL : when cancelling the connection request",
									"enum": [
										"CANCEL",
										"CONFIRM"
									],
									"type": "string"
								},
								"app_name": {
									"description": "What is the name of the application being actioned on. Prefer \"Proper Case\" name rather than snake_case or camelCase",
									"type": "string"
								},
								"device": {
									"description": "Device the user user is using wallet connect from",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "Platform the user is using wallet connect from. Currently it will be only available from the WALLET",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"app_name",
								"action",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The app connection to a new app was confirmed. This means the app is now connected to the blockchain wallet",
				"name": "Dapp Connection Confirmed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "wconnect",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"app_name": {
									"description": "What is the name of the application being actioned on. Prefer \"Proper Case\" name rather than snake_case or camelCase",
									"type": "string"
								},
								"device": {
									"description": "Device the user user is using wallet connect from",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "Platform the user is using wallet connect from. Currently it will be only available from the WALLET",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform",
								"app_name"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The app connection to a new app was rejected",
				"name": "Dapp Connection Rejected",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "wconnect",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"app_name": {
									"description": "What is the name of the application being actioned on. Prefer \"Proper Case\" name rather than snake_case or camelCase",
									"type": "string"
								},
								"device": {
									"description": "Device the user user is using wallet connect from",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "Platform the user is using wallet connect from. Currently it will be only available from the WALLET",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform",
								"app_name"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user actions on a request from a connected dapp. it could be for example for signing a transaction",
				"name": "Dapp Request Actioned",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "wconnect",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"action": {
									"description": "What action is taken by the user",
									"enum": [
										"CANCEL",
										"CONFIRM"
									],
									"type": "string"
								},
								"app_name": {
									"description": "What is the name of the application being actioned on. Prefer \"Proper Case\" name rather than snake_case or camelCase",
									"type": "string"
								},
								"device": {
									"description": "Device the user user is using wallet connect from",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"method": {
									"description": "Type of dapp request ",
									"enum": [
										"ETH_SEND_RAW_TRANSACTION",
										"ETH_SEND_TRANSACTION",
										"ETH_SIGN",
										"ETH_SIGN_TRANSACTION",
										"ETH_SIGN_TYPED_DATA",
										"PERSONAL_SIGN"
									],
									"type": "string"
								},
								"platform": {
									"description": "Platform the user is using wallet connect from. Currently it will be only available from the WALLET",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"app_name",
								"action",
								"method",
								"device",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Button which brings the user to the general overview of the wallet or the Home page on the exchange mobile app. Logo will be recorded as separate event.",
				"name": "Dashboard Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "trade_e1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered. (mobile only)",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"origin": {
									"description": "Where does the user come from. \nNAVIGATION : Home on the navigation bar.  ",
									"enum": [
										"NAVIGATION",
										"SIGN_IN"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is clicking from",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"origin",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Product Dashboard or Home is viewed. It is the general overview of the wallet or the Home page on the exchange mobile app ",
				"name": "Dashboard Viewed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "trade_e1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered. (mobile only)",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"path": {
									"description": "Path portion of the URL of the page. Equivalent to canonical path which defaults to location.pathname from the DOM API.",
									"type": "string"
								},
								"platform": {
									"description": "What platform the page viewed belongs to",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"referrer": {
									"description": "Full URL of the previous page. Equivalent to document.referrer from the DOM API.",
									"type": "string"
								},
								"search": {
									"description": "Query string portion of the URL of the page. Equivalent to location.search from the DOM API.",
									"type": "string"
								},
								"title": {
									"description": "Title of the page. Equivalent to document.title from the DOM API.",
									"type": "string"
								},
								"url": {
									"description": "Full URL of the page. First we look for the canonical url. If the canonical url is not provided, we use location.href from the DOM API.",
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "When application is opened using a referring link, Segment or your packaged deep link partner can fire this event on our behalf",
				"name": "Deep Link Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"campaign": {
									"description": "",
									"properties": {
										"medium": {
											"description": "Campaign Medium",
											"type": "string"
										},
										"name": {
											"description": "Campaign Name",
											"type": "string"
										},
										"source": {
											"description": "Campaign Source",
											"type": "string"
										}
									},
									"required": [
									],
									"type": "object"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-Android",
										"APP-iOS"
									],
									"type": "string"
								},
								"platfrom": {
									"description": "",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"provider": {
									"description": "The deep link provider.",
									"type": "string"
								},
								"url": {
									"description": "The deep link URL clicked.",
									"type": "string"
								}
							},
							"required": [
								"device",
								"platfrom"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "When application is opened using a referring link, Segment or your packaged deep link partner can fire this event on our behalf",
				"name": "Deep Link Opened",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"campaign": {
									"description": "",
									"properties": {
										"medium": {
											"description": "Campaign Medium",
											"type": "string"
										},
										"name": {
											"description": "Campaign Name",
											"type": "string"
										},
										"source": {
											"description": "Campaign source",
											"type": "string"
										}
									},
									"required": [
									],
									"type": "object"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-Android",
										"APP-iOS"
									],
									"type": "string"
								},
								"platform": {
									"description": "Whether the deep link is opened from the Wallet of the Exchange",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"platfrom": {
									"description": "",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"provider": {
									"description": "The deep link provider.",
									"type": "string"
								},
								"url": {
									"description": "The App URL opened.",
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform",
								"platfrom"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Bitcoin address removed from the addresses list.",
				"name": "Deleted Address Label",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "settings_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is using the Settings",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"transaction_format": {
									"description": "Segwit format or Legacy format",
									"enum": [
										"LEGACY",
										"SEGWIT"
									],
									"type": "string"
								}
							},
							"required": [
								"transaction_format",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user selects and submits the amount to be deposited. The user will still have to validate or do action at a later stage. (confirm transfer or send funds from bank)",
				"name": "Deposit Amount Entered",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "deposit_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"currency": {
									"description": "the currency the user wants to deposit",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"deposit_method": {
									"description": "How the funds will be deposited : \nBANK_ACCOUNT: funds sent from a bank account, this is a classic transfer. \nBANK_TRANSFER : Funds sent from Linked account via Open Banking or ACH. ",
									"enum": [
										"BANK_ACCOUNT",
										"BANK_TRANSFER"
									],
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"input_amount": {
									"description": "The amount the user will withdraw (before fee applies)",
									"type": "number"
								},
								"output_amount": {
									"description": "The amount the user will actual get (after fee applies)",
									"type": "number"
								},
								"platform": {
									"description": "What platform the user is depositing funds to",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"deposit_method",
								"device",
								"input_amount",
								"output_amount",
								"platform",
								"currency"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Button which brings the user to the Deposit flyover or screen is clicked.",
				"name": "Deposit Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"deposit_v1",
							"trade_e1",
							"buy_rec"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"origin": {
									"description": "What button we are referring to. BALANCE : for the exchange, next to the balance (total account value) info on the main trading page. CURRENCY_PAGE : CTA or menu on the coin page next to balance. DEPOSIT: when trying to deposit some funds. LINK_WALLET. PORTFOLIO (exchange) : deposit next to currency balance. RECURRING_BUY : order details or status suggesting to add cash SIGN_UP : when prompted to deposit at sign up SIMPLETRADE : when trying to buy via the Simple Trade product without funds. WITHDRAW: when suggesting to deposit from no funds in withdraw screen. TRADE_TICKET (web only?) : for trade ticket when user has no funds ",
									"enum": [
										"BALANCE",
										"CURRENCY_PAGE",
										"DEPOSIT",
										"LINK_WALLET",
										"PORTFOLIO",
										"RECURRING_BUY",
										"SIGN_UP",
										"SIMPLETRADE",
										"TRADE_TICKET",
										"WITHDRAW"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is clicking from",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device",
								"origin"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user selects how the funds will be deposited, either linked bank or transfer",
				"name": "Deposit Method Selected",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"deposit_v1",
							"trade_e1"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"currency": {
									"description": "the currency the user wants to deposit",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"deposit_method": {
									"description": "How the funds will be deposited : \nBANK_ACCOUNT: funds sent from a bank account, this is a classic transfer. \nBANK_TRANSFER : Funds sent from Linked account via Open Banking or ACH. ",
									"enum": [
										"BANK_ACCOUNT",
										"BANK_TRANSFER"
									],
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is depositing funds to",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"deposit_method",
								"platform",
								"device",
								"currency"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Deposit flyover or screen viewed",
				"name": "Deposit Viewed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"deposit_v1",
							"trade_e1"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"path": {
									"description": "Path portion of the URL of the page. Equivalent to canonical path which defaults to location.pathname from the DOM API.",
									"type": "string"
								},
								"platform": {
									"description": "What platform the page viewed belongs to",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"referrer": {
									"description": "Full URL of the previous page. Equivalent to document.referrer from the DOM API.",
									"type": "string"
								},
								"search": {
									"description": "Query string portion of the URL of the page. Equivalent to location.search from the DOM API.",
									"type": "string"
								},
								"title": {
									"description": "Title of the page. Equivalent to document.title from the DOM API.",
									"type": "string"
								},
								"url": {
									"description": "Full URL of the page. First we look for the canonical url. If the canonical url is not provided, we use location.href from the DOM API.",
									"type": "string"
								}
							},
							"required": [
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user pressed the magic link in the email to verify a new device, and he got back to the sign in flow. We record here when the client receives the device verified confirmation.",
				"name": "Device Verified",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "sso_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"exchange": {
									"description": "Parameters about the exchange account",
									"properties": {
										"two_fa_mode": {
											"description": "Whether the exchange account has 2FA set up",
											"type": "boolean"
										},
										"user_id": {
											"description": "Exchange user credentials ID",
											"type": "string"
										}
									},
									"required": [
									],
									"type": "object"
								},
								"mergeable": {
									"description": "Indicates if possible to merge two unlinked accounts",
									"type": "boolean"
								},
								"platform": {
									"description": "the platform that received the notification about the device being verified",
									"enum": [
										"WALLET"
									],
									"type": "string"
								},
								"site_redirect": {
									"description": "Whether the user is being redirected to the exchange or wallet",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"upgradeable": {
									"description": "Indicates if possible to “upgrade” to a new unified Blockchain.com Account",
									"type": "boolean"
								},
								"wallet": {
									"description": "Parameters about the wallet account",
									"properties": {
										"auth_type": {
											"description": "The wallet 2FA type that is enforced.",
											"enum": [
												"0_NONE",
												"1_YUBIKEY",
												"2_EMAIL",
												"3_YUBIKEY_MTGOX",
												"4_GOOGLE_AUTHENTICATOR",
												"5_SMS"
											],
											"type": "string"
										},
										"exchange": {
											"description": "Parameters about the exchange account",
											"properties": {
												"two_fa_mode": {
													"description": "Whether the exchange account has 2FA set up",
													"properties": {
													},
													"required": [
													],
													"type": "object"
												},
												"user_id": {
													"description": "Exchange user credentials ID",
													"type": "object"
												}
											},
											"required": [
											],
											"type": "object"
										},
										"guid_first_four": {
											"description": "The first four characters of the wallet.guid field",
											"pattern": "^.{4,4}$",
											"type": "string"
										},
										"has_cloud_backup": {
											"description": "Whether the wallet has cloud backups",
											"type": "boolean"
										},
										"is_mobile_setup": {
											"description": "Whether the wallet has a mobile client set up",
											"type": "boolean"
										},
										"last_mnemonic_backup": {
											"description": "The last time, in unix timestamp, in which a wallet has their mnemonic backup verified",
											"type": "integer"
										},
										"mobile_device_type": {
											"description": "The type of device being verified",
											"enum": [
												"APP-Android",
												"APP-iOS"
											],
											"type": "string"
										},
										"nabu": {
											"description": "Parameter about the nabu account",
											"properties": {
												"recovery_eligible": {
													"description": "Whether the nabu user is eligible for recovery. Usually if account has value (> $300 or 1 payment method linked)",
													"type": "boolean"
												},
												"user_id": {
													"description": "The Nabu User ID. This is from the users table in nabu gateway",
													"type": "object"
												}
											},
											"required": [
											],
											"type": "object"
										}
									},
									"required": [
									],
									"type": "object"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "User clicks change email button.",
				"name": "Email Change Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "security_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is managing Security events",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user requested the verification link to be sent again to change the wallet’s email address.",
				"name": "Email Change Verification Link Resent",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "security_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is managing Security events",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "An email verification is requested. This is triggered (with or without explicit consent of the user). Note that some email verification emails are sent without request from the client.",
				"name": "Email Verification Requested",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"onboarding_v1",
							"security_v1",
							"onboarding_e1"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"origin": {
									"description": "From what product or flow the request to verify the email was requested. SIGN_UP : just after sign up. VERIFICATION: during a kyc verification process. SECURITY : in the security settings, for example when an email is changed.",
									"enum": [
										"SECURITY",
										"SIGN_UP",
										"VERIFICATION"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the email verification was requested from",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"origin",
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "An email verification was skipped by the user. This could also lead to an entire onboarding or verification flow being skipped.",
				"name": "Email Verification Skipped",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "onboarding_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"origin": {
									"description": "From what product or flow the request to verify the email was skipped. SIGN_UP : just after sign up.",
									"enum": [
										"SIGN_UP"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the email verification was requested from",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device",
								"origin"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Email has been verified by the user",
				"name": "Email Verified",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"onboarding_v1",
							"security_v1"
						],
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"email_changed": {
									"description": "Was there already a verified email?",
									"type": "boolean"
								},
								"platform": {
									"description": "What platform the email verification was requested from (if available)",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"email_changed",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "A button inviting the user to discover our exchange product is clicked. Note that this does not include the navigation part of the header.",
				"name": "Exchange Hyperlink Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"explorer",
							"dot_com"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"": {
									"description": "",
									"type": "object"
								},
								"currency": {
									"description": "Currency symbol for the currency being selected to trade by the user.",
									"pattern": "^[A-Z]{3,5}$\n",
									"type": "string"
								},
								"device": {
									"description": "What device the event is tracked from",
									"enum": [
										"WEB"
									],
									"type": "string"
								},
								"origin": {
									"description": "From which part of the page was the button clicked",
									"enum": [
										"BANNER",
										"BODY",
										"LOWER_BANNER"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the event is referring to.",
									"enum": [
										"BLOCKCHAIN_COM",
										"EXPLORER"
									],
									"type": "string"
								},
								"platform_path": {
									"description": "Path portion of the URL of the page from where the button is clicked.\n  PRICES: from the explorer general price page with all the coins listed. \n PRICES_CURRENCY : blockchain.com/prices/[currency] : from the explorer price page about a specific crypto. .COM_EXCHANGE :\nblockchain.com/exchange. EXPLORER : https://www.blockchain.com/explorer",
									"enum": [
										".COM_EXCHANGE",
										"EXPLORER",
										"PRICES",
										"PRICES_CURRENCY"
									],
									"type": "string"
								}
							},
							"required": [
								"platform_path",
								"device",
								"platform",
								"origin"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "A user signs up for n Exchange account. Note that this is different from Signed Up which is triggered when a nabu user profile is created. An Exchange without a nabu user will be seen as an Anonymous User.",
				"name": "Exchange Signed Up",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "sign_up",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "What device the user created an exchange account from",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is creating his exchange account from.",
									"enum": [
										"EXCHANGE"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "A user has clicked on the search bar to look for address, transaction, block or any explorer related information",
				"name": "Explorer Search Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"explorer",
							"dot_com"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "What device the event is tracked from",
									"enum": [
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is searching from. For now, on BLOCKCHAIN_COM, the search is on the navigation bar, while on the explorer the search is just below next to the breadcrumb",
									"enum": [
										"BLOCKCHAIN_COM",
										"EXPLORER"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "A user has submitted a search on the search bar to look for address, transaction, block or any explorer related information.",
				"name": "Explorer Search Submitted",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"explorer",
							"dot_com"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "What device the event is tracked from",
									"enum": [
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is searching from. For now, on BLOCKCHAIN_COM, the search is on the navigation bar, while on the explorer the search is just below next to the breadcrumb",
									"enum": [
										"BLOCKCHAIN_COM",
										"EXPLORER"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "A user has submitted a search on the search bar which resulted in no results.",
				"name": "Explorer Search With No Results",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"explorer",
							"dot_com"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "What device the event is tracked from",
									"enum": [
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is searching from. For now, on BLOCKCHAIN_COM, the search is on the navigation bar, while on the explorer the search is just below next to the breadcrumb",
									"enum": [
										"BLOCKCHAIN_COM",
										"EXPLORER"
									],
									"type": "string"
								},
								"search_query": {
									"description": "query with no results",
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device",
								"search_query"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "user selects fiat currency for trade. https://www.figma.com/file/IXwonpgbc67ho6uvPX7O74/NUX---New-User-Experience?node-id=445%3A30141",
				"name": "Fiat Currency Selected",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "simplebuy_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"currency": {
									"description": "What fiat currency was selected",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the page viewed belongs to",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"currency",
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "An item of the footer is clicked",
				"name": "Footer Option Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"explorer",
							"dot_com"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "What device the event is tracked from",
									"enum": [
										"WEB"
									],
									"type": "string"
								},
								"download_app": {
									"description": "hyperlink to the app store or google store",
									"enum": [
										"ANDROID",
										"IOS"
									],
									"type": "string"
								},
								"item": {
									"description": "What option was clicked",
									"enum": [
										"APIS",
										"BLOG",
										"CAREERS",
										"CHARTS",
										"COMPANY",
										"EXCHANGE",
										"EXCHANGE_SUPPORT",
										"EXPLORER",
										"INSTITUTIONAL",
										"LEARN",
										"OPEN_SOURCE",
										"PRESS_CENTER",
										"PRICES",
										"PRIME",
										"PRIVACY",
										"RESEARCH",
										"STATUS",
										"VENTURES",
										"WALLET",
										"WALLET_SUPPORT"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the event is referring to",
									"enum": [
										"BLOCKCHAIN_COM",
										"EXCHANGE",
										"EXPLORER",
										"WALLET"
									],
									"type": "string"
								},
								"social_media": {
									"description": "Social media hyperlink clicked",
									"enum": [
										"INSTAGRAM",
										"MEDIUM",
										"TWITTER"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Button which brings the user to the activity history page or screen is clicked",
				"name": "History Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"trade_e1",
							"margin"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"origin": {
									"description": "What button we are referring to. NAVIGATION : navigation bar",
									"enum": [
										"NAVIGATION"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the page viewed belongs to",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"type": {
									"description": "what type of history the button will bring the user to.",
									"enum": [
										"DEPOSIT",
										"MARGIN_POSITION",
										"SIMPLETRADE",
										"TRADE",
										"WITHDRAW"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform",
								"origin"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Activity history page or screen is viewed",
				"name": "History Viewed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"trade_e1",
							"margin"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"path": {
									"description": "Path portion of the URL of the page. Equivalent to canonical path which defaults to location.pathname from the DOM API.",
									"type": "string"
								},
								"platform": {
									"description": "What platform the page viewed belongs to",
									"enum": [
										"EXCHANGE"
									],
									"type": "string"
								},
								"referrer": {
									"description": "Full URL of the previous page. Equivalent to document.referrer from the DOM API.",
									"type": "string"
								},
								"search": {
									"description": "Query string portion of the URL of the page. Equivalent to location.search from the DOM API.",
									"type": "string"
								},
								"title": {
									"description": "Title of the page. Equivalent to document.title from the DOM API.",
									"type": "string"
								},
								"type": {
									"description": "What type of history is viewed",
									"enum": [
										"DEPOSIT",
										"MARGIN_POSITION",
										"SIMPLETRADE",
										"TRADE",
										"WITHDRAW"
									],
									"type": "string"
								},
								"url": {
									"description": "Full URL of the page. First we look for the canonical url. If the canonical url is not provided, we use location.href from the DOM API.",
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Track each time the user opens the widget to input the address data.",
				"name": "Import Address Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "settings_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is using the Settings",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "When the user gives up  to import or restore his wallet and create an account. This is after entering his wallet recovery phrase.",
				"name": "Import Wallet Cancelled",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "recovery_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"origin": {
									"description": "What button we are referring to. CONFIRMATION : \"Go Back\" In the final confirmation screen after entering a valid passphrase",
									"enum": [
										"CONFIRMATIOM"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is is recovering the account from",
									"enum": [
										"WALLET",
										"EXCHANGE"
									],
									"type": "string"
								},
								"site_redirect": {
									"description": "Whether the user is being redirected to the exchange or wallet",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"site_redirect",
								"platform",
								"device",
								"origin"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "When clicking on a button to go to the Restore Wallet flow (also Called Import Wallet) flow. At that stage, we have no information about the wallet or user.",
				"name": "Import Wallet Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "recovery_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"origin": {
									"description": "What button we are referring to. (mobile) LAUNCH_SCREEN. (web) To Be Determined !",
									"enum": [
										"LAUNCH_SCREEN"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is is recovering the account from",
									"enum": [
										"WALLET",
										"EXCHANGE"
									],
									"type": "string"
								},
								"site_redirect": {
									"description": "Whether the user is being redirected to the exchange or wallet",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"site_redirect",
								"platform",
								"origin",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "When confirming that the user wants to import or restore his wallet and create an account. This is after entering his wallet recovery phrase.",
				"name": "Import Wallet Confirmed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "recovery_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is is recovering the account from",
									"enum": [
										"WALLET",
										"EXCHANGE"
									],
									"type": "string"
								},
								"site_redirect": {
									"description": "Whether the user is being redirected to the exchange or wallet",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"site_redirect",
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "the source of the install https://segment.com/docs/connections/spec/mobile/#install-attributed",
				"name": "Install Attributed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"campaign": {
									"description": "",
									"properties": {
										"ad_creative": {
											"description": "The ad creative name.",
											"type": "string"
										},
										"ad_group": {
											"description": "The ad group name.",
											"type": "string"
										},
										"content": {
											"description": "The content of the campaign.",
											"type": "string"
										},
										"medium": {
											"description": "Identifies what type of link was used.",
											"type": "string"
										},
										"name": {
											"description": "The name of the attributed campaign.",
											"type": "string"
										},
										"source": {
											"description": "Campaign source — attributed ad network",
											"type": "string"
										}
									},
									"required": [
									],
									"type": "object"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"provider": {
									"description": "The attribution provider.",
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Button which brings the user to the general Interest page or screen is clicked. General Interest page possibly only available on web. ",
				"name": "Interest Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "interest_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"origin": {
									"description": "What button we are referring to. NAVIGATION : navigation bar. DASHBOARD_PROMO : announcement card or promo on dashboard. ",
									"enum": [
										"DASHBOARD_PROMO",
										"NAVIGATION"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is clicking from",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device",
								"origin"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "User enters and submits the amount for a deposit to their interest saving account. Unlike other amount screens, the client will send a transfer requests as soon as the amount is submitted.",
				"name": "Interest Deposit Amount Entered",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "interest_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"amount": {
									"description": "If available, what amount in native fiat currency being entered. e.g. 12.23 if 12.23 USD.",
									"type": "number"
								},
								"amount_currency": {
									"description": "If available,, what is the native fiat currency in which the amount is entered. e.g. USD. Empty if amount only entered in BTC terms",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"currency": {
									"description": "The currency the user wants to deposit to their savings account. e.g. BTC",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"from_account_type": {
									"description": "From what account the user wants to deposit funds from",
									"enum": [
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"input_amount": {
									"description": "The amount in crypto currency the user sends to their interest savings account. This amount is before any fees are subtracted.",
									"type": "number"
								},
								"interest_rate": {
									"description": "What is in the interest rate in percentage being offered. For example, for 4.5%, enter 4.5",
									"type": [
										"number",
										"null"
									]
								},
								"output_amount": {
									"description": "The amount in crypto currency the user will actually get in their interest savings account. This amount is after any fees are subtracted",
									"type": "number"
								},
								"platform": {
									"description": "What platform the user wants to deposit funds from",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"interest_rate",
								"from_account_type",
								"currency",
								"input_amount",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Button which brings the user to the interest deposit flyover or screen is clicked. It is sometimes called Transfer and is where the user can add funds to their interest savings wallet",
				"name": "Interest Deposit Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "interest_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"currency": {
									"description": "What currency the user is about to deposit to their interest savings account (if known)",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"origin": {
									"description": "What button we are referring to. CURRENCY_PAGE : CTA or menu on the coin page next to balance. SAVINGS_PAGE: general interest savings overview page or screen (currently Earn Interest Clicked).  SAVINGS_CONFIRMATION : from the confirmation screen of an interest deposit. SEND : from the send product\n",
									"enum": [
										"CURRENCY_PAGE",
										"SAVINGS_CONFIRMATION",
										"SAVINGS_PAGE",
										"SEND"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is clicking from",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"origin",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user clicked on the widget or button which sets the max amount allowed to deposit to their interest savings account",
				"name": "Interest Deposit Max Amount Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "interest_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"amount_currency": {
									"description": "If the button explicitly displays the amount in a specific currency, what is the currency being clicked on for the max amount",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"currency": {
									"description": "The currency the user wants to deposit to their savings account. e.g. BTC",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"from_account_type": {
									"description": "From what account the user wants to deposit funds from",
									"enum": [
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user wants to deposit funds from",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"currency",
								"platform",
								"from_account_type"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user clicked on the widget or button which sets the min amount allowed to deposit to their interest savings account",
				"name": "Interest Deposit Min Amount Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "interest_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"amount_currency": {
									"description": "If the button explicitly displays the amount in a specific currency, what is the currency being clicked on for the min amount",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"currency": {
									"description": "The currency the user wants to deposit to their savings account. e.g. BTC",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"from_account_type": {
									"description": "From what account the user wants to deposit funds from",
									"enum": [
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user wants to deposit funds from",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"currency",
								"platform",
								"from_account_type",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Interest deposit page viewed. It is also called transfer and is where the user can add funds to their interest saving wallet",
				"name": "Interest Deposit Viewed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "interest_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"currency": {
									"description": "What currency the user is about to deposit to their interest savings account (if known)",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"path": {
									"description": "Path portion of the URL of the page. Equivalent to canonical path which defaults to location.pathname from the DOM API.",
									"type": "string"
								},
								"platform": {
									"description": "What platform the page viewed belongs to",
									"enum": [
										"WALLET"
									],
									"type": "string"
								},
								"referrer": {
									"description": "Full URL of the previous page. Equivalent to document.referrer from the DOM API.",
									"type": "string"
								},
								"search": {
									"description": "Query string portion of the URL of the page. Equivalent to location.search from the DOM API.",
									"type": "string"
								},
								"title": {
									"description": "Title of the page. Equivalent to document.title from the DOM API.",
									"type": "string"
								},
								"url": {
									"description": "Full URL of the page. First we look for the canonical url. If the canonical url is not provided, we use location.href from the DOM API.",
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "User clicks on a button to submit information. Submitting these , are required by compliance after hitting a certain volume.",
				"name": "Interest Submit Information Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "interest_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"origin": {
									"description": "what button we are referring to.  SAVINGS_PAGE: general interest savings overview page or screen. SAVINGS_CONFIRMATION : SAVINGS_PAGE general interest savings overview page or screen ",
									"enum": [
										"SAVINGS_CONFIRMATION",
										"SAVINGS_PAGE"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user wants to submit information from",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"origin",
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "General Interest page viewed. It is usually the landing page with the list of savings accounts",
				"name": "Interest Viewed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "interest_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"path": {
									"description": "Path portion of the URL of the page. Equivalent to canonical path which defaults to location.pathname from the DOM API.",
									"type": "string"
								},
								"platform": {
									"description": "What platform the page viewed belongs to",
									"enum": [
										"WALLET"
									],
									"type": "string"
								},
								"referrer": {
									"description": "Full URL of the previous page. Equivalent to document.referrer from the DOM API.",
									"type": "string"
								},
								"search": {
									"description": "Query string portion of the URL of the page. Equivalent to location.search from the DOM API.",
									"type": "string"
								},
								"title": {
									"description": "Title of the page. Equivalent to document.title from the DOM API.",
									"type": "string"
								},
								"url": {
									"description": "Full URL of the page. First we look for the canonical url. If the canonical url is not provided, we use location.href from the DOM API.",
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Button which brings the user to the interest withdrawal flyover or screen is clicked. It is where the user can add withdraw funds from their interest savings wallet",
				"name": "Interest Withdrawal Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "interest_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"currency": {
									"description": "What currency the user is about to withdraw from their interest savings account (if known)",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"origin": {
									"description": "What button we are referring to.  CURRENCY_PAGE : CTA or menu on the coin page next to balance. SAVINGS_PAGE: general interest savings overview page or screen ",
									"enum": [
										"CURRENCY_PAGE",
										"SAVINGS_PAGE"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is clicking from",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"origin",
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Interest withdrawal page viewed. It is where the user can withdraw funds from their interest savings wallet",
				"name": "Interest Withdrawal Viewed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "interest_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"currency": {
									"description": "What currency the user is about to withdraw from their interest savings account (if known)",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"path": {
									"description": "Path portion of the URL of the page. Equivalent to canonical path which defaults to location.pathname from the DOM API.",
									"type": "string"
								},
								"platform": {
									"description": "What platform the page viewed belongs to",
									"enum": [
										"WALLET"
									],
									"type": "string"
								},
								"referrer": {
									"description": "Full URL of the previous page. Equivalent to document.referrer from the DOM API.",
									"type": "string"
								},
								"search": {
									"description": "Query string portion of the URL of the page. Equivalent to location.search from the DOM API.",
									"type": "string"
								},
								"title": {
									"description": "Title of the page. Equivalent to document.title from the DOM API.",
									"type": "string"
								},
								"url": {
									"description": "Full URL of the page. First we look for the canonical url. If the canonical url is not provided, we use location.href from the DOM API.",
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Allow login without email authentication from a list of IP addresses. ",
				"name": "Ip Whitelist Updated",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "security_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"is_empty": {
									"description": "True if list is empty",
									"type": "boolean"
								},
								"platform": {
									"description": "From what platform the user is managing Security events\n",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"is_empty"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "User sets their preferred language from the displayed options.",
				"name": "Language Set",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"settings_v1",
							"dot_com",
							"explorer"
						],
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"language": {
									"description": "Language in Alpha-2 code (2 letters lower cases)",
									"pattern": "^[a-z]{2}$",
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is using the Settings",
									"enum": [
										"BLOCKCHAIN_COM",
										"EXCHANGE",
										"EXPLORER",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"language",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "An item of the left menu is clicked",
				"name": "Left Menu Selection Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "explorer",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "What device the event is tracked from",
									"enum": [
										"WEB"
									],
									"type": "string"
								},
								"item": {
									"description": "What item is clicked on the navigation header",
									"enum": [
										" BITCOIN_CASH",
										" BITCOIN_CASH_TESTNET",
										" BITCOIN_TESTNET",
										" DEFI",
										" ETHEREUM",
										" NONE",
										" PRICES",
										"ACADEMY",
										"BITCOIN",
										"CHARTS",
										"DEFI",
										"DEVELOPERS",
										"EXCHANGE",
										"HOME",
										"NFT",
										"PRICES",
										"WALLET"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the event is referring to",
									"enum": [
										"EXPLORER"
									],
									"type": "string"
								}
							},
							"required": [
								"item",
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The legal entity of the user has been updated (different from an assigned legal entity, with is recorded in the \"Signed Up\" event)",
				"name": "Legal Entity Updated",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"onboarding_v1",
							"onboarding_e1",
							"sign_up"
						],
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "What device the user created the account from",
									"enum": [
										" APP-iOS",
										"APP-Android",
										"WEB"
									],
									"type": "string"
								},
								"legal_entity": {
									"description": "legal entity has been updated to this label ",
									"enum": [
										"BC_BVI_3",
										"BC_LT",
										"BC_LT_2",
										"BC_US"
									],
									"type": "string"
								},
								"legal_entity_before_update": {
									"description": "the users past legal entity",
									"enum": [
										" BC_LT",
										" BC_US",
										"BC_BVI_3",
										"BC_LT_2"
									],
									"type": "string"
								},
								"legal_entity_reason": {
									"description": "legal entity to a user has been updated based on this reason.",
									"enum": [
										"ADDRESS",
										"DEFAULT",
										"IP",
										"MANUAL"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user signed up for",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"legal_entity",
								"legal_entity_before_update",
								"legal_entity_reason",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user clicks on a button to link a bank",
				"name": "Link Bank Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"withdraw_v1",
							"settings_v1"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"origin": {
									"description": "What button we are referring to. DEPOSIT : from depositing funds. SETTINGS : user's settings page. BUY : from the Buy flow.  WITHDRAW : from withdrawing funds.",
									"enum": [
										"BUY",
										"DEPOSIT",
										"SETTINGS",
										"WITHDRAW"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user wants to link a bank for",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device",
								"origin"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user approves the general conditions and approvals necessary to start the link process with the bank. The user selects what bank he wants to link (e.g. REVOLUT, BARCLAYS, etc.). NOTE : Only available for OB. Not available for Web because it's inside an iframe",
				"name": "Link Bank Conditions Approved",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"withdraw_v1",
							"settings_v1"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"bank_name": {
									"description": "Bank name, in camel case, for example \"Barclays\", \"Revolut\"",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"partner": {
									"description": "What is the bank partner. This will be used to know whether it is ACH or OB",
									"enum": [
										"YAPILY",
										"YODLEE"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user wants to link a bank for",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"provider": {
									"description": "What provider is used to link the bank",
									"enum": [
										"FINTECTURE",
										"SAFE_CONNECT"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"partner",
								"bank_name",
								"provider",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user selects what bank he wants to link (e.g. REVOLUT, BARCLAYS, etc.). NOTE : Only available for OB. Not available for Web because it's inside an iframe",
				"name": "Link Bank Selected",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"withdraw_v1",
							"settings_v1"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"bank_name": {
									"description": "Bank name, in camel case, for example \"Barclays\", \"Revolut\"",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"partner": {
									"description": "What is the bank partner for the account being linked",
									"enum": [
										"YAPILY",
										"YODLEE"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user wants to link a bank for",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"partner",
								"bank_name",
								"device",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user clicks on the Add Card button to link a Card",
				"name": "Link Card Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"withdraw_v1",
							"settings_v1"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"origin": {
									"description": "What button we are referring to. SETTINGS : user's settings page. BUY : from the Buy flow.  ",
									"enum": [
										"BUY",
										"SETTINGS"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user wants to link a bank for",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform",
								"origin"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "User sets the local currency from the displayed options.",
				"name": "Local Currency Set",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"settings_v1",
							"explorer"
						],
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"currency": {
									"description": "What fiat currency",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is using the Settings",
									"enum": [
										"EXCHANGE",
										"EXPLORER",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"currency"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Login or Sign in button which brings the user to the log in flow is clicked",
				"name": "Login Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"sso_v1",
							"dot_com"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device from which the user is signing in ",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"exchange": {
									"description": "Parameters about the exchange account",
									"properties": {
										"two_fa_mode": {
											"description": "Whether the exchange account has 2FA set up",
											"type": "boolean"
										},
										"user_id": {
											"description": "Exchange user credentials ID",
											"type": "string"
										}
									},
									"required": [
									],
									"type": "object"
								},
								"mergeable": {
									"description": "Indicates if possible to merge two unlinked accounts",
									"type": "boolean"
								},
								"origin": {
									"description": "What button we are referring to. \nGUEST_LIMITATION (exchange): A specific action from the guest view requires login. HOMEPAGE (dotcom) : from the Blockchain.com or Exchange.blockchain.com home page content. LAUNCH_SCREEN (mobile only) : when login from the launch screen. NAVIGATION (dotcom) : navigation bar. RECOVERY_CLOUD_BACKUP (wallet) : when failing to scan QR code cloud backup and clicking on login. ",
									"enum": [
										"GUEST_LIMITATION",
										"HOMEPAGE",
										"LAUNCH_SCREEN",
										"NAVIGATION",
										"NUX_LAUNCH_PROMO_LOG_IN",
										"RECOVERY_CLOUD_BACKUP"
									],
									"type": "string"
								},
								"platform": {
									"description": "Platform from which the user is signing in",
									"enum": [
										"WALLET"
									],
									"type": "string"
								},
								"site_redirect": {
									"description": "Whether the user is being redirected to the exchange or wallet",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"upgradeable": {
									"description": "Indicates if possible to “upgrade” to a new unified Blockchain.com Account",
									"type": "boolean"
								},
								"wallet": {
									"description": "Parameters about the wallet account",
									"properties": {
										"auth_type": {
											"description": "The wallet 2FA type that is enforced.",
											"enum": [
												"0_NONE",
												"1_YUBIKEY",
												"2_EMAIL",
												"3_YUBIKEY_MTGOX",
												"4_GOOGLE_AUTHENTICATOR",
												"5_SMS"
											],
											"type": "string"
										},
										"exchange": {
											"description": "Parameters about the exchange account",
											"properties": {
												"two_fa_mode": {
													"description": "Whether the exchange account has 2FA set up",
													"properties": {
													},
													"required": [
													],
													"type": "object"
												},
												"user_id": {
													"description": "Exchange user credentials ID",
													"type": "object"
												}
											},
											"required": [
											],
											"type": "object"
										},
										"guid_first_four": {
											"description": "The first four characters of the wallet.guid field",
											"pattern": "^.{4,4}$",
											"type": "string"
										},
										"has_cloud_backup": {
											"description": "Whether the wallet has cloud backups",
											"type": "boolean"
										},
										"is_mobile_setup": {
											"description": "Whether the wallet has a mobile client set up",
											"type": "boolean"
										},
										"last_mnemonic_backup": {
											"description": "The last time, in unix timestamp, in which a wallet has their mnemonic backup verified",
											"type": "integer"
										},
										"mobile_device_type": {
											"description": "The type of device being verified",
											"enum": [
												"APP-Android",
												"APP-iOS"
											],
											"type": "string"
										},
										"nabu": {
											"description": "Parameter about the nabu account",
											"properties": {
												"recovery_eligible": {
													"description": "Whether the nabu user is eligible for recovery. Usually if account has value (> $300 or 1 payment method linked)",
													"type": "boolean"
												},
												"user_id": {
													"description": "The Nabu User ID. This is from the users table in nabu gateway",
													"type": "object"
												}
											},
											"required": [
											],
											"type": "object"
										}
									},
									"required": [
									],
									"type": "object"
								}
							},
							"required": [
								"platform",
								"device",
								"origin"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "User clicks on a button or link to get help when having trouble logging in. For example \"Need Some Help\" link",
				"name": "Login Help Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "sso_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "What device the user is login in from",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"exchange": {
									"description": "Parameters about the exchange account",
									"properties": {
										"two_fa_mode": {
											"description": "Whether the exchange account has 2FA set up",
											"type": "boolean"
										},
										"user_id": {
											"description": "Exchange user credentials ID",
											"type": "string"
										}
									},
									"required": [
									],
									"type": "object"
								},
								"mergeable": {
									"description": "Indicates if possible to merge two unlinked accounts",
									"type": "boolean"
								},
								"origin": {
									"description": "what button we are referring to. IDENTIFIER : when failing to provide an identifier. PASSWORD: when failing to provide a correct password. QR_CODE : when failing to scan QR code. ",
									"enum": [
										"IDENTIFIER",
										"PASSWORD",
										"QR_CODE"
									],
									"type": "string"
								},
								"platform": {
									"description": "Platform from which the user is signing in",
									"enum": [
										"WALLET",
										"APP-Android",
										"APP-iOS"
									],
									"type": "string"
								},
								"site_redirect": {
									"description": "Whether the user is being redirected to the exchange or wallet",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"upgradeable": {
									"description": "Indicates if possible to “upgrade” to a new unified Blockchain.com Account",
									"type": "boolean"
								},
								"wallet": {
									"description": "Parameters about the wallet account",
									"properties": {
										"auth_type": {
											"description": "The wallet 2FA type that is enforced.",
											"enum": [
												"0_NONE",
												"1_YUBIKEY",
												"2_EMAIL",
												"3_YUBIKEY_MTGOX",
												"4_GOOGLE_AUTHENTICATOR",
												"5_SMS"
											],
											"type": "string"
										},
										"exchange": {
											"description": "Parameters about the exchange account",
											"properties": {
												"two_fa_mode": {
													"description": "Whether the exchange account has 2FA set up",
													"properties": {
													},
													"required": [
													],
													"type": "object"
												},
												"user_id": {
													"description": "Exchange user credentials ID",
													"type": "object"
												}
											},
											"required": [
											],
											"type": "object"
										},
										"guid_first_four": {
											"description": "The first four characters of the wallet.guid field",
											"pattern": "^.{4,4}$",
											"type": "string"
										},
										"has_cloud_backup": {
											"description": "Whether the wallet has cloud backups",
											"type": "boolean"
										},
										"is_mobile_setup": {
											"description": "Whether the wallet has a mobile client set up",
											"type": "boolean"
										},
										"last_mnemonic_backup": {
											"description": "The last time, in unix timestamp, in which a wallet has their mnemonic backup verified",
											"type": "integer"
										},
										"mobile_device_type": {
											"description": "The type of device being verified",
											"enum": [
												"APP-Android",
												"APP-iOS"
											],
											"type": "string"
										},
										"nabu": {
											"description": "Parameter about the nabu account",
											"properties": {
												"recovery_eligible": {
													"description": "Whether the nabu user is eligible for recovery. Usually if account has value (> $300 or 1 payment method linked)",
													"type": "boolean"
												},
												"user_id": {
													"description": "The Nabu User ID. This is from the users table in nabu gateway",
													"type": "object"
												}
											},
											"required": [
											],
											"type": "object"
										}
									},
									"required": [
									],
									"type": "object"
								}
							},
							"required": [
								"origin",
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user entered and submitted their Email or Wallet ID to log in",
				"name": "Login Identifier Entered",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "sso_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "What device you are viewing the login screen from",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"exchange": {
									"description": "Parameters about the exchange account",
									"properties": {
										"two_fa_mode": {
											"description": "Whether the exchange account has 2FA set up",
											"type": "boolean"
										},
										"user_id": {
											"description": "Exchange user credentials ID",
											"type": "string"
										}
									},
									"required": [
									],
									"type": "object"
								},
								"identifier_type": {
									"description": "What type of identifier is supplied",
									"enum": [
										"EMAIL",
										"WALLET_ID"
									],
									"type": "string"
								},
								"mergeable": {
									"description": "Indicates if possible to merge two unlinked accounts",
									"type": "boolean"
								},
								"platform": {
									"description": "Platform from which the user is signing in",
									"enum": [
										"WALLET"
									],
									"type": "string"
								},
								"site_redirect": {
									"description": "Whether the user is being redirected to the exchange or wallet",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"upgradeable": {
									"description": "Indicates if possible to “upgrade” to a new unified Blockchain.com Account",
									"type": "boolean"
								},
								"wallet": {
									"description": "Parameters about the wallet account",
									"properties": {
										"auth_type": {
											"description": "The wallet 2FA type that is enforced.",
											"enum": [
												"0_NONE",
												"1_YUBIKEY",
												"2_EMAIL",
												"3_YUBIKEY_MTGOX",
												"4_GOOGLE_AUTHENTICATOR",
												"5_SMS"
											],
											"type": "string"
										},
										"exchange": {
											"description": "Parameters about the exchange account",
											"properties": {
												"two_fa_mode": {
													"description": "Whether the exchange account has 2FA set up",
													"properties": {
													},
													"required": [
													],
													"type": "object"
												},
												"user_id": {
													"description": "Exchange user credentials ID",
													"type": "object"
												}
											},
											"required": [
											],
											"type": "object"
										},
										"guid_first_four": {
											"description": "The first four characters of the wallet.guid field",
											"pattern": "^.{4,4}$",
											"type": "string"
										},
										"has_cloud_backup": {
											"description": "Whether the wallet has cloud backups",
											"type": "boolean"
										},
										"is_mobile_setup": {
											"description": "Whether the wallet has a mobile client set up",
											"type": "boolean"
										},
										"last_mnemonic_backup": {
											"description": "The last time, in unix timestamp, in which a wallet has their mnemonic backup verified",
											"type": "integer"
										},
										"mobile_device_type": {
											"description": "The type of device being verified",
											"enum": [
												"APP-Android",
												"APP-iOS"
											],
											"type": "string"
										},
										"nabu": {
											"description": "Parameter about the nabu account",
											"properties": {
												"recovery_eligible": {
													"description": "Whether the nabu user is eligible for recovery. Usually if account has value (> $300 or 1 payment method linked)",
													"type": "boolean"
												},
												"user_id": {
													"description": "The Nabu User ID. This is from the users table in nabu gateway",
													"type": "object"
												}
											},
											"required": [
											],
											"type": "object"
										}
									},
									"required": [
									],
									"type": "object"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Allowing login from IP address in user's IP whitelist.",
				"name": "Login Ip Restriction Updated",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "security_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"is_restricted": {
									"description": "True if only allowing login from IP addresses whitelist.",
									"type": "boolean"
								},
								"platform": {
									"description": "From what platform the user is managing Security events\n",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"is_restricted",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user explicitly selects a login method, by clicking on Log In With Password, or Log In with device, etc.",
				"name": "Login Method Selected",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "sso_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "What device you are viewing the login screen from",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"exchange": {
									"description": "Parameters about the exchange account",
									"properties": {
										"two_fa_mode": {
											"description": "Whether the exchange account has 2FA set up",
											"type": "boolean"
										},
										"user_id": {
											"description": "Exchange user credentials ID",
											"type": "string"
										}
									},
									"required": [
									],
									"type": "object"
								},
								"login_method": {
									"description": "How the user is trying to log in. APPLE: via Apple ID. GOOGLE : via Google Account. PASSWORD : with a password on mobile or web, PIN : with a PIN on mobile,  SECURE_CHANNEL : by sending a log in request via secure channel to another client.",
									"enum": [
										"APPLE",
										"GOOGLE",
										"PASSWORD",
										"PIN",
										"SECURE_CHANNEL"
									],
									"type": "string"
								},
								"mergeable": {
									"description": "Indicates if possible to merge two unlinked accounts",
									"type": "boolean"
								},
								"platform": {
									"description": "Platform from which the user is signing in",
									"enum": [
										"WALLET"
									],
									"type": "string"
								},
								"site_redirect": {
									"description": "Whether the user is being redirected to the exchange or wallet",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"upgradeable": {
									"description": "Indicates if possible to “upgrade” to a new unified Blockchain.com Account",
									"type": "boolean"
								},
								"wallet": {
									"description": "Parameters about the wallet account",
									"properties": {
										"auth_type": {
											"description": "The wallet 2FA type that is enforced.",
											"enum": [
												"0_NONE",
												"1_YUBIKEY",
												"2_EMAIL",
												"3_YUBIKEY_MTGOX",
												"4_GOOGLE_AUTHENTICATOR",
												"5_SMS"
											],
											"type": "string"
										},
										"exchange": {
											"description": "Parameters about the exchange account",
											"properties": {
												"two_fa_mode": {
													"description": "Whether the exchange account has 2FA set up",
													"properties": {
													},
													"required": [
													],
													"type": "object"
												},
												"user_id": {
													"description": "Exchange user credentials ID",
													"type": "object"
												}
											},
											"required": [
											],
											"type": "object"
										},
										"guid_first_four": {
											"description": "The first four characters of the wallet.guid field",
											"pattern": "^.{4,4}$",
											"type": "string"
										},
										"has_cloud_backup": {
											"description": "Whether the wallet has cloud backups",
											"type": "boolean"
										},
										"is_mobile_setup": {
											"description": "Whether the wallet has a mobile client set up",
											"type": "boolean"
										},
										"last_mnemonic_backup": {
											"description": "The last time, in unix timestamp, in which a wallet has their mnemonic backup verified",
											"type": "integer"
										},
										"mobile_device_type": {
											"description": "The type of device being verified",
											"enum": [
												"APP-Android",
												"APP-iOS"
											],
											"type": "string"
										},
										"nabu": {
											"description": "Parameter about the nabu account",
											"properties": {
												"recovery_eligible": {
													"description": "Whether the nabu user is eligible for recovery. Usually if account has value (> $300 or 1 payment method linked)",
													"type": "boolean"
												},
												"user_id": {
													"description": "The Nabu User ID. This is from the users table in nabu gateway",
													"type": "object"
												}
											},
											"required": [
											],
											"type": "object"
										}
									},
									"required": [
									],
									"type": "object"
								}
							},
							"required": [
								"device",
								"login_method",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user approved the log in request (usually on mobile) sent from another client (usually from web). The request is  done via Secure Channel Opening Authentication, and approving will open the channel",
				"name": "Login Request Approved",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "sso_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the login request is approved",
									"enum": [
										"APP-iOS",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "Whether the request is being approved from the WALLET or the EXCHANGE. Only possible from the WALLET for now",
									"enum": [
										"WALLET"
									],
									"type": "string"
								},
								"request_browser": {
									"description": "The browser being displayed to the user. This is the browser from where the request was sent.",
									"type": "string"
								},
								"request_location_country": {
									"description": "Parsed IP Geolocation displayed to the user. This is the ip from where the request was sent. country format TBD : ideally alpha 2 iso code",
									"type": "string"
								},
								"request_platform": {
									"description": "The channel opening requester platform (exchange/wallet)",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"request_platform",
								"device",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user denied the log in request (usually on mobile) sent from another client (usually from web). The request is usually done via Secure Channel Opening Authentication, and denying will close the channel",
				"name": "Login Request Denied",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "sso_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the login request is denied",
									"enum": [
										"APP-iOS",
										"APP-Android"
									],
									"type": "string"
								},
								"error": {
									"description": "The error that was experienced by the user ",
									"type": [
										"string",
										"null"
									]
								},
								"method": {
									"description": "Whether the rejection came for a secure channel opening request OR for a log in with magic link request.",
									"enum": [
										"MAGIC_LINK",
										"SECURE_CHANNEL"
									],
									"type": "string"
								},
								"platform": {
									"description": "Whether the request is being denied from the WALLET or the EXCHANGE. Only possible from the WALLET for now",
									"enum": [
										"WALLET"
									],
									"type": "string"
								},
								"request_browser": {
									"description": "The browser being displayed to the user. This is the browser from where the request was sent.",
									"type": "string"
								},
								"request_location_country": {
									"description": "Parsed IP Geolocation displayed to the user. This is the ip from where the request was sent. country format TBD : ideally alpha 2 iso code",
									"type": "string"
								},
								"request_platform": {
									"description": "Whether the log in request was sent to log in to the WALLET or the. EXCHANGE.",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"request_platform",
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user Two Factor Authentication verification code entered by the user to confirm log in is denied",
				"name": "Login Two Step Verification Denied",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "sso_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the user is trying to log in",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"exchange": {
									"description": "Parameters about the exchange account",
									"properties": {
										"two_fa_mode": {
											"description": "Whether the exchange account has 2FA set up",
											"type": "boolean"
										},
										"user_id": {
											"description": "Exchange user credentials ID",
											"type": "string"
										}
									},
									"required": [
									],
									"type": "object"
								},
								"mergeable": {
									"description": "Indicates if possible to merge two unlinked accounts",
									"type": "boolean"
								},
								"platform": {
									"description": "Platform from which the user is signing in",
									"enum": [
										"WALLET"
									],
									"type": "string"
								},
								"site_redirect": {
									"description": "Whether the user is being redirected to the exchange or wallet",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"upgradeable": {
									"description": "Indicates if possible to “upgrade” to a new unified Blockchain.com Account",
									"type": "boolean"
								},
								"wallet": {
									"description": "Parameters about the wallet account",
									"properties": {
										"auth_type": {
											"description": "The wallet 2FA type that is enforced.",
											"enum": [
												"0_NONE",
												"1_YUBIKEY",
												"2_EMAIL",
												"3_YUBIKEY_MTGOX",
												"4_GOOGLE_AUTHENTICATOR",
												"5_SMS"
											],
											"type": "string"
										},
										"exchange": {
											"description": "Parameters about the exchange account",
											"properties": {
												"two_fa_mode": {
													"description": "Whether the exchange account has 2FA set up",
													"properties": {
													},
													"required": [
													],
													"type": "object"
												},
												"user_id": {
													"description": "Exchange user credentials ID",
													"type": "object"
												}
											},
											"required": [
											],
											"type": "object"
										},
										"guid_first_four": {
											"description": "The first four characters of the wallet.guid field",
											"pattern": "^.{4,4}$",
											"type": "string"
										},
										"has_cloud_backup": {
											"description": "Whether the wallet has cloud backups",
											"type": "boolean"
										},
										"is_mobile_setup": {
											"description": "Whether the wallet has a mobile client set up",
											"type": "boolean"
										},
										"last_mnemonic_backup": {
											"description": "The last time, in unix timestamp, in which a wallet has their mnemonic backup verified",
											"type": "integer"
										},
										"mobile_device_type": {
											"description": "The type of device being verified",
											"enum": [
												"APP-Android",
												"APP-iOS"
											],
											"type": "string"
										},
										"nabu": {
											"description": "Parameter about the nabu account",
											"properties": {
												"recovery_eligible": {
													"description": "Whether the nabu user is eligible for recovery. Usually if account has value (> $300 or 1 payment method linked)",
													"type": "boolean"
												},
												"user_id": {
													"description": "The Nabu User ID. This is from the users table in nabu gateway",
													"type": "object"
												}
											},
											"required": [
											],
											"type": "object"
										}
									},
									"required": [
									],
									"type": "object"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user enters and submits the Two Factor Authentication verification code to confirm log in",
				"name": "Login Two Step Verification Entered",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "sso_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the user is trying to log in",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"exchange": {
									"description": "Parameters about the exchange account",
									"properties": {
										"two_fa_mode": {
											"description": "Whether the exchange account has 2FA set up",
											"type": "boolean"
										},
										"user_id": {
											"description": "Exchange user credentials ID",
											"type": "string"
										}
									},
									"required": [
									],
									"type": "object"
								},
								"mergeable": {
									"description": "Indicates if possible to merge two unlinked accounts",
									"type": "boolean"
								},
								"platform": {
									"description": "Platform from which the user is signing in",
									"enum": [
										"WALLET"
									],
									"type": "string"
								},
								"site_redirect": {
									"description": "Whether the user is being redirected to the exchange or wallet",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"upgradeable": {
									"description": "Indicates if possible to “upgrade” to a new unified Blockchain.com Account",
									"type": "boolean"
								},
								"wallet": {
									"description": "Parameters about the wallet account",
									"properties": {
										"auth_type": {
											"description": "The wallet 2FA type that is enforced.",
											"enum": [
												"0_NONE",
												"1_YUBIKEY",
												"2_EMAIL",
												"3_YUBIKEY_MTGOX",
												"4_GOOGLE_AUTHENTICATOR",
												"5_SMS"
											],
											"type": "string"
										},
										"exchange": {
											"description": "Parameters about the exchange account",
											"properties": {
												"two_fa_mode": {
													"description": "Whether the exchange account has 2FA set up",
													"properties": {
													},
													"required": [
													],
													"type": "object"
												},
												"user_id": {
													"description": "Exchange user credentials ID",
													"type": "object"
												}
											},
											"required": [
											],
											"type": "object"
										},
										"guid_first_four": {
											"description": "The first four characters of the wallet.guid field",
											"pattern": "^.{4,4}$",
											"type": "string"
										},
										"has_cloud_backup": {
											"description": "Whether the wallet has cloud backups",
											"type": "boolean"
										},
										"is_mobile_setup": {
											"description": "Whether the wallet has a mobile client set up",
											"type": "boolean"
										},
										"last_mnemonic_backup": {
											"description": "The last time, in unix timestamp, in which a wallet has their mnemonic backup verified",
											"type": "integer"
										},
										"mobile_device_type": {
											"description": "The type of device being verified",
											"enum": [
												"APP-Android",
												"APP-iOS"
											],
											"type": "string"
										},
										"nabu": {
											"description": "Parameter about the nabu account",
											"properties": {
												"recovery_eligible": {
													"description": "Whether the nabu user is eligible for recovery. Usually if account has value (> $300 or 1 payment method linked)",
													"type": "boolean"
												},
												"user_id": {
													"description": "The Nabu User ID. This is from the users table in nabu gateway",
													"type": "object"
												}
											},
											"required": [
											],
											"type": "object"
										}
									},
									"required": [
									],
									"type": "object"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "User clicks on the Blockchain.com logo",
				"name": "Logo Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"explorer",
							"dot_com"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is clicking from",
									"enum": [
										"DOT_COM",
										"EXCHANGE",
										"EXPLORER",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Option selected from the drop down menu From the Bitcoin or the Bitcoin Cash tab.",
				"name": "Manage Tab Selection Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "settings_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"currency": {
									"description": "From which currency tab was the event activated. BTC or BCH",
									"enum": [
										"BCH",
										"BTC"
									],
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is using the Settings",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"selection": {
									"description": "Example: \"Show xPub\".  Note: \"Recover Funds\" option only available for Bitcoin Cash drop down menu. ",
									"enum": [
										"EDIT_WALLET_NAME",
										"RECOVER_FUNDS",
										"SHOW_CHANGE_ADDRESSES",
										"SHOW_XPUB"
									],
									"type": "string"
								}
							},
							"required": [
								"selection",
								"currency",
								"device",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The Verification for the tier has been sent but requires further manual checks before the user can proceed",
				"name": "Manual Verification Required",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"onboarding_v1",
							"settings_v1"
						],
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"platform": {
									"description": "What platform the verification was started from. (WALLET if product=SWAP and EXCHANGE if product=MERCURY in the  kyc verification table from nabu gateway)",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"provider": {
									"description": "BLOCKCHAIN or VERIFF",
									"enum": [
										"BLOCKCHAIN",
										"VERIFF"
									],
									"type": "string"
								},
								"tier": {
									"description": "What tier the user is trying to update to. 1 = Silver, 2 = Gold, 3 = SDD, 4 = SDD +, 5 = Platinium",
									"type": "integer"
								}
							},
							"required": [
								"tier",
								"platform",
								"provider"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "User clicks on a button to add or remove collateral. This button opens the form to start filling the margin collateral amount",
				"name": "Margin Collateral Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"trade_e1",
							"margin"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "From what device the user is adding collateral",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"pair": {
									"description": "What is the trading pair of the position",
									"pattern": "^[A-Z]{3,5}-[A-Z]{3,5}$",
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is adding collateral",
									"enum": [
										"EXCHANGE"
									],
									"type": "string"
								},
								"position_id": {
									"description": "Id of the margin position for which the collateral is being added/removed",
									"type": "string"
								}
							},
							"required": [
								"pair",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "User updated the collateral amount to of a margin position.",
				"name": "Margin Collateral Updated",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"trade_e1",
							"margin"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"action": {
									"description": "Whether add or remove collateral",
									"enum": [
										"ADD",
										"REMOVE"
									],
									"type": "string"
								},
								"amount": {
									"description": "The amount of collateral to be added or removed.  ",
									"type": "number"
								},
								"currency": {
									"description": "what collateral currency the user is adding or removing",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "From what device the user is adding collateral",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"gw_order_id": {
									"description": "Id of the gateway order created to add/remove the collateral",
									"type": "string"
								},
								"pair": {
									"description": "What is the trading pair of the position",
									"pattern": "^[A-Z]{3,5}-[A-Z]{3,5}$",
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is adding collateral",
									"enum": [
										"EXCHANGE"
									],
									"type": "string"
								},
								"position_id": {
									"description": "Id of the position for which the collateral is being added/removed",
									"type": "string"
								}
							},
							"required": [
								"currency",
								"pair",
								"action",
								"amount",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "User canceled margin order",
				"name": "Margin Order Cancelled",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"trade_e1",
							"margin"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"amount": {
									"description": "The amount of the order.  ",
									"type": "number"
								},
								"device": {
									"description": "Device type from where the event was triggered",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB",
										"WEB-Mob"
									],
									"type": "string"
								},
								"pair": {
									"description": "What is the trading pair of the position",
									"pattern": "^[A-Z]{3,5}-[A-Z]{3,5}$",
									"type": "string"
								},
								"platform": {
									"description": "From what platform the event is triggered\n",
									"enum": [
										"EXCHANGE"
									],
									"type": "string"
								},
								"trade_type": {
									"description": "what type of trade",
									"enum": [
										"LIMIT",
										"MARKET"
									],
									"type": "string"
								}
							},
							"required": [
								"pair",
								"amount",
								"trade_type",
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user submits a margin order.",
				"name": "Margin Order Submitted",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"margin",
							"trade_e1"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "What device the user is using. Only available for WEB for now.",
									"enum": [
										"WEB"
									],
									"type": "string"
								},
								"input_amount": {
									"description": "Amount of the trade in input currency",
									"type": "number"
								},
								"leverage_ratio": {
									"description": "leverage ratio",
									"type": "number"
								},
								"limit_price": {
									"description": "Limit price of the trade (empty for market orders)\n",
									"type": "number"
								},
								"pair": {
									"description": "The trading instrument",
									"pattern": "^[A-Z]{3,5}-[A-Z]{3,5}$",
									"type": "string"
								},
								"platform": {
									"description": "What platform offers leverage (EXCHANGE only for now)",
									"enum": [
										"EXCHANGE"
									],
									"type": "string"
								},
								"side": {
									"description": "What side is selected when the leverage button is clicked. BUY when it says \"Buy With Leverage\" and SELL when it says \"Sell With Leverage\"",
									"enum": [
										"BUY",
										"SELL"
									],
									"type": "string"
								},
								"trade_type": {
									"description": "what type of trade",
									"enum": [
										"LIMIT",
										"MARKET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"trade_type",
								"leverage_ratio",
								"input_amount",
								"pair",
								"device",
								"side"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user closes an open margin position.",
				"name": "Margin Position Closed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"trade_e1",
							"margin"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"amount": {
									"description": "The amount of the order placed to close a margin position.",
									"type": "number"
								},
								"device": {
									"description": "From what device the user is adding collateral",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"limit_price": {
									"description": "The limit price when the position closes with a limit order.",
									"type": "number"
								},
								"order_type": {
									"description": "The type of the order placed to close a margin position.",
									"enum": [
										"LIMIT",
										"MARKET"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is adding collateral",
									"enum": [
										"EXCHANGE"
									],
									"type": "string"
								},
								"position_id": {
									"description": "Id of the margin position for which the collateral is being added/removed",
									"type": "object"
								}
							},
							"required": [
								"amount",
								"platform",
								"order_type"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user performed an action after the margin waitlist invite is shown.",
				"name": "Margin Waitlist Actioned",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "margin",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"action": {
									"description": "What action the user performed when shown the Margin waitlist announcement. JOINED : Clicked on a button to join. DISMISSED : clicked anywhere else on the screen or clicks on the small cross to close the announcement",
									"enum": [
										"DISMISSED",
										"JOINED"
									],
									"type": "string"
								},
								"device": {
									"description": "What device is used to action on the announcement",
									"enum": [
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is on : EXCHANGE",
									"enum": [
										"EXCHANGE"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform",
								"action"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user is shown an announcement to join the margin waitlist",
				"name": "Margin Waitlist Shown",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "margin",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "What device the announcement is shown on",
									"enum": [
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is on : EXCHANGE",
									"enum": [
										"EXCHANGE"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The mobile app install screen is updated to display the instructions for another device. This is done via the toggle button",
				"name": "Mobile App Install Device Updated",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "exchange2app",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"WEB"
									],
									"type": "string"
								},
								"device_app": {
									"description": "Whether the device was updated to view APP-Android or APP-iOS instructions",
									"enum": [
										"APP-Android",
										"APP-iOS"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is clicking from",
									"enum": [
										"EXCHANGE"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device",
								"device_app"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The mobile app icon to install the app is clicked. This button can be found for example in the exchange header",
				"name": "Mobile App Install Icon Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "exchange2app",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is clicking from",
									"enum": [
										"EXCHANGE"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The mobile app icon to install the app is clicked. This button can be found for example in the exchange header",
				"name": "Mobile App Install Link Copied",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "exchange2app",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"WEB"
									],
									"type": "string"
								},
								"device_app": {
									"description": "Whether the copied app link is APP-iOS or APP-Android",
									"enum": [
										"APP-Android",
										"APP-iOS"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is clicking from",
									"enum": [
										"EXCHANGE"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device",
								"device_app"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The Mobile Number was succesfully verified.",
				"name": "Mobile Number Verified",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"settings_v1",
							"security_v1"
						],
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"country_code": {
									"description": "country of the mobile number, in alpha iso 2 code.",
									"pattern": "^[A-Z]{2}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"origin": {
									"description": "From which page are they verifying the Mobile Number? Settings or Security",
									"enum": [
										"SECURITY",
										"SETTINGS"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is using the Settings",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"origin",
								"country_code"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "User changed the mobile pin code.",
				"name": "Mobile Pin Code Changed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "security_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is managing Security events",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "More NFTs button clicked",
				"name": "More NFT Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "explorer",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"": {
									"description": "",
									"type": "object"
								},
								"device": {
									"description": "What device the event is tracked from",
									"enum": [
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the event is referring to",
									"enum": [
										"EXPLORER"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "button inside a NFT card which redirects the user to Opensea (CREATOR, OWNER OR COLLECTION). Opeansea LOGO redirects to opensea.  ASSET when the user clicks the nft card",
				"name": "NFT Hyperlink Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "explorer",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"": {
									"description": "",
									"type": "object"
								},
								"device": {
									"description": "What device the event is tracked from",
									"enum": [
										"WEB"
									],
									"type": "string"
								},
								"item": {
									"description": "What item is clicked on the navigation header",
									"enum": [
										"ASSET",
										"COLLECTION",
										"CREATOR",
										"LOGO",
										"OWNER"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the event is referring to",
									"enum": [
										"EXPLORER"
									],
									"type": "string"
								}
							},
							"required": [
								"item",
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "User has opened the buy NFT order form, showing intent to purchase NFT.",
				"name": "NFT Order Created ",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "nft",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "What device the nft order ",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "what platform the nft order was from. Only in WALLET",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "An NFT buy order failed, either because of a wallet error, or an opensea api failure.",
				"name": "NFT Order Failed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "nft",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "What device the nft order ",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "what platform the nft order was from. Only in WALLET",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "An NFT order has been successfully sent",
				"name": "NFT Order Succeeded",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "nft",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "What device the nft order ",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "what platform the nft order was from. Only in WALLET",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "An item of the navigation breadcrumbs is clicked",
				"name": "Navigation Breadcrumbs Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "explorer",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "What device the event is tracked from",
									"enum": [
										"WEB"
									],
									"type": "string"
								},
								"item": {
									"description": "What item is clicked on the navigation header",
									"enum": [
										"BCH_EXPLORER",
										"BTC_EXPLORER",
										"ETH_EXPLORER"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the event is referring to",
									"enum": [
										"EXPLORER"
									],
									"type": "string"
								},
								"sub_item": {
									"description": "What sub item in the breadcrumb is clicked on. NONE if the user clicks on the first level item",
									"enum": [
										"BITCOIN",
										"BITCOIN_CASH",
										"BITCOIN_CASH_TESTNET",
										"BITCOIN_TESTNET",
										"DEFI",
										"ETHEREUM",
										"NFT",
										"NONE",
										"PRICES"
									],
									"type": "string"
								}
							},
							"required": [
								"item",
								"platform",
								"device",
								"sub_item"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "An item of the navigation header  is clicked",
				"name": "Navigation Option Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"explorer",
							"dot_com"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "What device the event is tracked from",
									"enum": [
										"WEB"
									],
									"type": "string"
								},
								"item": {
									"description": "What item is clicked on the navigation header. Explorer: NONE since it has only one level (old navigation bar). Wallet: OVERVIEW, KEYS, SECURITY. Exchange: FEATURES, FEES, MARKETS, PRIME, AFFILIATE, API",
									"enum": [
										"AFFILIATE",
										"API",
										"BUY_BITCOIN",
										"EXCHANGE",
										"EXPLORER",
										"FEATURES",
										"FEES",
										"KEYS",
										"LOG_IN",
										"MARKETS",
										"OVERVIEW",
										"PRIME",
										"SECURITY",
										"SIGN_UP",
										"TRADE",
										"WALLET"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the event is referring to",
									"enum": [
										"BLOCKCHAIN_COM",
										"EXCHANGE",
										"EXPLORER",
										"WALLET"
									],
									"type": "string"
								},
								"sub_item": {
									"description": "What sub item in the dropdown menu was clicked",
									"enum": [
										"APIS",
										"BLOG",
										"CAREERS",
										"CHARTS",
										"COMPANY",
										"EXCHANGE",
										"EXPLORER",
										"INSTITUTIONAL",
										"LEARN",
										"OPEN_SOURCE",
										"PRESS_CENTER",
										"PRICES",
										"PRIME",
										"PRIVACY",
										"RESEARCH",
										"STATUS",
										"SUPPORT",
										"VENTURES",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Bitcoin address added to the addresses list.",
				"name": "Next Address Added",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "settings_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"currency": {
									"description": "",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is using the Settings",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"transaction_format": {
									"description": "Segwit format or Legacy format",
									"enum": [
										"LEGACY",
										"SEGWIT"
									],
									"type": "string"
								}
							},
							"required": [
								"currency",
								"platform",
								"transaction_format"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "User updates whether they prefer email, SMS or both for notifications",
				"name": "Notification Preferences Updated",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "settings_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"email_enabled": {
									"description": "Whether email notifications is enabled (Only available on WEB)",
									"type": "boolean"
								},
								"platform": {
									"description": "From what platform the user is using the Settings",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"sms_enabled": {
									"description": "Whether sms notifications is enabled",
									"type": "boolean"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Generic event for tracking a web page",
				"name": "Page Viewed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"dot_com",
							"explorer"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "What device the page is viewed from",
									"enum": [
										"WEB"
									],
									"type": "string"
								},
								"path": {
									"description": "Path portion of the URL of the page. Equivalent to canonical path which defaults to location.pathname from the DOM API.",
									"type": "string"
								},
								"platform": {
									"description": "What platform the page viewed belongs to",
									"enum": [
										"EXCHANGE",
										"EXPLORER",
										"WALLET"
									],
									"type": "string"
								},
								"referrer": {
									"description": "Full URL of the previous page. Equivalent to document.referrer from the DOM API.",
									"type": "string"
								},
								"search": {
									"description": "Query string portion of the URL of the page. Equivalent to location.search from the DOM API.",
									"type": "string"
								},
								"search_params": {
									"description": "parameters passed in the link",
									"properties": {
										"from": {
											"description": "unix timestamp used for custom date range in the prices/currency page",
											"format": "date-time",
											"type": "string"
										},
										"scale": {
											"description": "linear scale (default) = 0. logarithmic= 1",
											"type": "number"
										},
										"style": {
											"description": "chart style LINE (default) or CANDELSTICK used in the prices/currency page",
											"enum": [
												"CANDLESTICKS",
												"LINE"
											],
											"type": "string"
										},
										"timeSpan": {
											"description": "days parameter used in the prices/currency page",
											"type": "integer"
										},
										"to": {
											"description": "unix timestamp used for custom date range in the prices/currency page",
											"format": "date-time",
											"type": "string"
										},
										"utm_campaign": {
											"description": "utm parameter",
											"type": "string"
										},
										"view": {
											"description": "which blockchain network is being requested in the home page",
											"enum": [
												" BCH-TESTNET",
												" BTC",
												" BTC-TESTNET",
												" ETH",
												"BCH"
											],
											"type": "string"
										},
										"volume": {
											"description": "show volume on used in the prices/currency page",
											"type": "boolean"
										}
									},
									"required": [
									],
									"type": "object"
								},
								"title": {
									"description": "Title of the page. Equivalent to document.title from the DOM API.",
									"type": "string"
								},
								"url": {
									"description": "Full URL of the page. First we look for the canonical url. If the canonical url is not provided, we use location.href from the DOM API.",
									"type": "string"
								},
								"url_paths": {
									"description": "example: blockchain.com/btc/tx/hash  paths: currency:btc tx:hash",
									"properties": {
										"": {
											"description": "",
											"type": "object"
										},
										"block": {
											"description": "block hash",
											"type": "string"
										},
										"chart": {
											"description": "which chart was selected from the charts page. example: transactions-per-second",
											"type": "string"
										},
										"currency": {
											"description": "Currency symbol for the currency being requested in the prices page by the user. For example USDT\n",
											"pattern": "^[A-Z]{3,5}$",
											"type": "string"
										},
										"network": {
											"description": "which blockchain network is being requested in tx or block page",
											"enum": [
												"BCH",
												"BCH-TESTNET",
												"BTC",
												"BTC-TESTNET",
												"ETH"
											],
											"type": "string"
										},
										"tx": {
											"description": "tx hash",
											"type": "string"
										}
									},
									"required": [
									],
									"type": "object"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "increases the difficulty of discovering the password using a brute-force attack but slows down loading and saving your wallet. (PBKDF2)",
				"name": "Password Stretching Changed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "security_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"pbkdf2": {
									"description": "PBKDF2 must be between 1 and 20000",
									"type": "integer"
								},
								"platform": {
									"description": "From what platform the user is managing Security events\n",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"pbkdf2"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "A rule is being checked for a payment. This is from the rule_execution_report in Nabu Fraud DB",
				"name": "Payment Rule Executed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"decision": {
									"description": "The decision of the rule",
									"enum": [
										"APPROVED",
										"MANUAL_REVIEW",
										"REJECTED"
									],
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										" APP-Android",
										" WEB",
										"APP-iOS"
									],
									"type": "string"
								},
								"payment_id": {
									"description": "id of the payment (id of the transaction from nabu payments)",
									"type": "string"
								},
								"payment_type": {
									"description": "The type of payment. (type column from the transaction table in nabu payments db)",
									"enum": [
										"CHARGE",
										"DEPOSIT",
										"INTEREST_OUTGOING",
										"REFUND",
										"WITHDRAWAL"
									],
									"type": "string"
								},
								"platfrom": {
									"description": "What platform the event was started from. (WALLET if product=SIMPLEBUY and EXCHANGE if product=MERCURY",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"product": {
									"description": "Product for which the payment was made for",
									"enum": [
										" EXCHANGE",
										" SAVINGS",
										" SIMPLEBUY",
										" SWAP",
										"BORROW"
									],
									"type": "string"
								},
								"rule_type": {
									"description": "The rule",
									"type": "string"
								}
							},
							"required": [
								"payment_id",
								"rule_type",
								"platfrom",
								"payment_type",
								"decision"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "A user completed a payment. (when updating final state to \"COMPLETE\" of transaction from nabu payments)",
				"name": "Payment State Triggered",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "simplebuy_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"amount": {
									"description": "Amount (in \"currency\") being deposited by the user, usually as a float. For BTC, it should be for example 1.23, meaning 1.23 BTC",
									"type": "number"
								},
								"amount_usd": {
									"description": "Amount in USD deposited by the user.",
									"type": "number"
								},
								"card_decline_code": {
									"description": "Common card decline code shared between acquirers",
									"type": [
										"string",
										"null"
									]
								},
								"card_generic_decline_code": {
									"description": "Card decline code (acquirer specific)",
									"type": [
										"string",
										"null"
									]
								},
								"currency": {
									"description": "Currency being deposited by the user",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"failure_reason": {
									"description": "if failed, Why the payment failed",
									"type": [
										"string",
										"null"
									]
								},
								"fee_amount": {
									"description": "Fee (in \"currency\") being charged for the payment.",
									"type": "number"
								},
								"fee_amount_usd": {
									"description": "Fee in USD being charged for the payment",
									"type": "number"
								},
								"institution_name": {
									"description": "It is the name of the bank the user has used for the payment. Used specifically with open banking for now",
									"type": "string"
								},
								"partner": {
									"description": "Payment partner. For example HWS, LHV, EVERYPAY",
									"pattern": "[A-Z]+",
									"type": "string"
								},
								"payment_id": {
									"description": "id of the payment (id of the transaction from nabu payments)",
									"type": "string"
								},
								"payment_type": {
									"description": "The type of payment. (type column from the transaction table in nabu payments db)",
									"enum": [
										"CHARGE",
										"DEPOSIT",
										"INTEREST_OUTGOING",
										"REFUND",
										"WITHDRAWAL"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the event was started from. (WALLET if product=SIMPLEBUY and EXCHANGE if product=MERCURY",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"processing_account": {
									"description": "The processing account used for the card payment",
									"type": "string"
								},
								"product": {
									"description": "Product for which the payment was made for",
									"enum": [
										"BORROW",
										"EXCHANGE",
										"SAVINGS",
										"SIMPLEBUY",
										"SWAP"
									],
									"type": "string"
								},
								"state": {
									"description": "Payment status. ideal for tracking status transition timings.",
									"enum": [
										"AUTHORIZED",
										"CLEARED",
										"COMPLETE",
										"COMPLETED",
										"CREATED",
										"CREDITED",
										"FAILED",
										"FRAUD_REVIEW",
										"MANUAL_EXECUTION",
										"MANUAL_REVIEW",
										"PENDING",
										"PRE_CHARGE_APPROVED",
										"PRE_CHARGE_REVIEW",
										"REFUNDED",
										"REJECTED",
										"SETTLED"
									],
									"type": "string"
								}
							},
							"required": [
								"fee_amount_usd",
								"state",
								"payment_id",
								"partner",
								"amount",
								"product",
								"platform",
								"payment_type"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "peeksheet dismissed by user x",
				"name": "Peeksheet Dismissed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"onboarding_v1",
							"onboarding_e1"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"current_step_completed": {
									"description": "what is the current completed step of the user. 0 = verification pending, 1 = payment method pending or 2 = Buy never started",
									"enum": [
										"0",
										"1",
										"2"
									],
									"type": "string"
								},
								"device": {
									"description": "Device type from where the Peeksheet was dismissed.",
									"enum": [
										" APP-iOS",
										"APP-Android",
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the Peeksheet was dismissed",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"current_step_completed",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Peeksheet Process clicked from at the home dashboard. users in regions where trading is allowed will be presented with the new peek sheet. https://www.figma.com/file/IXwonpgbc67ho6uvPX7O74/NUX---New-User-Experience?node-id=572%3A36112",
				"name": "Peeksheet Process Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"onboarding_v1",
							"onboarding_e1"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"current_step_completed": {
									"description": "what is the current completed step of the user. 0 = verification pending, 1 = payment method pending or 2 = Buy never started",
									"enum": [
										"0",
										"1",
										"2"
									],
									"type": "string"
								},
								"device": {
									"description": "Device type from where the Peeksheet was shown.",
									"enum": [
										" APP-iOS",
										"APP-Android",
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the Peeksheet was displayed",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"current_step_completed",
								"device",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "peeksheet selection was chosen ",
				"name": "Peeksheet Selection Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"onboarding_v1",
							"onboarding_e1"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"button_clicked": {
									"description": "True if selection was clicking the main button, False if selection was made from the three items (center)",
									"type": "boolean"
								},
								"current_step_completed": {
									"description": "what is the current completed step of the user. 0 = verification pending, 1 = payment method pending or 2 = Buy never started",
									"enum": [
										"0",
										"1",
										"2"
									],
									"type": "string"
								},
								"device": {
									"description": "Device type from which the selection was clicked",
									"enum": [
										" APP-iOS",
										"APP-Android",
										"WEB"
									],
									"type": "string"
								},
								"item": {
									"description": "Peek sheet item selected",
									"enum": [
										"BUY_CRYPTO",
										"LINK_PAYMENT",
										"VERIFY"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the Peeksheet selection was clicked",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"current_step_completed",
								"item",
								"button_clicked",
								"device",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "users in regions where trading is allowed will be presented with the new peek sheet.",
				"name": "Peeksheet Viewed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"onboarding_v1",
							"onboarding_e1"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"current_step_completed": {
									"description": "what is the current completed step of the user. 0 = verification pending, 1 = payment method pending or 2 = Buy never started",
									"enum": [
										"0",
										"1",
										"2"
									],
									"type": "string"
								},
								"device": {
									"description": "Device type from where the Peeksheet was shown.",
									"enum": [
										" APP-iOS",
										"APP-Android",
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the Peeksheet was displayed",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform",
								"current_step_completed"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "User enters and submits his first name, last names, and date of birth",
				"name": "Personal Information Entered",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "onboarding_e1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is entering PII from",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Button which brings the user to the Portofolio page or screen is clicked",
				"name": "Portfolio Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "trade_e1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"origin": {
									"description": "what button we are referring to. BALANCE : next to the balance (total account value) info on the main trading page. NAVIGATION (mobile only) : navigation bar.",
									"enum": [
										"BALANCE",
										"NAVIGATION"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is clicking from",
									"enum": [
										"EXCHANGE"
									],
									"type": "string"
								}
							},
							"required": [
								"origin",
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Portfolio screen or page in the exchange is viewed",
				"name": "Portfolio Viewed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "trade_e1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"path": {
									"description": "Path portion of the URL of the page. Equivalent to canonical path which defaults to location.pathname from the DOM API.",
									"type": "string"
								},
								"platform": {
									"description": "What platform the page viewed belongs to",
									"enum": [
										"EXCHANGE"
									],
									"type": "string"
								},
								"referrer": {
									"description": "Full URL of the previous page. Equivalent to document.referrer from the DOM API.",
									"type": "string"
								},
								"search": {
									"description": "Query string portion of the URL of the page. Equivalent to location.search from the DOM API.",
									"type": "string"
								},
								"title": {
									"description": "Title of the page. Equivalent to document.title from the DOM API.",
									"type": "string"
								},
								"url": {
									"description": "Full URL of the page. First we look for the canonical url. If the canonical url is not provided, we use location.href from the DOM API.",
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user clicks on the Show button which shows the QR Code and the written Private Key of the current cryptocurrency tab.   Note from frontend: The Event is triggered once even if user toggles it on and off.",
				"name": "Private Keys Shown",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "settings_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"currency": {
									"description": "current cryptocurrency information being showed by the user. (Ethereum or Stellar for now) Example: ETH for Ethereum.",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is using the Settings",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Push notification from a provider bounces. https://segment.com/docs/connections/spec/mobile/#push-notification-bounced",
				"name": "Push Notification Bounced",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "push",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"campaign": {
									"description": "",
									"properties": {
										"content": {
											"description": "Push notification content.",
											"type": "string"
										},
										"medium": {
											"description": "Identifies what type of link was used (Push Notification).",
											"type": "string"
										},
										"name": {
											"description": "The name of the attributed campaign.",
											"type": "string"
										},
										"source": {
											"description": "Designates the push provider. ",
											"type": "string"
										}
									},
									"required": [
									],
									"type": "object"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "This event can be sent when a push notification is received in the app",
				"name": "Push Notification Received",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "push",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"campaign": {
									"description": "",
									"properties": {
										"content": {
											"description": "Push notification content.",
											"type": "string"
										},
										"medium": {
											"description": "Identifies what type of link was used (Push Notification).\n",
											"type": "string"
										},
										"name": {
											"description": "The name of the attributed campaign.",
											"type": "string"
										},
										"source": {
											"description": "Designates the push provider.",
											"type": "string"
										}
									},
									"required": [
									],
									"type": "object"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Push Notification Sent",
				"name": "Push Notification Sent",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "push",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"APP-Android"
									],
									"type": "string"
								},
								"name": {
									"description": "",
									"type": "string"
								},
								"platform": {
									"description": "",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "user taps on a push notification associated with the app",
				"name": "Push Notification Tapped",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "push",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"campaign": {
									"description": "",
									"properties": {
										"content": {
											"description": "Push notification content.",
											"type": "string"
										},
										"medium": {
											"description": "Identifies what type of link was used (Push Notification).\n",
											"type": "string"
										},
										"name": {
											"description": "The name of the attributed campaign.",
											"type": "string"
										},
										"source": {
											"description": "Designates the push provider. ",
											"type": "string"
										}
									},
									"required": [
									],
									"type": "object"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "A Qr Code icon has been clicked on. This is typically going to trigger the camera or a menu first of things that could be scanned",
				"name": "Qr Code Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "wconnect",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device the user clicked the QR code from",
									"enum": [
										"APP-iOS"
									],
									"type": "string"
								},
								"origin": {
									"description": "What button we are referring to. DASHBOARD : from the Home (=DASHBOARD) page",
									"enum": [
										"DASHBOARD"
									],
									"type": "string"
								},
								"platform": {
									"description": "Platform the user is using wallet connect from. Currently it will be only available from the WALLET",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform",
								"origin"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user scanned a QR code using his camera from the device. It could be an external crypto address, a Dapp, or blockhain login ",
				"name": "Qr Code Scanned",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "wconnect",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device the user user is using wallet connect from",
									"enum": [
										"APP-iOS"
									],
									"type": "string"
								},
								"platform": {
									"description": "Platform the user is using wallet connect from. Currently it will be only available from the WALLET",
									"enum": [
										"WALLET"
									],
									"type": "string"
								},
								"qr_type": {
									"description": "What type of QR code is scanned, if it is valid. INVALID : the qr_code scanned is not valid. CRYPTO_ADDRESS : address of a crypto currency to send funds to (CryptoTarget in iOS). DAPP : to connect to a dapp with Wallet Connect. DEEPLINK: when scanning a deeplink. LOG_IN : when opening a secure channel to log in via sso",
									"enum": [
										"CRYPTO_ADDRESS",
										"DAPP",
										"DEEPLINK",
										"INVALID",
										"LOG_IN"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "A user selects the currency and accounts he wants to receive.",
				"name": "Receive Currency Selected",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "receive_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"account_type": {
									"description": "To what type of account the user wants to receive funds to. \nSAVINGS is the interest saving account. \nTRADING is the wallet custodial wallet. \nUSERKEY is the Non Custodial, Private Key, wallet",
									"enum": [
										"SAVINGS",
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"currency": {
									"description": "The currency the user wants to receive (e.g. BTC)",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user wants to receive funds to",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device",
								"account_type",
								"currency"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "A user copies to clipboard the information to receive the currency",
				"name": "Receive Details Copied",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "receive_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"account_type": {
									"description": "To what type of account the user wants to receive funds to. \nSAVINGS is the interest saving account. \nTRADING is the wallet custodial wallet. \nUSERKEY is the Non Custodial, Private Key, wallet",
									"enum": [
										"SAVINGS",
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"currency": {
									"description": "The currency the user wants to receive (e.g. BTC)",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user wants to receive funds to",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"currency",
								"platform",
								"device",
								"account_type"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user confirms the Recovery Phrase words to verify that the user saved the words offline.",
				"name": "Recovery Phrase Backed Up",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "security_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is managing Security events",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user has entered and submitted the recovery phrase to recover his account",
				"name": "Recovery Phrase Entered",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "recovery_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"exchange": {
									"description": "Parameters about the exchange account",
									"properties": {
										"two_fa_mode": {
											"description": "Whether the exchange account has 2FA set up",
											"type": "boolean"
										},
										"user_id": {
											"description": "Exchange user credentials ID",
											"type": "string"
										}
									},
									"required": [
									],
									"type": "object"
								},
								"mergeable": {
									"description": "Indicates if possible to merge two unlinked accounts",
									"type": "boolean"
								},
								"platform": {
									"description": "What platform the user is is recovering the account from",
									"enum": [
										"WALLET",
										"EXCHANGE"
									],
									"type": "string"
								},
								"site_redirect": {
									"description": "Whether the user is being redirected to the exchange or wallet",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"upgradeable": {
									"description": "Indicates if possible to upgrade to a new unified Blockchain.com Account",
									"type": "boolean"
								},
								"wallet": {
									"description": "Parameters about the wallet account",
									"properties": {
										"auth_type": {
											"description": "The wallet 2FA type that is enforced.",
											"enum": [
												"0_NONE",
												"1_YUBIKEY",
												"2_EMAIL",
												"3_YUBIKEY_MTGOX",
												"4_GOOGLE_AUTHENTICATOR",
												"5_SMS"
											],
											"type": "string"
										},
										"exchange": {
											"description": "Parameters about the exchange account",
											"properties": {
												"two_fa_mode": {
													"description": "Whether the exchange account has 2FA set up",
													"properties": {
													},
													"required": [
													],
													"type": "object"
												},
												"user_id": {
													"description": "Exchange user credentials ID",
													"type": "object"
												}
											},
											"required": [
											],
											"type": "object"
										},
										"guid_first_four": {
											"description": "The first four characters of the wallet.guid field",
											"pattern": "^.{4,4}$",
											"type": "string"
										},
										"has_cloud_backup": {
											"description": "Whether the wallet has cloud backups",
											"type": "boolean"
										},
										"is_mobile_setup": {
											"description": "Whether the wallet has a mobile client set up",
											"type": "boolean"
										},
										"last_mnemonic_backup": {
											"description": "The last time, in unix timestamp, in which a wallet has their mnemonic backup verified",
											"type": "integer"
										},
										"mobile_device_type": {
											"description": "The type of device being verified",
											"enum": [
												"APP-Android",
												"APP-iOS"
											],
											"type": "string"
										},
										"nabu": {
											"description": "Parameter about the nabu account",
											"properties": {
												"recovery_eligible": {
													"description": "Whether the nabu user is eligible for recovery. Usually if account has value (> $300 or 1 payment method linked)",
													"type": "boolean"
												},
												"user_id": {
													"description": "The Nabu User ID. This is from the users table in nabu gateway",
													"type": "object"
												}
											},
											"required": [
											],
											"type": "object"
										}
									},
									"required": [
									],
									"type": "object"
								}
							},
							"required": [
								"device",
								"site_redirect",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user request the Secret Recovery Phrase which shows the 12 words needed to recover the wallet in case of password loss.",
				"name": "Recovery Phrase Shown",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "security_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is managing Security events",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user sets up a recurring buy order. This is when the backend creates a new recurring buy with initial state ACTIVE, or if a former recurring buy is activated again.",
				"name": "Recurring Buy Activated",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "buy_rec",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"frequency": {
									"description": "What is the frequency of the recurring buy. Also called period in the backend.",
									"enum": [
										"BI_WEEKLY",
										"DAILY",
										"MONTHLY",
										"WEEKLY"
									],
									"type": "string"
								},
								"input_amount": {
									"description": "The amount in input_currency being spend by the user",
									"type": "number"
								},
								"input_amount_usd": {
									"description": "The amount in USD being spend by the user",
									"type": "number"
								},
								"input_currency": {
									"description": "Currency symbol for the currency being paid in exchange for some crypto. For example USD",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"output_currency": {
									"description": "Currency symbol for the currency being received. For example BTC",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"payment_method": {
									"description": "The payment method used for the recurring buy order",
									"enum": [
										"BANK_TRANSFER",
										"FUNDS",
										"PAYMENT_CARD"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is looking at recurring buy from",
									"enum": [
										"WALLET"
									],
									"type": "string"
								},
								"recurring_buy_id": {
									"description": "What id the id of the recurring buy being cancelled",
									"type": "string"
								}
							},
							"required": [
								"frequency",
								"input_amount",
								"input_currency",
								"payment_method",
								"input_amount_usd",
								"platform",
								"recurring_buy_id",
								"output_currency"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The recurring buy order was cancelled either by the user or automatically, for example due to many failed attempts. This is when the backend sets to state INACTIVE the recurring buy.",
				"name": "Recurring Buy Cancelled",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "buy_rec",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"cancelled_by_user": {
									"description": "Whether the order is cancelled by the user or by our backend (for example after many failed reattempts)",
									"type": "boolean"
								},
								"frequency": {
									"description": "What is the frequency of the recurring buy. Also called period in the backend.",
									"enum": [
										"BI_WEEKLY",
										"DAILY",
										"MONTHLY",
										"WEEKLY",
										null
									],
									"type": [
										"string",
										"null"
									]
								},
								"input_amount": {
									"description": "The amount in input_currency being spend by the user",
									"type": "number"
								},
								"input_amount_usd": {
									"description": "The amount in USD being spend by the user",
									"type": "number"
								},
								"input_currency": {
									"description": "Currency symbol for the currency being paid in exchange for some crypto. For example USD",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"output_currency": {
									"description": "Currency symbol for the currency being received. For example BTC",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"payment_method": {
									"description": "The payment method used for the recurring buy order",
									"enum": [
										"BANK_TRANSFER",
										"FUNDS",
										"PAYMENT_CARD"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is looking at recurring buy from",
									"enum": [
										"WALLET"
									],
									"type": "string"
								},
								"recurring_buy_id": {
									"description": "What id the id of the recurring buy being cancelled",
									"type": "string"
								}
							},
							"required": [
								"platform",
								"recurring_buy_id",
								"frequency",
								"output_currency",
								"input_amount",
								"input_currency",
								"payment_method",
								"input_amount_usd",
								"cancelled_by_user"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user clicks on a widget to start the Recurring Buy flow",
				"name": "Recurring Buy Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "buy_rec",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.\n",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"origin": {
									"description": "What button we are referring to. BUY_CONFIRMATION : at the end of the buy flow (Create Recurring Buy at the suggestion screen).",
									"enum": [
										"BUY_CONFIRMATION"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is looking at recurring buy from",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device",
								"origin"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user clicks on a recurring buy to see the details of what is currently set up",
				"name": "Recurring Buy Details Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "buy_rec",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"currency": {
									"description": "Currency of the crypto being bought (output currency) for the recurring order",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.\n",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"origin": {
									"description": "What button we are referring to : CURRENCY_PAGE : Currency page (Coin View) of the coin being bought. TRANSACTION_LIST : From the historical transaction list, also called Activity in mobile",
									"enum": [
										"CURRENCY_PAGE",
										"TRANSACTION_LIST"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is looking at recurring buy from",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"origin",
								"currency",
								"device",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user views some further information or description about the Recurring buy feature",
				"name": "Recurring Buy Info Viewed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "buy_rec",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"page": {
									"description": "(From 0 to 4) If applicable : what page of the info is being viewed. ",
									"type": [
										"integer",
										"null"
									]
								},
								"platform": {
									"description": "What platform the user is looking at recurring buy from",
									"enum": [
										"WALLET"
									],
									"type": "string"
								},
								"type": {
									"description": "type of info being viewed. e.g. DCA : Dollar Cost Averaging",
									"enum": [
										"DCA"
									],
									"type": "string"
								}
							},
							"required": [
								"page",
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user wants to learn more about the recurring buy feature. This could be bring the user either to an internal screen (Recurring Buy Info Viewed) or external link.",
				"name": "Recurring Buy Learn More Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "buy_rec",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"origin": {
									"description": "What button we are referring to. CURRENCY_PAGE : Currency page (Coin View) of the coin being bought. DASHBOARD_PROMO : announcement card or promo on dashboard.  DCA_DETAILS_LINK : the external link to learn more about the DCA method ",
									"enum": [
										"CURRENCY_PAGE",
										"DASHBOARD_PROMO",
										"DCA_DETAILS_LINK"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is looking at recurring buy from",
									"enum": [
										"WALLET"
									],
									"type": "string"
								},
								"type": {
									"description": "What does the user want to learn more about ? DCA : Dollar Cost Averaging",
									"enum": [
										"DCA"
									],
									"type": "string"
								}
							},
							"required": [
								"origin",
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user reacted negatively on a screen suggesting to set up recurring buy. This could be either closing the suggestion or clicking on the negative option (Maybe Later, Skip, Exit, etc..)",
				"name": "Recurring Buy Suggestion Skipped",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "buy_rec",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"origin": {
									"description": "What recurring buy suggestion we are referring to. BUY_CONFIRMATION : at the end of the buy flow (\"Maybe Later\" at the suggestion screen)",
									"enum": [
										"BUY_CONFIRMATION"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is looking at recurring buy from",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"origin"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user was shown a warning about recurring buy unavailable",
				"name": "Recurring Buy Unavailable Shown",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "buy_rec",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user wants to buy from",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"reason": {
									"description": "Reason for not being able to set up recurring buy. PAYMENT_METHOD_UNAVAILABLE : the current selected payment method is not available. (e.g. if cards payments cannot be used for that client for some reason) SELECT_PAYMENT : the user needs to select the payment method before selecting the frequency of the buy order, mainly shown for first time buyer. ",
									"enum": [
										"PAYMENT_METHOD_UNAVAILABLE",
										"SELECT_PAYMENT"
									],
									"type": "string"
								}
							},
							"required": [
								"reason",
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Recurring Buy Flow page or screen is viewed. This is triggered whenever the user opens the recurring buy flow from another part of the wallet",
				"name": "Recurring Buy Viewed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "buy_rec",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.\n",
									"enum": [
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"path": {
									"description": "Path portion of the URL of the page. Equivalent to canonical path which defaults to location.pathname from the DOM API.",
									"type": "string"
								},
								"platform": {
									"description": "What platform the page viewed belongs to",
									"enum": [
										"WALLET"
									],
									"type": "string"
								},
								"referrer": {
									"description": "Full URL of the previous page. Equivalent to document.referrer from the DOM API.",
									"type": "string"
								},
								"search": {
									"description": "Query string portion of the URL of the page. Equivalent to location.search from the DOM API.",
									"type": "string"
								},
								"title": {
									"description": "Title of the page. Equivalent to document.title from the DOM API.",
									"type": "string"
								},
								"url": {
									"description": "Full URL of the page. First we look for the canonical url. If the canonical url is not provided, we use location.href from the DOM API.",
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The browser will be remembered for a short period of time, allowing user to login again without having to re-authenticate. If Disabled, authentication is needed for every login. ",
				"name": "Remember Two Step Verification Updated",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "security_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"is_enabled": {
									"description": "If Enabled, browser will be remembered, allowing user to login again without having to re-authenticate. If Disabled, authentication is needed for every login. ",
									"type": "boolean"
								},
								"platform": {
									"description": "From what platform the user is managing Security events\n",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"is_enabled",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user clicks on the Add Card button to link a Card",
				"name": "Remove Linked Card Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"withdraw_v1",
							"settings_v1"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"origin": {
									"description": "What button we are referring to. SETTINGS : user's settings page. BUY : from the Buy flow.  ",
									"enum": [
										"BUY",
										"SETTINGS"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user wants to link a bank for",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"origin",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "When clicking on a button to discard reset flow, such as \"Go Back\" on a reset final warning or at the first confirmation",
				"name": "Reset Account Cancelled",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "recovery_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"exchange": {
									"description": "Parameters about the exchange account",
									"properties": {
										"two_fa_mode": {
											"description": "Whether the exchange account has 2FA set up",
											"type": "boolean"
										},
										"user_id": {
											"description": "Exchange user credentials ID",
											"type": "string"
										}
									},
									"required": [
									],
									"type": "object"
								},
								"mergeable": {
									"description": "Indicates if possible to merge two unlinked accounts",
									"type": "boolean"
								},
								"origin": {
									"description": "What button we are referring to. RESET_CONFIRMATION : when confirming reset in reset flow. RESET_FINAL_WARNING : when confirming reset wish after the final warning ",
									"enum": [
										"RESET_CONFIRMATION",
										"RESET_FINAL_WARNING"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is is recovering the account from",
									"enum": [
										"WALLET",
										"EXCHANGE"
									],
									"type": "string"
								},
								"site_redirect": {
									"description": "Whether the user is being redirected to the exchange or wallet",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"upgradeable": {
									"description": "Indicates if possible to upgrade to a new unified Blockchain.com Account",
									"type": "boolean"
								},
								"wallet": {
									"description": "Parameters about the wallet account",
									"properties": {
										"auth_type": {
											"description": "The wallet 2FA type that is enforced.",
											"enum": [
												"0_NONE",
												"1_YUBIKEY",
												"2_EMAIL",
												"3_YUBIKEY_MTGOX",
												"4_GOOGLE_AUTHENTICATOR",
												"5_SMS"
											],
											"type": "string"
										},
										"exchange": {
											"description": "Parameters about the exchange account",
											"properties": {
												"two_fa_mode": {
													"description": "Whether the exchange account has 2FA set up",
													"properties": {
													},
													"required": [
													],
													"type": "object"
												},
												"user_id": {
													"description": "Exchange user credentials ID",
													"type": "object"
												}
											},
											"required": [
											],
											"type": "object"
										},
										"guid_first_four": {
											"description": "The first four characters of the wallet.guid field",
											"pattern": "^.{4,4}$",
											"type": "string"
										},
										"has_cloud_backup": {
											"description": "Whether the wallet has cloud backups",
											"type": "boolean"
										},
										"is_mobile_setup": {
											"description": "Whether the wallet has a mobile client set up",
											"type": "boolean"
										},
										"last_mnemonic_backup": {
											"description": "The last time, in unix timestamp, in which a wallet has their mnemonic backup verified",
											"type": "integer"
										},
										"mobile_device_type": {
											"description": "The type of device being verified",
											"enum": [
												"APP-Android",
												"APP-iOS"
											],
											"type": "string"
										},
										"nabu": {
											"description": "Parameter about the nabu account",
											"properties": {
												"recovery_eligible": {
													"description": "Whether the nabu user is eligible for recovery. Usually if account has value (> $300 or 1 payment method linked)",
													"type": "boolean"
												},
												"user_id": {
													"description": "The Nabu User ID. This is from the users table in nabu gateway",
													"type": "object"
												}
											},
											"required": [
											],
											"type": "object"
										}
									},
									"required": [
									],
									"type": "object"
								}
							},
							"required": [
								"origin",
								"device",
								"site_redirect",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "When clicking on a button to go to the reset account flow, such as \"Reset your account\"",
				"name": "Reset Account Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "recovery_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"exchange": {
									"description": "Parameters about the exchange account",
									"properties": {
										"two_fa_mode": {
											"description": "Whether the exchange account has 2FA set up",
											"type": "boolean"
										},
										"user_id": {
											"description": "Exchange user credentials ID",
											"type": "string"
										}
									},
									"required": [
									],
									"type": "object"
								},
								"mergeable": {
									"description": "Indicates if possible to merge two unlinked accounts",
									"type": "boolean"
								},
								"origin": {
									"description": "What button we are referring to. RECOVERY_OPTIONS : when failing to choose between recovery options. RECOVERY_PHRASE : when failing to enter recovery phrase. RESET_CONFIRMATION : when confirming reset in reset flow. RESET_FINAL_WARNING : when confirming reset wish after the final warning ",
									"enum": [
										"RECOVERY_OPTIONS",
										"RECOVERY_PHRASE",
										"RESET_CONFIRMATION",
										"RESET_FINAL_WARNING"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is is recovering the account from",
									"enum": [
										"WALLET",
										"EXCHANGE"
									],
									"type": "string"
								},
								"site_redirect": {
									"description": "Whether the user is being redirected to the exchange or wallet",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"upgradeable": {
									"description": "Indicates if possible to upgrade to a new unified Blockchain.com Account",
									"type": "boolean"
								},
								"wallet": {
									"description": "Parameters about the wallet account",
									"properties": {
										"auth_type": {
											"description": "The wallet 2FA type that is enforced.",
											"enum": [
												"0_NONE",
												"1_YUBIKEY",
												"2_EMAIL",
												"3_YUBIKEY_MTGOX",
												"4_GOOGLE_AUTHENTICATOR",
												"5_SMS"
											],
											"type": "string"
										},
										"exchange": {
											"description": "Parameters about the exchange account",
											"properties": {
												"two_fa_mode": {
													"description": "Whether the exchange account has 2FA set up",
													"properties": {
													},
													"required": [
													],
													"type": "object"
												},
												"user_id": {
													"description": "Exchange user credentials ID",
													"type": "object"
												}
											},
											"required": [
											],
											"type": "object"
										},
										"guid_first_four": {
											"description": "The first four characters of the wallet.guid field",
											"pattern": "^.{4,4}$",
											"type": "string"
										},
										"has_cloud_backup": {
											"description": "Whether the wallet has cloud backups",
											"type": "boolean"
										},
										"is_mobile_setup": {
											"description": "Whether the wallet has a mobile client set up",
											"type": "boolean"
										},
										"last_mnemonic_backup": {
											"description": "The last time, in unix timestamp, in which a wallet has their mnemonic backup verified",
											"type": "integer"
										},
										"mobile_device_type": {
											"description": "The type of device being verified",
											"enum": [
												"APP-Android",
												"APP-iOS"
											],
											"type": "string"
										},
										"nabu": {
											"description": "Parameter about the nabu account",
											"properties": {
												"recovery_eligible": {
													"description": "Whether the nabu user is eligible for recovery. Usually if account has value (> $300 or 1 payment method linked)",
													"type": "boolean"
												},
												"user_id": {
													"description": "The Nabu User ID. This is from the users table in nabu gateway",
													"type": "object"
												}
											},
											"required": [
											],
											"type": "object"
										}
									},
									"required": [
									],
									"type": "object"
								}
							},
							"required": [
								"origin",
								"device",
								"site_redirect",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Generic event when a user completes a revenue generating event",
				"name": "Revenue Generated",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"product_id": {
									"description": "What product the user is buying, it's usually the trading pair of the order (e.g. BTC-EUR)",
									"type": "string"
								},
								"profit": {
									"description": "The approximated profit in usd that we make from the order. Usually a fixed approximate margin for Buy, Sell & Swap product, and the fee for trades",
									"type": "number"
								},
								"revenue": {
									"description": "The revenue amount in usd. This is the volume of crypto of fiat traded or bought from a buy, swap, sell or trade order",
									"type": "number"
								},
								"revenue_type": {
									"description": "What type of revenue this is",
									"enum": [
										"BUY",
										"SELL",
										"SWAP",
										"TRADE"
									],
									"type": "string"
								}
							},
							"required": [
								"revenue",
								"revenue_type",
								"product_id",
								"profit"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "A user opens the search bar to search for a coin.",
				"name": "Search Coin Opened",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"trade_e1",
							"explorer"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the search is initiated from. ",
									"enum": [
										"EXCHANGE",
										"EXPLORER"
									],
									"type": "string"
								},
								"search_type": {
									"description": "What elements the user is looking for. TRADING_PAIR : trading pairs containing the coin. CRYPTO_PRICES : from the explorer price page",
									"enum": [
										"CRYPTO_PRICES",
										"TRADING_PAIR"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device",
								"search_type"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user clicks the security section in the header (top right)\n",
				"name": "Security Tab Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "security_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user clicking the Security options",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user enters and submits the amount for a sell transaction",
				"name": "Sell Amount Entered",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "sell_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"from_account_type": {
									"description": "What type of account the user wants to sell funds from.",
									"enum": [
										"SAVINGS",
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"input_amount": {
									"description": "The expected amount for the input currency, usually as a float. For BTC, it should be for example 1.23, meaning 1.23 BTC",
									"type": "number"
								},
								"input_currency": {
									"description": "Currency symbol for the crypto currency being sent by the user in exchange for some fiat. For example BTC",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"output_currency": {
									"description": "Currency symbol for the currency being received by the user. For example USD",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is to selling from",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"output_currency",
								"input_currency",
								"input_amount",
								"platform",
								"from_account_type",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user clicks on the widget or button which sets the max amount allowed or possible to sell from the account",
				"name": "Sell Amount Max Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "sell_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"from_account_type": {
									"description": "What type of account the user wants to sell funds from.",
									"enum": [
										"SAVINGS",
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"input_currency": {
									"description": "Currency symbol for the crypto currency being sent by the user in exchange for some fiat. For example BTC",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"output_currency": {
									"description": "Currency symbol for the currency being received by the user. For example USD",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is to selling from",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"output_currency",
								"input_currency",
								"platform",
								"from_account_type",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user clicks on the widget or button which sets the min amount allowed or possible to sell from the account",
				"name": "Sell Amount Min Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "sell_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"from_account_type": {
									"description": "What type of account the user wants to sell funds from.",
									"enum": [
										"SAVINGS",
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"input_currency": {
									"description": "Currency symbol for the crypto currency being sent by the user in exchange for some fiat. For example BTC",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"output_currency": {
									"description": "Currency symbol for the currency being received by the user. For example USD",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is to selling from",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"output_currency",
								"input_currency",
								"platform",
								"from_account_type",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Sell order submitted by the user was cancelled (when updating to final state CANCELED either the simple or custodial transaction from nabu gateway )",
				"name": "Sell Cancelled",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "sell_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device the sell order was made from",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"from_account_type": {
									"description": "What type of account the user wants to sell funds from. For simple_transactions with paymentType \"Funds\", it is TRADING. For custodial transactions, it is TRADING for INTERNAL type, or USERKEY for FROM_USERKEY type. \nSAVINGS : interest saving account. ",
									"enum": [
										"SAVINGS",
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"input_amount": {
									"description": "The expected amount for the input currency, usually as a float. For BTC, it should be for example 1.23, meaning 1.23 BTC. Exact amount is only in Buy Completed",
									"type": "number"
								},
								"input_amount_usd": {
									"description": "The amount of crypto sold by the user in USD, usually as a float. it should be for example 10.23, meaning $10.23 worth of crypto was sold",
									"type": "number"
								},
								"input_currency": {
									"description": "Currency symbol for the crypto currency being sent by the user in exchange for some fiat. For example BTC\n",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"output_amount": {
									"description": "The expected amount for the output currency, usually as a float. For USD, it should be for example 1.23, meaning 1.23 USD. Exact amount is only in Sell Completed",
									"type": "number"
								},
								"output_currency": {
									"description": "Currency symbol for the currency being received by the user. For example USD\n",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"paltform": {
									"description": "What platform the event was started from. (WALLET if product=SIMPLEBUY and EXCHANGE if product=MERCURY",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"payment_id": {
									"description": "id of the payment (id of the transaction from nabu payments)",
									"type": "string"
								},
								"product": {
									"description": "The Product for which the sell order is (the product columns of the simple_transactions table, or SIMPLEBUY for custodial transactions since they aren't used in the Exchange Simple Trade product)",
									"enum": [
										"MERCURY",
										"SIMPLEBUY"
									],
									"type": "string"
								},
								"transaction_id": {
									"description": "The id of the transaction for the sell order (the id of either the  simple_transactions or the custodial_transactions table in nabu gateway)",
									"type": "string"
								}
							},
							"required": [
								"input_currency",
								"from_account_type",
								"product",
								"output_currency",
								"paltform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Sell order is completed (when updating to final state FINISHED either the simple or custodial transaction from nabu gateway )",
				"name": "Sell Completed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "sell_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device the sell order was made from",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"from_account_type": {
									"description": "What type of account the user wants to sell funds from. For simple_transactions with paymentType \"Funds\", it is TRADING. For custodial transactions, it is TRADING for INTERNAL type, or USERKEY for FROM_USERKEY type. \nSAVINGS : interest saving account. ",
									"enum": [
										"SAVINGS",
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"input_amount": {
									"description": "The expected amount for the input currency, usually as a float. For BTC, it should be for example 1.23, meaning 1.23 BTC. Exact amount is only in Buy Completed",
									"type": "number"
								},
								"input_amount_usd": {
									"description": "The amount of crypto sold by the user in USD, usually as a float. it should be for example 10.23, meaning $10.23 worth of crypto was sold",
									"type": "number"
								},
								"input_currency": {
									"description": "Currency symbol for the crypto currency being sent by the user in exchange for some fiat. For example BTC\n",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"output_amount": {
									"description": "The expected amount for the output currency, usually as a float. For USD, it should be for example 1.23, meaning 1.23 USD. Exact amount is only in Sell Completed",
									"type": "number"
								},
								"output_currency": {
									"description": "Currency symbol for the currency being received by the user. For example USD\n",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"platform": {
									"description": "What platform the event was started from. (WALLET if product=SIMPLEBUY and EXCHANGE if product=MERCURY\n",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"product": {
									"description": "The Product for which the sell order is (the product columns of the simple_transactions table, or SIMPLEBUY for custodial transactions since they aren't used in the Exchange Simple Trade product)",
									"enum": [
										"MERCURY",
										"SIMPLEBUY"
									],
									"type": "string"
								},
								"spread_percentage": {
									"description": "Spread percentage applied to the exchange rate",
									"type": "number"
								},
								"transaction_id": {
									"description": "The id of the transaction for the sell order (the id of either the  simple_transactions or the custodial_transactions table in nabu gateway)",
									"type": "string"
								}
							},
							"required": [
								"input_currency",
								"platform",
								"from_account_type",
								"product",
								"input_amount_usd",
								"spread_percentage",
								"output_currency"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "User submits a sell order (when creating a simple transactions with state CREATED, or custodial transactions from crypto to fiat with state CREATED)",
				"name": "Sell Created",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "sell_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device the sell order was made from",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"from_account_type": {
									"description": "What type of account the user wants to sell funds from. For simple_transactions with paymentType \"Funds\", it is TRADING. For custodial transactions, it is TRADING for INTERNAL type, or USERKEY for FROM_USERKEY type. \nSAVINGS : interest saving account. ",
									"enum": [
										"SAVINGS",
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"input_amount": {
									"description": "The expected amount for the input currency, usually as a float. For BTC, it should be for example 1.23, meaning 1.23 BTC. Exact amount is only in Buy Completed",
									"type": "number"
								},
								"input_amount_usd": {
									"description": "The amount of crypto sold by the user in USD, usually as a float. it should be for example 10.23, meaning $10.23 worth of crypto was sold",
									"type": "number"
								},
								"input_currency": {
									"description": "Currency symbol for the crypto currency being sent by the user in exchange for some fiat. For example BTC\n",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"output_amount": {
									"description": "The expected amount for the output currency, usually as a float. For USD, it should be for example 1.23, meaning 1.23 USD. Exact amount is only in Sell Completed",
									"type": "number"
								},
								"output_currency": {
									"description": "Currency symbol for the currency being received by the user. For example USD\n",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"payment_id": {
									"description": "id of the payment (id of the transaction from nabu payments)",
									"type": "string"
								},
								"platform": {
									"description": "What platform the event was started from. (WALLET if product=SIMPLEBUY and EXCHANGE if product=MERCURY\n",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"product": {
									"description": "The Product for which the sell order is (the product columns of the simple_transactions table, or SIMPLEBUY for custodial transactions since they aren't used in the Exchange Simple Trade product)",
									"enum": [
										"MERCURY",
										"SIMPLEBUY"
									],
									"type": "string"
								},
								"transaction_id": {
									"description": "The id of the transaction for the sell order (the id of either the  simple_transactions or the custodial_transactions table in nabu gateway)",
									"type": "string"
								}
							},
							"required": [
								"input_currency",
								"from_account_type",
								"platform",
								"product",
								"output_currency"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Sell order has expired (when updating to final state EXPIRED either the simple or custodial transaction from nabu gateway )",
				"name": "Sell Expired",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "sell_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device the sell order was made from",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"from_account_type": {
									"description": "What type of account the user wants to sell funds from. For simple_transactions with paymentType \"Funds\", it is TRADING. For custodial transactions, it is TRADING for INTERNAL type, or USERKEY for FROM_USERKEY type. \nSAVINGS : interest saving account. ",
									"enum": [
										"SAVINGS",
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"input_amount": {
									"description": "The expected amount for the input currency, usually as a float. For BTC, it should be for example 1.23, meaning 1.23 BTC. Exact amount is only in Buy Completed",
									"type": "number"
								},
								"input_amount_usd": {
									"description": "The amount of crypto sold by the user in USD, usually as a float. it should be for example 10.23, meaning $10.23 worth of crypto was sold",
									"type": "number"
								},
								"input_currency": {
									"description": "Currency symbol for the crypto currency being sent by the user in exchange for some fiat. For example BTC\n",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"output_amount": {
									"description": "The expected amount for the output currency, usually as a float. For USD, it should be for example 1.23, meaning 1.23 USD. Exact amount is only in Sell Completed",
									"type": "number"
								},
								"output_currency": {
									"description": "Currency symbol for the currency being received by the user. For example USD\n",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"payment_id": {
									"description": "id of the payment (id of the transaction from nabu payments)",
									"type": "string"
								},
								"platform": {
									"description": "What platform the event was started from. (WALLET if product=SIMPLEBUY and EXCHANGE if product=MERCURY\n",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"product": {
									"description": "The Product for which the sell order is (the product columns of the simple_transactions table, or SIMPLEBUY for custodial transactions since they aren't used in the Exchange Simple Trade product)",
									"enum": [
										"MERCURY",
										"SIMPLEBUY"
									],
									"type": "string"
								},
								"transaction_id": {
									"description": "The id of the transaction for the sell order (the id of either the  simple_transactions or the custodial_transactions table in nabu gateway)",
									"type": "string"
								}
							},
							"required": [
								"input_currency",
								"from_account_type",
								"product",
								"output_currency",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Sell order has failed (when updating to final state FAILED either the simple or custodial transaction from nabu gateway )",
				"name": "Sell Failed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "sell_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device the sell order was made from",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"from_account_type": {
									"description": "What type of account the user wants to sell funds from. For simple_transactions with paymentType \"Funds\", it is TRADING. For custodial transactions, it is TRADING for INTERNAL type, or USERKEY for FROM_USERKEY type. \nSAVINGS : interest saving account. ",
									"enum": [
										"SAVINGS",
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"input_amount": {
									"description": "The expected amount for the input currency, usually as a float. For BTC, it should be for example 1.23, meaning 1.23 BTC. Exact amount is only in Buy Completed",
									"type": "number"
								},
								"input_amount_usd": {
									"description": "The amount of crypto sold by the user in USD, usually as a float. it should be for example 10.23, meaning $10.23 worth of crypto was sold",
									"type": "number"
								},
								"input_currency": {
									"description": "Currency symbol for the crypto currency being sent by the user in exchange for some fiat. For example BTC\n",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"output_amount": {
									"description": "The expected amount for the output currency, usually as a float. For USD, it should be for example 1.23, meaning 1.23 USD. Exact amount is only in Sell Completed",
									"type": "number"
								},
								"output_currency": {
									"description": "Currency symbol for the currency being received by the user. For example USD\n",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"payment_id": {
									"description": "id of the payment (id of the transaction from nabu payments)",
									"type": "string"
								},
								"platform": {
									"description": "What platform the event was started from. (WALLET if product=SIMPLEBUY and EXCHANGE if product=MERCURY\n",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"product": {
									"description": "The Product for which the sell order is (the product columns of the simple_transactions table, or SIMPLEBUY for custodial transactions since they aren't used in the Exchange Simple Trade product)",
									"enum": [
										"MERCURY",
										"SIMPLEBUY"
									],
									"type": "string"
								},
								"transaction_id": {
									"description": "The id of the transaction for the sell order (the id of either the  simple_transactions or the custodial_transactions table in nabu gateway)",
									"type": "string"
								}
							},
							"required": [
								"input_currency",
								"from_account_type",
								"product",
								"platform",
								"output_currency"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user selects what currency and from what account he wants to sell. Event is triggered when a specific account and currency are selected from a dropdown or list of potential accounts. If it comes from two dropdown, it should be triggered once both have been selected.",
				"name": "Sell From Selected",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "sell_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"from_account_type": {
									"description": "What type of account the user wants to sell funds from.",
									"enum": [
										"SAVINGS",
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"input_currency": {
									"description": "Currency symbol for the crypto currency being sent by the user in exchange for some fiat. For example BTC",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is to selling from",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"from_account_type",
								"device",
								"input_currency",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Sell order submitted by the user is rejected. it is not being created at all",
				"name": "Sell Rejected",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "sell_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device the sell order was made from",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"error_reason": {
									"description": "Error message related to the rejection. This is more detailed than the rejection_reason ",
									"type": "string"
								},
								"from_account_type": {
									"description": "What type of account the user wants to sell funds from. For simple_transactions with paymentType \"Funds\", it is TRADING. For custodial transactions, it is TRADING for INTERNAL type, or USERKEY for FROM_USERKEY type. \nSAVINGS : interest saving account. ",
									"enum": [
										"SAVINGS",
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"input_amount": {
									"description": "The expected amount for the input currency, usually as a float. For BTC, it should be for example 1.23, meaning 1.23 BTC. Exact amount is only in Buy Completed",
									"type": "number"
								},
								"input_amount_usd": {
									"description": "The amount of crypto sold by the user in USD, usually as a float. it should be for example 10.23, meaning $10.23 worth of crypto was sold",
									"type": "number"
								},
								"input_currency": {
									"description": "Currency symbol for the crypto currency being sent by the user in exchange for some fiat. For example BTC\n",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"output_amount": {
									"description": "The expected amount for the output currency, usually as a float. For USD, it should be for example 1.23, meaning 1.23 USD. Exact amount is only in Sell Completed",
									"type": "number"
								},
								"output_currency": {
									"description": "Currency symbol for the currency being received by the user. For example USD\n",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"payment_id": {
									"description": "id of the payment (id of the transaction from nabu payments)",
									"type": "string"
								},
								"platform": {
									"description": "What platform the event was started from. (WALLET if product=SIMPLEBUY and EXCHANGE if product=MERCURY\n",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"product": {
									"description": "The Product for which the sell order is (the product columns of the simple_transactions table, or SIMPLEBUY for custodial transactions since they aren't used in the Exchange Simple Trade product)",
									"enum": [
										"MERCURY",
										"SIMPLEBUY"
									],
									"type": "string"
								},
								"rejection_reason": {
									"description": "Raison of the rejection",
									"type": "string"
								},
								"transaction_id": {
									"description": "The id of the transaction for the sell order (the id of either the  simple_transactions or the custodial_transactions table in nabu gateway)",
									"type": "string"
								}
							},
							"required": [
								"product",
								"output_currency",
								"input_currency",
								"platform",
								"from_account_type"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "A user enters and submits the amount that he wants to send. The user will typically have to confirm the send order in the next step. ",
				"name": "Send Amount Entered",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "send_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"currency": {
									"description": "The currency the user wants to send (e.g. BTC)",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.\n",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"fee_rate": {
									"description": "What fee rate is used for sending the crypto. The user may or may not have selected it explicitly, for transfers from custodial wallets for example. BACKEND : the backend will chose what fee_rate to apply. CUSTOM : custom priority defined by the user. NORMAL : normal priority for transactions according to our fee estimation.  PRIORITY : high priority for transactions according to our fee estimation.",
									"enum": [
										"BACKEND",
										"CUSTOM",
										"NORMAL",
										"PRIORITY"
									],
									"type": "string"
								},
								"from_account_type": {
									"description": "To what type of account the user wants to send funds from. \nSAVINGS : interest saving account. \nTRADING : wallet custodial wallet. \nUSERKEY : Non Custodial, Private Key, wallet",
									"enum": [
										"SAVINGS",
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is sending crypto from",
									"enum": [
										"WALLET"
									],
									"type": "string"
								},
								"to_account_type": {
									"description": "To what type of account the user wants to send funds to. EXCHANGE : Blockchain Exchange wallet \nEXTERNAL : external address outside Blockchain.com. \nSAVINGS : interest saving account. \nTRADING : wallet custodial wallet. \nUSERKEY : Non Custodial, Private Key, wallet",
									"enum": [
										"EXCHANGE",
										"EXTERNAL",
										"SAVINGS",
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								}
							},
							"required": [
								"currency",
								"from_account_type",
								"to_account_type",
								"fee_rate",
								"device",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "A user the maximum amount he can send",
				"name": "Send Amount Max Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "send_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"currency": {
									"description": "The currency the user wants to send (e.g. BTC)",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"from_account_type": {
									"description": "To what type of account the user wants to send funds from. \nSAVINGS : interest saving account. \nTRADING : wallet custodial wallet. \nUSERKEY : Non Custodial, Private Key, wallet",
									"enum": [
										"SAVINGS",
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is sending crypto from",
									"enum": [
										"WALLET"
									],
									"type": "string"
								},
								"to_account_type": {
									"description": "To what type of account the user wants to send funds to. EXCHANGE : Blockchain Exchange wallet \nEXTERNAL : external address outside Blockchain.com. \nSAVINGS : interest saving account. \nTRADING : wallet custodial wallet. \nUSERKEY : Non Custodial, Private Key, wallet",
									"enum": [
										"EXCHANGE",
										"EXTERNAL",
										"SAVINGS",
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform",
								"currency",
								"from_account_type",
								"to_account_type"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "A user sets the fee rate he wants to use to send the transaction",
				"name": "Send Fee Rate Selected",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "send_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"currency": {
									"description": "The currency the user wants to send (e.g. BTC)",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"fee_rate": {
									"description": "What fee rate the user has selected",
									"enum": [
										"CUSTOM",
										"NORMAL",
										"PRIORITY"
									],
									"type": "string"
								},
								"from_account_type": {
									"description": "To what type of account the user wants to send funds from. \nSAVINGS : interest saving account. \nTRADING : wallet custodial wallet. \nUSERKEY : Non Custodial, Private Key, wallet",
									"enum": [
										"SAVINGS",
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is sending crypto from",
									"enum": [
										"WALLET"
									],
									"type": "string"
								},
								"to_account_type": {
									"description": "To what type of account the user wants to send funds to. EXCHANGE : Blockchain Exchange wallet \nEXTERNAL : external address outside Blockchain.com. \nSAVINGS : interest saving account. \nTRADING : wallet custodial wallet. \nUSERKEY : Non Custodial, Private Key, wallet",
									"enum": [
										"EXCHANGE",
										"EXTERNAL",
										"SAVINGS",
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform",
								"to_account_type",
								"fee_rate",
								"currency",
								"from_account_type"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "A user selects the currency he wants to send and from what account he wants to send funds from. If currency and account are selected separately, trigger this event when the second one is selected.",
				"name": "Send From Selected",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "send_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"currency": {
									"description": "The currency the user wants to send (e.g. BTC)",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"from_account_type": {
									"description": "To what type of account the user wants to send funds from. \nSAVINGS is the interest saving account. \nTRADING is the wallet custodial wallet. \nUSERKEY is the Non Custodial, Private Key, wallet",
									"enum": [
										"SAVINGS",
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is sending crypto from",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"from_account_type",
								"platform",
								"currency",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Button to access send/receive modal/tab is clicked.",
				"name": "Send Receive Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"send_v1",
							"receive_v1"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"currency": {
									"description": "What currency is being viewed. Used only for legacy flow, as the new flow will ask for the currency at a later stage.",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"origin": {
									"description": "What button we are referring to. DASHBOARD_PROMO : announcement card or promo on dashboard. \nNAVIGATION: Navigation Bar.\n",
									"enum": [
										"CURRENCY_PAGE",
										"NAVIGATION",
										"NO_HOLDINGS",
										"TRANSACTIONS_PAGE"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is clicking from",
									"enum": [
										"WALLET"
									],
									"type": "string"
								},
								"type": {
									"description": "Whether the user clicked on a send or receive button specifically. For Android the Send or Receive screen is the same button, so this type will be empty.",
									"enum": [
										"RECEIVE",
										"SEND"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device",
								"origin"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Send or Receive modal is viewed.",
				"name": "Send Receive Viewed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"send_v1",
							"receive_v1"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"currency": {
									"description": "What currency is being viewed. Used only for legacy flow, as the new flow will ask for the currency at a later stage.",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"path": {
									"description": "Path portion of the URL of the page. Equivalent to canonical path which defaults to location.pathname from the DOM API.",
									"type": "string"
								},
								"platform": {
									"description": "What platform the page viewed belongs to",
									"enum": [
										"WALLET"
									],
									"type": "string"
								},
								"referrer": {
									"description": "Full URL of the previous page. Equivalent to document.referrer from the DOM API.",
									"type": "string"
								},
								"search": {
									"description": "Query string portion of the URL of the page. Equivalent to location.search from the DOM API.",
									"type": "string"
								},
								"title": {
									"description": "Title of the page. Equivalent to document.title from the DOM API.",
									"type": "string"
								},
								"type": {
									"description": "Whether the user views a send or receive screen specifically. For Android the Send or Receive screen is the same, so this type will be empty.",
									"enum": [
										"RECEIVE",
										"SEND"
									],
									"type": "string"
								},
								"url": {
									"description": "Full URL of the page. First we look for the canonical url. If the canonical url is not provided, we use location.href from the DOM API.",
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "A user selects and submits the transaction that needs to be sent. The client requests the transaction to the sent to the backend or the network directly",
				"name": "Send Submitted",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "send_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"currency": {
									"description": "The currency the user wants to send (e.g. BTC)",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"fee_rate": {
									"description": "What fee rate is used for sending the crypto. The user may or may not have selected it explicitly, for transfers from custodial wallets for example. BACKEND : the backend will chose what fee_rate to apply. CUSTOM : custom priority defined by the user. NORMAL : normal priority for transactions according to our fee estimation.  PRIORITY : high priority for transactions according to our fee estimation.",
									"enum": [
										"BACKEND",
										"CUSTOM",
										"NORMAL",
										"PRIORITY"
									],
									"type": "string"
								},
								"from_account_type": {
									"description": "To what type of account the user wants to send funds from. \nSAVINGS : interest saving account. \nTRADING : wallet custodial wallet. \nUSERKEY : Non Custodial, Private Key, wallet",
									"enum": [
										"SAVINGS",
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is sending crypto from",
									"enum": [
										"WALLET"
									],
									"type": "string"
								},
								"to_account_type": {
									"description": "To what type of account the user wants to send funds to. EXCHANGE : Blockchain Exchange wallet \nEXTERNAL : external address outside Blockchain.com. \nSAVINGS : interest saving account. \nTRADING : wallet custodial wallet. \nUSERKEY : Non Custodial, Private Key, wallet",
									"enum": [
										"EXCHANGE",
										"EXTERNAL",
										"SAVINGS",
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								}
							},
							"required": [
								"from_account_type",
								"platform",
								"to_account_type",
								"fee_rate",
								"device",
								"currency"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user clicks the {cryptocurrency} tab to manage the addresses/wallets'",
				"name": "Settings Currency Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "settings_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"currency": {
									"description": "",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is using the Settings",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"currency",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "User clicks to open site about Privacy Policy, About or Term of Service.",
				"name": "Settings Hyperlink Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "settings_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"": {
									"description": "",
									"type": "object"
								},
								"destination": {
									"description": "Destination link. Example: Terms of Service",
									"enum": [
										"ABOUT",
										"COOKIES_POLICY",
										"PRIVACY_POLICY",
										"RATE_US",
										"TERMS_OF_SERVICE"
									],
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is using the Settings",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"destination",
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The users click to select the setting section ",
				"name": "Settings Tab Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "settings_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"": {
									"description": "",
									"type": "object"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is using the Settings",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"settings_tab": {
									"description": "General, Trading Limits, Preferences or Wallets & Addresses",
									"enum": [
										"GENERAL",
										"PREFERENCES",
										"TRADING_LIMITS",
										"WALLETS&ADDRESSES"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform",
								"settings_tab"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Button to skip log in and continue as guest",
				"name": "Sign In Skipped",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "trade_e1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"plaform": {
									"description": "In the Exchange, the sign in can be skipped to continue as guest",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"plaform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "A user selects the country and state in the sign up form of a product that is not supported locally.",
				"name": "Sign Up Address Unsupported",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"sign_up",
							"onboarding_v1"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"country": {
									"description": "Country, as iso code alpha 2, provided by the user at sign up",
									"pattern": "^[A-Z]{2,2}$",
									"type": "string"
								},
								"country_state": {
									"description": "country state, as ISO 3166-2 (US-NY for example), provided by the user at sign up",
									"pattern": "^[A-Z]{2,2}-[A-Z]{2,2}$",
									"type": "string"
								},
								"device": {
									"description": "What device the user is signing up from",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"email": {
									"description": "",
									"type": "object"
								},
								"platform": {
									"description": "What platform the user is signing up to",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform",
								"country",
								"country_state",
								"email"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "User clicks on a widget or button to go to the sign up screen. Not what this is different from the Wallet Signed Up and Exchange Signed Up events which is when the client submits the user creation request",
				"name": "Sign Up Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"sign_up",
							"onboarding_e1",
							"onboarding_v1"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "What device the user is signing up from",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"origin": {
									"description": "What button we are referring to. NUX_LAUNCH_PROMO_BUY_CRYPTO : (mobile) Buy Crypto button at the bottom of a card announcement  when launching the app and before login in.",
									"enum": [
										"NUX_LAUNCH_PROMO_BUY_CRYPTO"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is signing up to",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"origin",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "A user selects the country in the sign up form. It could be an exchange or wallet sign up. This should be triggered as soon as the user selects the country, even if the user hasn't submitted the sign up form yet.",
				"name": "Sign Up Country Selected",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"sign_up",
							"onboarding_v1"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"country": {
									"description": "Country, as iso code alpha 2, provided by the user at sign up",
									"pattern": "^[A-Z]{2,2}$",
									"type": "string"
								},
								"country_state": {
									"description": "country state, as ISO 3166-2 (US-NY for example), provided by the user at sign up",
									"pattern": "^[A-Z]{2,2}-[A-Z]{2,2}$",
									"type": "string"
								},
								"device": {
									"description": "What device the user is signing up from",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is signing up to",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"country",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user succesfully logs in. On mobile, it is triggered every time the user unlocks the app from the pin code.",
				"name": "Signed In",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"navigation_v1",
							"trade_e1"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"authentification_type": {
									"description": "How the user is trying to log in. PASSWORD : with a password on mobile or web, PIN : with a PIN on mobile,  SECURE_CHANNEL : by sending a log in request via secure channel to another client",
									"enum": [
										"PASSWORD",
										"PIN",
										"SECURE_CHANNEL"
									],
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user logs in to.",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"site_redirect": {
									"description": "Whether the user is being redirected to the WALLET or the EXCHANGE",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user logs out, by explicitly clicking on a Log Out or Sign Out button",
				"name": "Signed Out",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"navigation_v1",
							"trade_e1",
							"settings_v1"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user logs out from.",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "A user signs up for a user profile (custodial) with us. For the wallet, this is when a nabu user is created. For the exchange, this is when exchange user credentials are created, slightly before the nabu profile. Note that this is different from Wallet Signed Up or Exchange Signed Up. The user is signed up automatically in the wallet or exchange when we need to record information about the user.",
				"name": "Signed Up",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"onboarding_v1",
							"onboarding_e1",
							"sign_up"
						],
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "What device the user created the account from",
									"enum": [
										" APP-iOS",
										"APP-Android",
										"WEB"
									],
									"type": "string"
								},
								"is_from_linking": {
									"description": "Whether the profile is created from linking the account from another product. For now, we record it specifically when an exchange account is created by linking a wallet account.",
									"type": "boolean"
								},
								"legal_entity": {
									"description": "every user need to be assigned to a legal entity based on a certain reason.",
									"enum": [
										"BC_BVI_3",
										"BC_LT",
										"BC_LT_2",
										"BC_US"
									],
									"type": "string"
								},
								"legal_entity_reason": {
									"description": "legal entity to a user assigned based on this reason.",
									"enum": [
										"ADDRESS",
										"DEFAULT",
										"IP",
										"MANUAL"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user signed up for",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"legal_entity_reason",
								"device",
								"legal_entity"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Button which brings the user to the Simple Trade general page or. screen, with all the available assets, is clicked. Next step of Simple Trade will be a Buy Sell flow. Note : SimpleTrade  uses the brokerage product under the hood",
				"name": "Simple Trade Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "simple_trade_e1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"origin": {
									"description": "what button we are referring to. NAVIGATION : navigation bar. \n",
									"enum": [
										"NAVIGATION"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is clicking from",
									"enum": [
										"EXCHANGE"
									],
									"type": "string"
								}
							},
							"required": [
								"origin",
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Simple Trade general page, with ll the available assets is viewed. Next step of Simple Trade will be a Buy Sell flow. Note : Simple Trade uses the brokerage product under the hood",
				"name": "Simple Trade Viewed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "simple_trade_e1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"path": {
									"description": "Path portion of the URL of the page. Equivalent to canonical path which defaults to location.pathname from the DOM API.",
									"type": "string"
								},
								"platform": {
									"description": "What platform the page viewed belongs to",
									"enum": [
										"EXCHANGE"
									],
									"type": "string"
								},
								"referrer": {
									"description": "Full URL of the previous page. Equivalent to document.referrer from the DOM API.",
									"type": "string"
								},
								"search": {
									"description": "Query string portion of the URL of the page. Equivalent to location.search from the DOM API.",
									"type": "string"
								},
								"title": {
									"description": "Title of the page. Equivalent to document.title from the DOM API.",
									"type": "string"
								},
								"url": {
									"description": "Full URL of the page. First we look for the canonical url. If the canonical url is not provided, we use location.href from the DOM API.",
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The system sends an SMS message with the code after the user inputs a valid mobile number.",
				"name": "Sms Message Sent",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"settings_v1",
							"security_v1"
						],
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"country_code": {
									"description": "country of the mobile number, in alpha iso 2 code.",
									"pattern": "^[A-Z]{2}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"origin": {
									"description": "From which page are they verifying the Mobile Number? Settings or Security",
									"enum": [
										"SECURITY",
										"SETTINGS"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is using the Settings",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"origin",
								"country_code"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user selects and submits from what account and currency the swap funds should come from and be received to. Event is triggered when both accounts and currencies are confirmed (click on Next or a Suggested Pair is clicked or when receive info is selected and it confirms both directly like in iOS) ",
				"name": "Swap Accounts Selected",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "swap_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"input_currency": {
									"description": "Currency symbol for the currency being swap from in exchange for some other currency. For example BTC in a BTC-ETH swap",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"input_type": {
									"description": "The type of account the swap funds are coming from",
									"enum": [
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"output_currency": {
									"description": "Currency symbol for the currency being swap to. For example ETH in a BTC-ETH swap",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"output_type": {
									"description": "The type of account the swap funds are going to",
									"enum": [
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user wants to Swap from",
									"enum": [
										"WALLET"
									],
									"type": "string"
								},
								"was_suggested": {
									"description": "Whether the swap accounts and currency were suggested by the UX and the user clicked on it. Empty if this information is unknown.",
									"type": "boolean"
								}
							},
							"required": [
								"platform",
								"output_currency",
								"output_type",
								"input_currency",
								"input_type",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user enters and submits the amount for a swap transaction. (Preview swap click on Web)",
				"name": "Swap Amount Entered",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "swap_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"amount": {
									"description": "The amount in the native fiat currency that the user selects the amount",
									"type": "number"
								},
								"amount_currency": {
									"description": "The native fiat currency ",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"input_amount": {
									"description": "The amount for the input currency",
									"type": "number"
								},
								"input_currency": {
									"description": "Currency symbol for the currency being swap from in exchange for some other currency. For example BTC in a BTC-ETH swap",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"input_type": {
									"description": "The type of account the swap funds are coming from",
									"enum": [
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"output_amount": {
									"description": "The amount for the output currency",
									"type": "number"
								},
								"output_currency": {
									"description": "Currency symbol for the currency being swap to. For example ETH in a BTC-ETH swap",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"output_type": {
									"description": "The type of account the swap funds are going to",
									"enum": [
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user wants to Swap from",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"input_currency",
								"platform",
								"input_amount",
								"input_type",
								"device",
								"output_type",
								"output_currency"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user clicks on the widget or button which sets the max amount allowed.",
				"name": "Swap Amount Max Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "swap_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"amount_currency": {
									"description": "If the button explicitly displays the amount in a specific currency. what is the currency being clicked on for the max amount ?",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"input_currency": {
									"description": "Currency symbol for the currency being swap from in exchange for some other currency. For example BTC in a BTC-ETH swap",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"input_type": {
									"description": "The type of account the swap funds are coming from",
									"enum": [
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"output_currency": {
									"description": "Currency symbol for the currency being swap to. For example ETH in a BTC-ETH swap",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"output_type": {
									"description": "The type of account the swap funds are going to",
									"enum": [
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user wants to Swap from",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"input_type",
								"platform",
								"output_currency",
								"device",
								"output_type",
								"input_currency"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user clicks on the widget or button which sets the min amount allowed.",
				"name": "Swap Amount Min Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "swap_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"amount_currency": {
									"description": "If the button explicitly displays the amount in a specific currency. what is the currency being clicked on for the min amount ?",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"input_currency": {
									"description": "Currency symbol for the currency being swap from in exchange for some other currency. For example BTC in a BTC-ETH swap",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"input_type": {
									"description": "The type of account the swap funds are coming from",
									"enum": [
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"output_currency": {
									"description": "Currency symbol for the currency being swap to. For example ETH in a BTC-ETH swap",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"output_type": {
									"description": "The type of account the swap funds are going to",
									"enum": [
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user wants to Swap from",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"input_currency",
								"input_type",
								"output_currency",
								"device",
								"output_type",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Swap Crypto to Crypto (ONLY!) order is cancelled (when updating a custodial transaction with final state CANCELED from custodial_transactions from nabu gateway, with input and output currencies between crypto",
				"name": "Swap Cancelled",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "swap_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"direction": {
									"description": "What type of swap transactions it is, as a direction from/to Custodial or Non Custodial Wallet. INTERNAL is from TRADING to TRADING wallets. ON_CHAIN is from USERKEY to USERKEY. FROM_USERKEY is from USERKEY to TRADING wallets. TO_USERKEY is from TRADING to USERKEY wallets",
									"enum": [
										"FROM_USERKEY",
										"INTERNAL",
										"ON_CHAIN",
										"TO_USERKEY"
									],
									"type": "string"
								},
								"from_account_type": {
									"description": "The type of account the swap funds are coming from. (USERKEY for ON_CHAIN and FROM_USERKEY directions, TRADING for INTERNAL and TO_USERKEY)",
									"enum": [
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"input_amount": {
									"description": "The amount for the input currency",
									"type": "number"
								},
								"input_amount_usd": {
									"description": "Approximate amount in USD sent by the user.",
									"type": "number"
								},
								"input_currency": {
									"description": "Symbol for the crypto currency being swap from in exchange for some other crypto currency. For example BTC in a BTC-ETH swap",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"output_amount": {
									"description": "The amount for the output currency",
									"type": "number"
								},
								"output_currency": {
									"description": "Symbol for the crypto currency being swap to. For example ETH in a BTC-ETH swap",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"payment_id": {
									"description": "id of the payment (id of the transaction from nabu payments)",
									"type": "string"
								},
								"platform": {
									"description": "What platform the event was started from. (WALLET)\n",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"to_account_type": {
									"description": "The type of account the swap funds are coming from. (USERKEY for ON_CHAIN and TO_USERKEY directions, TRADING for INTERNAL and FROM_USERKEY directions)",
									"enum": [
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"transaction_id": {
									"description": "id of the transaction from nabu gateway custodial_transaction table",
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device",
								"transaction_id",
								"from_account_type",
								"output_amount",
								"input_currency",
								"input_amount",
								"direction",
								"output_currency",
								"to_account_type"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Button which brings the user to the Swap product clicked",
				"name": "Swap Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "swap_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"origin": {
									"description": "What button we are referring to. \nCURRENCY_PAGE : CTA or menu on the coin page next to balance. \nDASHBOARD_PROMO : announcement card or promo on dashboard. \nDEEP_LINK : any deep linking\nNAVIGATION : navigation bar. \nPRICES_PAGE : prices page in wallet. \nSEND: comes from Send product. \nSETTINGS : Settings page\n",
									"enum": [
										"CURRENCY_PAGE",
										"DASHBOARD_PROMO",
										"DEEP_LINK",
										"NAVIGATION",
										"PRICES_PAGE",
										"SEND",
										"SETTINGS"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is clicking from",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"origin",
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Swap Crypto to Crypto (ONLY!) order is completed (when updating a custodial transaction with final state FINISHED from custodial_transactions from nabu gateway, with input and output currencies between crypto",
				"name": "Swap Completed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "swap_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"direction": {
									"description": "What type of swap transactions it is, as a direction from/to Custodial or Non Custodial Wallet. INTERNAL is from TRADING to TRADING wallets. ON_CHAIN is from USERKEY to USERKEY. FROM_USERKEY is from USERKEY to TRADING wallets. TO_USERKEY is from TRADING to USERKEY wallets",
									"enum": [
										"FROM_USERKEY",
										"INTERNAL",
										"ON_CHAIN",
										"TO_USERKEY"
									],
									"type": "string"
								},
								"from_account_type": {
									"description": "The type of account the swap funds are coming from. (USERKEY for ON_CHAIN and FROM_USERKEY directions, TRADING for INTERNAL and TO_USERKEY)",
									"enum": [
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"input_amount": {
									"description": "The amount for the input currency",
									"type": "number"
								},
								"input_amount_usd": {
									"description": "Approximate amount in USD sent by the user.",
									"type": "number"
								},
								"input_currency": {
									"description": "Symbol for the crypto currency being swap from in exchange for some other crypto currency. For example BTC in a BTC-ETH swap",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"output_amount": {
									"description": "The amount for the output currency",
									"type": "number"
								},
								"output_currency": {
									"description": "Symbol for the crypto currency being swap to. For example ETH in a BTC-ETH swap",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"payment_id": {
									"description": "id of the payment (id of the transaction from nabu payments)",
									"type": "string"
								},
								"platform": {
									"description": "What platform the event was started from. (WALLET)\n",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"spread_percentage": {
									"description": "Spread percentage applied to the exchange rate",
									"type": "number"
								},
								"to_account_type": {
									"description": "The type of account the swap funds are coming from. (USERKEY for ON_CHAIN and TO_USERKEY directions, TRADING for INTERNAL and FROM_USERKEY directions)",
									"enum": [
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"transaction_id": {
									"description": "id of the transaction from nabu gateway custodial_transaction table",
									"type": "string"
								}
							},
							"required": [
								"from_account_type",
								"output_currency",
								"input_amount",
								"input_currency",
								"direction",
								"to_account_type",
								"spread_percentage",
								"output_amount",
								"platform",
								"input_amount_usd",
								"device",
								"transaction_id"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "User submits a Crypto to Crypto (ONLY!) swap order (when creating a custodial transaction with state CREATED from custodial_transactions from nabu gateway, with input and output currencies between crypto",
				"name": "Swap Created",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "swap_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"direction": {
									"description": "What type of swap transactions it is, as a direction from/to Custodial or Non Custodial Wallet. INTERNAL is from TRADING to TRADING wallets. ON_CHAIN is from USERKEY to USERKEY. FROM_USERKEY is from USERKEY to TRADING wallets. TO_USERKEY is from TRADING to USERKEY wallets",
									"enum": [
										"FROM_USERKEY",
										"INTERNAL",
										"ON_CHAIN",
										"TO_USERKEY"
									],
									"type": "string"
								},
								"from_account_type": {
									"description": "The type of account the swap funds are coming from. (USERKEY for ON_CHAIN and FROM_USERKEY directions, TRADING for INTERNAL and TO_USERKEY)",
									"enum": [
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"input_amount": {
									"description": "The amount for the input currency",
									"type": "number"
								},
								"input_amount_usd": {
									"description": "Approximate amount in USD sent by the user.",
									"type": "number"
								},
								"input_currency": {
									"description": "Symbol for the crypto currency being swap from in exchange for some other crypto currency. For example BTC in a BTC-ETH swap",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"output_amount": {
									"description": "The amount for the output currency",
									"type": "number"
								},
								"output_currency": {
									"description": "Symbol for the crypto currency being swap to. For example ETH in a BTC-ETH swap",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"payment_id": {
									"description": "id of the payment (id of the transaction from nabu payments)",
									"type": "string"
								},
								"platform": {
									"description": "What platform the event was started from. (WALLET)\n",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"to_account_type": {
									"description": "The type of account the swap funds are coming from. (USERKEY for ON_CHAIN and TO_USERKEY directions, TRADING for INTERNAL and FROM_USERKEY directions)",
									"enum": [
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"transaction_id": {
									"description": "id of the transaction from nabu gateway custodial_transaction table",
									"type": "string"
								}
							},
							"required": [
								"output_amount",
								"output_currency",
								"input_currency",
								"direction",
								"from_account_type",
								"device",
								"platform",
								"input_amount",
								"to_account_type",
								"transaction_id"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Swap Crypto to Crypto (ONLY!) order is expired (when updating a custodial transaction with final state EXPIRED from custodial_transactions from nabu gateway, with input and output currencies between crypto",
				"name": "Swap Expired",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "swap_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"direction": {
									"description": "What type of swap transactions it is, as a direction from/to Custodial or Non Custodial Wallet. INTERNAL is from TRADING to TRADING wallets. ON_CHAIN is from USERKEY to USERKEY. FROM_USERKEY is from USERKEY to TRADING wallets. TO_USERKEY is from TRADING to USERKEY wallets",
									"enum": [
										"FROM_USERKEY",
										"INTERNAL",
										"ON_CHAIN",
										"TO_USERKEY"
									],
									"type": "string"
								},
								"from_account_type": {
									"description": "The type of account the swap funds are coming from. (USERKEY for ON_CHAIN and FROM_USERKEY directions, TRADING for INTERNAL and TO_USERKEY)",
									"enum": [
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"input_amount": {
									"description": "The amount for the input currency",
									"type": "number"
								},
								"input_amount_usd": {
									"description": "Approximate amount in USD sent by the user.",
									"type": "number"
								},
								"input_currency": {
									"description": "Symbol for the crypto currency being swap from in exchange for some other crypto currency. For example BTC in a BTC-ETH swap",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"output_amount": {
									"description": "The amount for the output currency",
									"type": "number"
								},
								"output_currency": {
									"description": "Symbol for the crypto currency being swap to. For example ETH in a BTC-ETH swap",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"payment_id": {
									"description": "id of the payment (id of the transaction from nabu payments)",
									"type": "string"
								},
								"platform": {
									"description": "What platform the event was started from. (WALLET)",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"to_account_type": {
									"description": "The type of account the swap funds are coming from. (USERKEY for ON_CHAIN and TO_USERKEY directions, TRADING for INTERNAL and FROM_USERKEY directions)",
									"enum": [
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"transaction_id": {
									"description": "id of the transaction from nabu gateway custodial_transaction table",
									"type": "string"
								}
							},
							"required": [
								"output_currency",
								"to_account_type",
								"transaction_id",
								"output_amount",
								"device",
								"from_account_type",
								"direction",
								"platform",
								"input_currency",
								"input_amount"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Swap Crypto to Crypto (ONLY!) order is failed (when updating a custodial transaction with final state FAILED from custodial_transactions from nabu gateway, with input and output currencies between crypto",
				"name": "Swap Failed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "swap_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"direction": {
									"description": "What type of swap transactions it is, as a direction from/to Custodial or Non Custodial Wallet. INTERNAL is from TRADING to TRADING wallets. ON_CHAIN is from USERKEY to USERKEY. FROM_USERKEY is from USERKEY to TRADING wallets. TO_USERKEY is from TRADING to USERKEY wallets",
									"enum": [
										"FROM_USERKEY",
										"INTERNAL",
										"ON_CHAIN",
										"TO_USERKEY"
									],
									"type": "string"
								},
								"from_account_type": {
									"description": "The type of account the swap funds are coming from. (USERKEY for ON_CHAIN and FROM_USERKEY directions, TRADING for INTERNAL and TO_USERKEY)",
									"enum": [
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"input_amount": {
									"description": "The amount for the input currency",
									"type": "number"
								},
								"input_amount_usd": {
									"description": "Approximate amount in USD sent by the user.",
									"type": "number"
								},
								"input_currency": {
									"description": "Symbol for the crypto currency being swap from in exchange for some other crypto currency. For example BTC in a BTC-ETH swap",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"output_amount": {
									"description": "The amount for the output currency",
									"type": "number"
								},
								"output_currency": {
									"description": "Symbol for the crypto currency being swap to. For example ETH in a BTC-ETH swap",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"payment_id": {
									"description": "id of the payment (id of the transaction from nabu payments)",
									"type": "string"
								},
								"platform": {
									"description": "What platform the event was started from. (WALLET)",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"to_account_type": {
									"description": "The type of account the swap funds are coming from. (USERKEY for ON_CHAIN and TO_USERKEY directions, TRADING for INTERNAL and FROM_USERKEY directions)",
									"enum": [
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"transaction_id": {
									"description": "id of the transaction from nabu gateway custodial_transaction table",
									"type": "string"
								}
							},
							"required": [
								"output_currency",
								"input_currency",
								"direction",
								"input_amount",
								"output_amount",
								"device",
								"platform",
								"to_account_type",
								"from_account_type",
								"transaction_id"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user selects and submits from what account and currency the swap funds should come from.  Event is triggered when a specific account and currency are selected from a dropdown or list of potential accounts",
				"name": "Swap From Selected",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "swap_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"input_currency": {
									"description": "Currency symbol for the currency being swap from in exchange for some other currency. For example BTC in a BTC-ETH swap",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"input_type": {
									"description": "The type of account the swap funds are coming from",
									"enum": [
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user wants to Swap from",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"input_type",
								"device",
								"platform",
								"input_currency"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user selects and submits to what account the swapped funds and currency should be received to. Event is triggered when a specific account and currency are selected from a dropdown or list of potential accounts",
				"name": "Swap Receive Selected",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "swap_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"output_currency": {
									"description": "Currency symbol for the currency being swap to. For example ETH in a BTC-ETH swap",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"output_type": {
									"description": "The type of account the swap funds are going to",
									"enum": [
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user wants to Swap from",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"output_currency",
								"output_type",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Swap Crypto to Crypto (ONLY!) order is rejected. It is not being created at all",
				"name": "Swap Rejected",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "swap_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"direction": {
									"description": "What type of swap transactions it is, as a direction from/to Custodial or Non Custodial Wallet. INTERNAL is from TRADING to TRADING wallets. ON_CHAIN is from USERKEY to USERKEY. FROM_USERKEY is from USERKEY to TRADING wallets. TO_USERKEY is from TRADING to USERKEY wallets",
									"enum": [
										"FROM_USERKEY",
										"INTERNAL",
										"ON_CHAIN",
										"TO_USERKEY"
									],
									"type": "string"
								},
								"error_message": {
									"description": "error message for the rejection",
									"type": "string"
								},
								"from_account_type": {
									"description": "The type of account the swap funds are coming from. (USERKEY for ON_CHAIN and FROM_USERKEY directions, TRADING for INTERNAL and TO_USERKEY)",
									"enum": [
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"input_amount": {
									"description": "The amount for the input currency",
									"type": "number"
								},
								"input_amount_usd": {
									"description": "Approximate amount in USD sent by the user.",
									"type": "number"
								},
								"input_currency": {
									"description": "Symbol for the crypto currency being swap from in exchange for some other crypto currency. For example BTC in a BTC-ETH swap",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"output_amount": {
									"description": "The amount for the output currency",
									"type": "number"
								},
								"output_currency": {
									"description": "Symbol for the crypto currency being swap to. For example ETH in a BTC-ETH swap",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"payment_id": {
									"description": "id of the payment (id of the transaction from nabu payments)",
									"type": "string"
								},
								"platform": {
									"description": "What platform the event was started from. (WALLET)",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"property": {
									"description": "What platform the event was started from. (WALLET)",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"rejection_reason": {
									"description": "The main reason why creating the swap order was rejected.",
									"type": "string"
								},
								"to_account_type": {
									"description": "The type of account the swap funds are coming from. (USERKEY for ON_CHAIN and TO_USERKEY directions, TRADING for INTERNAL and FROM_USERKEY directions)",
									"enum": [
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								}
							},
							"required": [
								"to_account_type",
								"platform",
								"device",
								"input_currency",
								"output_currency",
								"from_account_type",
								"rejection_reason",
								"output_amount",
								"direction",
								"transaction_id",
								"input_amount",
								"property"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "User confirms and submits a Crypto to Crypto (ONLY!) swap order and the client requests the swap to be created to the backend. We record this in the client because the backend doesn't have the fee information.",
				"name": "Swap Requested",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "swap_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"exchange_rate": {
									"description": "The exchange rate of the swap, how much 1 input_currency is worth in output_currency.. For example, for a BTC-ETH swap, we would have 1 BTC = 31.48 ETH, we would store 31.48",
									"type": "number"
								},
								"input_amount": {
									"description": "The amount for the input currency",
									"type": "number"
								},
								"input_currency": {
									"description": "Symbol for the crypto currency being swap from in exchange for some other crypto currency. For example BTC in a BTC-ETH swap",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"input_type": {
									"description": "The type of account the swap funds are coming from. (USERKEY for ON_CHAIN and FROM_USERKEY directions, TRADING for INTERNAL and TO_USERKEY)",
									"enum": [
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"network_fee_input_amount": {
									"description": "Network fee amount for the deposit (input) of the swap transaction. Amount should be for the network_fee_input_currency. Will be 0 for input_type TRADING and > 0 for USERKEY",
									"type": "number"
								},
								"network_fee_input_currency": {
									"description": "Network fee currency for the deposit (input) of the swap transaction, for the network_fee_input_amount",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"network_fee_output_amount": {
									"description": "Network fee amount for the destination (output) of the swap transaction. Amount should be for the network_fee_output_currency. Will be 0 for output_type TRADING and > 0 for USERKEY",
									"type": "number"
								},
								"network_fee_output_currency": {
									"description": "Network fee currency for the destination (output) of the swap transaction, for the network_fee_output_amount",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"output_amount": {
									"description": "The amount for the output currency",
									"type": "number"
								},
								"output_currency": {
									"description": "Symbol for the crypto currency being swap to. For example ETH in a BTC-ETH swap",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"output_type": {
									"description": "The type of account the swap funds are going to. (USERKEY for ON_CHAIN and TO_USERKEY directions, TRADING for INTERNAL and FROM_USERKEY directions)",
									"enum": [
										"TRADING",
										"USERKEY"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user wants to Swap from",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"input_amount",
								"network_fee_input_amount",
								"network_fee_output_amount",
								"output_type",
								"device",
								"network_fee_output_currency",
								"input_type",
								"input_currency",
								"output_amount",
								"network_fee_input_currency",
								"output_currency"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Swap modal or screen viewed. (SWAP_MODAL for web, Swap tab screens for mobile)",
				"name": "Swap Viewed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "swap_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"path": {
									"description": "Path portion of the URL of the page. Equivalent to canonical path which defaults to location.pathname from the DOM API.",
									"type": "string"
								},
								"platform": {
									"description": "What platform the page viewed belongs to",
									"enum": [
										"WALLET"
									],
									"type": "string"
								},
								"referrer": {
									"description": "Full URL of the previous page. Equivalent to document.referrer from the DOM API.",
									"type": "string"
								},
								"search": {
									"description": "Query string portion of the URL of the page. Equivalent to location.search from the DOM API.",
									"type": "string"
								},
								"title": {
									"description": "Title of the page. Equivalent to document.title from the DOM API.",
									"type": "string"
								},
								"url": {
									"description": "Full URL of the page. First we look for the canonical url. If the canonical url is not provided, we use location.href from the DOM API.",
									"type": "string"
								}
							},
							"required": [
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "User swipes to turn on or turn off the receiving feature.",
				"name": "Swipe To Receive Option Updated",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "security_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"WEB"
									],
									"type": "string"
								},
								"is_enabled": {
									"description": "Receiving feature was enabled or disabled.",
									"type": "boolean"
								},
								"platform": {
									"description": "From what platform the user is managing Security events",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"is_enabled",
								"device",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Portfolio Widget Sync was turned on or turned off",
				"name": "Sync My Widget Portfolio Updated",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "security_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS"
									],
									"type": "string"
								},
								"is_enabled": {
									"description": "My Widget Portafolio Sync option enabled or disabled.",
									"type": "boolean"
								},
								"platform": {
									"description": "From what platform the user is managing Security events",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"is_enabled",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "User sets their preferred theme from the displayed options.",
				"name": "Theme Set",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "settings_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is using the Settings",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"theme": {
									"description": "",
									"enum": [
										"COMPLEMENT",
										"DARAKMODE",
										"DEFAULT",
										"GRAYSCALE",
										"INVERT"
									],
									"type": "string"
								}
							},
							"required": [
								"theme",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user enters and submits the amount for an exchange trade order. The user will typically confirms the trade in the next screen",
				"name": "Trade Amount Entered",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"trade_e1",
							"margin"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"collateral_type": {
									"description": "Currency for collateral",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"input_amount": {
									"description": "Amount of the trade in input currency",
									"type": "number"
								},
								"leverage_ratio": {
									"description": "Ratio of leverage. 2 for 2x, 3 for 3x, etc.",
									"type": [
										"number",
										"null"
									]
								},
								"limit_price": {
									"description": "Limit price of the trade (empty for market orders)",
									"type": "number"
								},
								"pair": {
									"description": "What is the trading pair of the trade",
									"pattern": "^[A-Z]{3,5}-[A-Z]{3,5}$",
									"type": "string"
								},
								"platform": {
									"description": "From what platform the event is triggered",
									"enum": [
										"EXCHANGE"
									],
									"type": "string"
								},
								"side": {
									"description": "whether it's a buy or sell trade",
									"enum": [
										"BUY",
										"SELL"
									],
									"type": "string"
								},
								"stop_loss": {
									"description": "Stop loss price for leverage",
									"type": "number"
								},
								"stop_price": {
									"description": "Stop price of the trade (only for stop-limit orders)",
									"type": "number"
								},
								"tif": {
									"description": "Time In Force (empty for Market trades, required otherwise)",
									"enum": [
										"FOK",
										"GTC",
										"GTD",
										"IOC"
									],
									"type": "string"
								},
								"trade_type": {
									"description": "What type of trade is created",
									"enum": [
										"LIMIT",
										"MARKET",
										"STOP",
										"STOP_LIMIT"
									],
									"type": "string"
								},
								"with_leverage": {
									"description": "Trade with leverage",
									"type": "boolean"
								}
							},
							"required": [
								"platform",
								"trade_type",
								"tif",
								"input_amount",
								"pair",
								"with_leverage",
								"side",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user clicked on the widget or button which sets pre selected amounts to the order",
				"name": "Trade Amount Helper Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "trade_e1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"amount": {
									"description": "What amount in amount_currency the user clicks on (either amount or amount_pct should be specified)",
									"type": "number"
								},
								"amount_currency": {
									"description": "What currency  for the amount selected (empty if the amount is in percentage)",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"amount_pct": {
									"description": "What amount percentage the user clicks on (either amount or amount_pct should be specified) Enter 25 if 25% selected",
									"type": "integer"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"input_amount": {
									"description": "Amount of the trade in input currency",
									"type": "number"
								},
								"pair": {
									"description": "What is the trading pair of the trade",
									"pattern": "^[A-Z]{3,5}-[A-Z]{3,5}$",
									"type": "string"
								},
								"platform": {
									"description": "From what platform the amount is triggered",
									"enum": [
										"EXCHANGE"
									],
									"type": "string"
								},
								"side": {
									"description": "whether it's a buy or sell trade",
									"enum": [
										"BUY",
										"SELL"
									],
									"type": "string"
								},
								"tif": {
									"description": "Time In Force (empty for Market trades, required otherwise)",
									"enum": [
										"FOK",
										"GTC",
										"GTD",
										"IOC"
									],
									"type": "string"
								},
								"trade_type": {
									"description": "What type of trade is created",
									"enum": [
										"LIMIT",
										"MARKET",
										"STOP",
										"STOP_LIMIT"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform",
								"trade_type",
								"tif",
								"input_amount",
								"pair",
								"side"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The client sends a requests to the backend to cancel a trade, for example after clicking on \"cancel order\" or similar buttons",
				"name": "Trade Cancellation Requested",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "trade_e1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"origin": {
									"description": "What button the user clicked on to request the cancelation.  OPEN_ORDERS : From the list of open orders. TRADE_HISTORY : from the trade history page. TRADE_DETAILS : bottom of the trade details.",
									"enum": [
										"OPEN_ORDERS",
										"TRADE_DETAILS",
										"TRADE_HISTORY"
									],
									"type": "string"
								}
							},
							"required": [
								"origin",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "A Trade has been created. This event was not implemented due to the fact the market makers will trigger the event constantly. consider using Trade Preview Submitted as an alternative",
				"name": "Trade Created",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"trade_e1",
							"margin"
						],
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"exchange_rate": {
									"description": "the exchange rate, If pair is BTC-USD, it is how much 1 BTC is worth in BTC. ",
									"type": "number"
								},
								"handle_instruction": {
									"description": "Handle instruction. M for margin order, PSF for spot orders that are created in the background to close a margin position, null for spot orders, C not used at the moment.",
									"enum": [
										"CASH",
										"CLOSE_POSITION_MARGIN",
										"FORCE_CLOSE_POSITION_MARGIN",
										"MARGIN",
										"STOP_LOSS_CLOSE_POSITION_MARGIN",
										null
									],
									"type": [
										"string",
										"null"
									]
								},
								"input_amount": {
									"description": "Amount of the trade in input currency",
									"type": "number"
								},
								"input_amount_usd": {
									"description": "Amount of the trade in USD",
									"type": "number"
								},
								"pair": {
									"description": "What is the trading pair of the trade",
									"pattern": "^[A-Z]{3,5}-[A-Z]{3,5}$",
									"type": "string"
								},
								"side": {
									"description": "whether it's a buy or sell trade",
									"enum": [
										"BUY",
										"SELL"
									],
									"type": "string"
								},
								"tif": {
									"description": "Time In Force (empty for Market trades, required otherwise)",
									"enum": [
										"FOK",
										"GTC",
										"GTD",
										"IOC"
									],
									"type": "string"
								},
								"trade_id": {
									"description": "TBD with Niall",
									"type": "string"
								},
								"trade_type": {
									"description": "What type of trade is created",
									"enum": [
										"LIMIT",
										"MARKET",
										"STOP",
										"STOP_LIMIT"
									],
									"type": "string"
								}
							},
							"required": [
								"trade_type",
								"pair",
								"input_amount_usd",
								"input_amount",
								"exchange_rate",
								"side",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "A Trade has been filled or partially filled. If a trade is fully filled in two parts, this event will be triggered twice and the sum of the input_amount should match the trade amount",
				"name": "Trade Filled",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"trade_e1",
							"margin"
						],
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"exchange_rate": {
									"description": "the exchange rate, If pair is BTC-USD, it is how much 1 BTC is worth in BTC. ",
									"type": "number"
								},
								"fee_amount": {
									"description": "Trade fee in native counter currency. (for BTC-ETH pair it would be ETH). For 0.013 ETH fee, enter 0.013.",
									"type": "number"
								},
								"fee_amount_usd": {
									"description": "IMPORTANT : Trade fee in USD. This will be used for revenue information. For 0.12 USD enter 0.12, NOT 12.",
									"type": "number"
								},
								"handle_instruction": {
									"description": "Handle instruction. M for margin order, PSF for spot orders that are created in the background to close a margin position, null for spot orders, C not used at the moment.",
									"enum": [
										"CASH",
										"CLOSE_POSITION_MARGIN",
										"FORCE_CLOSE_POSITION_MARGIN",
										"MARGIN",
										"STOP_LOSS_CLOSE_POSITION_MARGIN"
									],
									"type": "string"
								},
								"input_amount": {
									"description": "The amount being filled for the trade, the input currency",
									"type": "number"
								},
								"input_amount_usd": {
									"description": "The amount being filled for the trade in USD",
									"type": "number"
								},
								"liquidity_indicator": {
									"description": "Whether the trade fill Adds liquidity (A) = MAKER  or Removes liquidity = TAKER. or NEUTRAL",
									"enum": [
										"MAKER",
										"NEUTRAL",
										"TAKER"
									],
									"type": "string"
								},
								"pair": {
									"description": "What is the trading pair of the trade",
									"pattern": "^[A-Z]{3,5}-[A-Z]{3,5}$",
									"type": "string"
								},
								"side": {
									"description": "Whether it is a Buy or Sell trade",
									"enum": [
										"BUY",
										"SELL"
									],
									"type": "string"
								},
								"tif": {
									"description": "Time In Force (empty for Market trades, required otherwise)",
									"enum": [
										"FOK",
										"GTC",
										"GTD",
										"IOC"
									],
									"type": "string"
								},
								"trade_id": {
									"description": "TBD with Niall",
									"type": "string"
								},
								"trade_type": {
									"description": "What type of trade is created",
									"enum": [
										"LIMIT",
										"MARKET",
										"STOP",
										"STOP_LIMIT"
									],
									"type": "string"
								},
								"volume_usd_last_30d": {
									"description": "What is the trading volume of the user in the last 30d, including this input_amount_usd. This is mainly used for Tune integration to reward user based on the user tier.",
									"type": "number"
								}
							},
							"required": [
								"pair",
								"exchange_rate",
								"side",
								"input_amount_usd",
								"input_amount",
								"liquidity_indicator",
								"fee_amount_usd",
								"tif",
								"handle_instruction",
								"trade_type",
								"device",
								"volume_usd_last_30d",
								"fee_amount"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user clicks to cancel the trade being previewed. The preview is typically the final screen before the trade is actually placed, just after the amount is entered.",
				"name": "Trade Preview Cancelled",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "trade_e1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"input_amount": {
									"description": "Amount of the trade in input currency",
									"type": "number"
								},
								"limit_price": {
									"description": "Limit price of the trade (empty for market orders)",
									"type": "number"
								},
								"pair": {
									"description": "What is the trading pair of the trade",
									"pattern": "^[A-Z]{3,5}-[A-Z]{3,5}$",
									"type": "string"
								},
								"platform": {
									"description": "From what platform the event is triggered",
									"enum": [
										"EXCHANGE"
									],
									"type": "string"
								},
								"side": {
									"description": "whether it's a buy or sell trade",
									"enum": [
										"BUY",
										"SELL"
									],
									"type": "string"
								},
								"stop_price": {
									"description": "Stop price of the trade (only for stop-limit orders)",
									"type": "number"
								},
								"tif": {
									"description": "Time In Force (empty for Market trades, required otherwise)",
									"enum": [
										"FOK",
										"GTC",
										"GTD",
										"IOC"
									],
									"type": "string"
								},
								"trade_type": {
									"description": "What type of trade is created",
									"enum": [
										"LIMIT",
										"MARKET",
										"STOP",
										"STOP_LIMIT"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform",
								"trade_type",
								"tif",
								"input_amount",
								"pair",
								"side"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user clicks to retry the trade being previewed. (mobile only) This happens for example when the previous submission failed few seconds earlier. The preview is typically the final screen before the trade is actually placed, just after the amount is entered.",
				"name": "Trade Preview Retried",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "trade_e1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"APP-Android"
									],
									"type": "string"
								},
								"failure_reason": {
									"description": "Why the previously submit trade previous failed",
									"type": "string"
								},
								"input_amount": {
									"description": "Amount of the trade in input currency",
									"type": "number"
								},
								"limit_price": {
									"description": "Limit price of the trade (empty for market orders)",
									"type": "number"
								},
								"pair": {
									"description": "What is the trading pair of the trade",
									"pattern": "^[A-Z]{3,5}-[A-Z]{3,5}$",
									"type": "string"
								},
								"platform": {
									"description": "From what platform the event is triggered",
									"enum": [
										"EXCHANGE"
									],
									"type": "string"
								},
								"side": {
									"description": "whether it's a buy or sell trade",
									"enum": [
										"BUY",
										"SELL"
									],
									"type": "string"
								},
								"stop_price": {
									"description": "Stop price of the trade (only for stop-limit orders)",
									"type": "number"
								},
								"tif": {
									"description": "Time In Force (empty for Market trades, required otherwise)",
									"enum": [
										"FOK",
										"GTC",
										"GTD",
										"IOC"
									],
									"type": "string"
								},
								"trade_type": {
									"description": "What type of trade is created",
									"enum": [
										"LIMIT",
										"MARKET",
										"STOP",
										"STOP_LIMIT"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"pair",
								"platform",
								"side",
								"trade_type",
								"tif",
								"input_amount"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user submits the trade being previewed. The preview is typically the final screen before the trade is actually placed, just after the amount is entered.",
				"name": "Trade Preview Submitted",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "trade_e1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"input_amount": {
									"description": "Amount of the trade in input currency",
									"type": "number"
								},
								"limit_price": {
									"description": "Limit price of the trade (empty for market orders)",
									"type": "number"
								},
								"pair": {
									"description": "What is the trading pair of the trade",
									"pattern": "^[A-Z]{3,5}-[A-Z]{3,5}$",
									"type": "string"
								},
								"platform": {
									"description": "From what platform the event is triggered",
									"enum": [
										"EXCHANGE"
									],
									"type": "string"
								},
								"side": {
									"description": "whether it's a buy or sell trade",
									"enum": [
										"BUY",
										"SELL"
									],
									"type": "string"
								},
								"stop_price": {
									"description": "Stop price of the trade (only for stop-limit orders)",
									"type": "number"
								},
								"tif": {
									"description": "Time In Force (empty for Market trades, required otherwise)",
									"enum": [
										"FOK",
										"GTC",
										"GTD",
										"IOC"
									],
									"type": "string"
								},
								"trade_type": {
									"description": "What type of trade is created",
									"enum": [
										"LIMIT",
										"MARKET",
										"STOP",
										"STOP_LIMIT"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"trade_type",
								"tif",
								"input_amount",
								"pair",
								"platform",
								"side"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Button which brings the user to the Trading page or screen is clicked",
				"name": "Trading Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "trade_e1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"origin": {
									"description": "what button we are referring to. NAVIGATION (mobile only) : navigation bar. TOP_MARKETS (mobile only) : click on the trading pair in Top Markets page, HOMEPAGE (web only) : the View Exchange button. PAIR_MENU : the pair selection. When clicking on the tab on web, or on the select from dropdown on mobile\n",
									"enum": [
										"HOMEPAGE",
										"NAVIGATION",
										"PAIR_MENU",
										"TOP_MARKETS"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is clicking from",
									"enum": [
										"EXCHANGE"
									],
									"type": "string"
								}
							},
							"required": [
								"origin",
								"device",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Main Trading screen or page in the exchange is viewed. This is the Exchange page with the orderbook, price chart and buy sell screen",
				"name": "Trading Viewed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "trade_e1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"pair": {
									"description": "What trading pair is being viewed",
									"pattern": "^[A-Z]{3,5}-[A-Z]{3,5}$",
									"type": "string"
								},
								"path": {
									"description": "Path portion of the URL of the page. Equivalent to canonical path which defaults to location.pathname from the DOM API.",
									"type": "string"
								},
								"platform": {
									"description": "What platform the page viewed belongs to",
									"enum": [
										"EXCHANGE"
									],
									"type": "string"
								},
								"referrer": {
									"description": "Full URL of the previous page. Equivalent to document.referrer from the DOM API.",
									"type": "string"
								},
								"search": {
									"description": "Query string portion of the URL of the page. Equivalent to location.search from the DOM API.",
									"type": "string"
								},
								"title": {
									"description": "Title of the page. Equivalent to document.title from the DOM API.",
									"type": "string"
								},
								"url": {
									"description": "Full URL of the page. First we look for the canonical url. If the canonical url is not provided, we use location.href from the DOM API.",
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device",
								"pair"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Two-Step Verification turned off by user request.",
				"name": "Two Step Verification Disabled",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "security_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is managing Security events",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"two_step_option": {
									"description": "Which was the verification option activated before the user disabled two-step security? Authenticator App, Yubikey or Mobile Number",
									"enum": [
										"AUTHENTICATOR_APP",
										"MOBILE_NUMBER",
										"YUBIKEY"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"two_step_option"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Two-Step Verification succesfully activated.",
				"name": "Two Step Verification Enabled",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "security_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is managing Security events",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"two_step_option": {
									"description": "Which verification option was activated? Authenticator App, Yubikey or Mobile Number",
									"enum": [
										"AUTHENTICATOR_APP",
										"MOBILE_NUMBER",
										"YUBIKEY"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"two_step_option"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user clicks the preferred Two-Step security option",
				"name": "Two Step Verification Option Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "security_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-Android",
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is managing Security events",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"two_step_option": {
									"description": "Authenticator App, Yubikey or Mobile Number",
									"enum": [
										"AUTHENTICATOR_APP",
										"MOBILE_NUMBER",
										"YUBIKEY"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"two_step_option",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user clicks on a widget or CTA inviting the user to upgrade their tier status.",
				"name": "Upgrade Verification Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"onboarding_v1",
							"swap_v1",
							"settings_v1",
							"onboarding_e1"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"": {
									"description": "",
									"type": "object"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"origin": {
									"description": "From what screen or action the user started the verification. What button we are referring to. \nAIRDROP: . \nDASHBOARD_PROMO : announcement card or promo on dashboard. EDD : when an upgrade is required because an Enhanced Due Diligence required for a high risk user. DEPOSIT : when depositing funds requires upgrading.\nFIAT_FUNDS : when trying to deposit fiat. ONBOARDING : during a usual onboarding process.\nRESUBMISSION : navigation bar.\nSAVINGS (web only) : comes from interest savings product. \nSETTINGS: settings page. SIGN_UP : gold verification prompted at sign up upon account creation.  \nSIMPLEBUY : from buy or sell product. SIMPLETRADE : from Simple Trade product in exchange.\nSWAP: swap product. UNKNOWN : where origin could not be match to a product or other enums, or is hard to get",
									"enum": [
										"AIRDROP",
										"DASHBOARD_PROMO",
										"DEPOSIT",
										"EDD",
										"FIAT_FUNDS",
										"INTEREST",
										"MARGIN",
										"ONBOARDING",
										"PEEKSHEET",
										"RESUBMISSION",
										"SAVINGS",
										"SETTINGS",
										"SIGN_UP",
										"SIMPLEBUY",
										"SIMPLETRADE",
										"SWAP",
										"UNKNOWN",
										"WITHDRAW"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the Upgrade Verification was clicked from",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"tier": {
									"description": "What tier the user is trying to update to. 1 = Silver, 2 = Gold, 3 = SDD + silver, 5 = Platinium",
									"type": [
										"integer",
										"null"
									]
								}
							},
							"required": [
								"origin",
								"tier",
								"device",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "User eligible to use the product. More information on Simple Eligibility Nabu wiki",
				"name": "User Product Eligible",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"simplebuy_v1",
							"swap_v1"
						],
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"currency": {
									"description": "Used to check blocked regions and enabled currencies. (e.g. EUR)",
									"pattern": "^[A-Z]{3,5}$",
									"type": [
										"string",
										"null"
									]
								},
								"product": {
									"description": "Product name that the eligibility is checked for",
									"enum": [
										"SAVINGS",
										"SIMPLEBUY",
										"SWAP"
									],
									"type": "string"
								}
							},
							"required": [
								"product",
								"currency"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "User not eligible to use the product. More information on Simple Eligibility Nabu wiki",
				"name": "User Product Not Eligible",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"simplebuy_v1",
							"swap_v1"
						],
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"currency": {
									"description": "Used to check blocked regions and enabled currencies. (e.g. EUR)",
									"pattern": "^[A-Z]{3,5}$",
									"type": [
										"string",
										"null"
									]
								},
								"ineligibility_reason": {
									"description": "Reason for the inelegibility",
									"enum": [
										"INVALID_ADDRESS",
										"INVALID_USER",
										"TIER_TOO_LOW",
										"UNSUPPORTED_CURRENCY",
										"UNSUPPORTED_REGION"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the event was started from. (WALLET for wallet products nd EXCHANGE if product=MERCURY",
									"enum": [
										" WALLET",
										"EXCHANGE"
									],
									"type": "string"
								},
								"product": {
									"description": "Product name that the eligibility is checked for",
									"enum": [
										"SAVINGS",
										"SIMPLEBUY",
										"SWAP"
									],
									"type": "string"
								}
							},
							"required": [
								"currency",
								"platform",
								"product",
								"ineligibility_reason"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "User eligible to start the SDD (tier 3) verification process. More info on SDD-API Nabu wiki",
				"name": "User SDD Eligible",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "simplebuy_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "User not eligible to start the SDD (tier 3) verification process. User will be prompted for Gold verification instead in the wallet. More info on SDD-API Nabu wiki",
				"name": "User SDD Not Eligible",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "simplebuy_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"ineligibility_reason": {
									"description": "Reason for the inelegibility",
									"enum": [
										"BLOCKED",
										"KYC_TIER",
										"REGION"
									],
									"type": "string"
								}
							},
							"required": [
								"ineligibility_reason"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user submits the Authenticator App code, Yubikey code or SMS code in order to finish set up their two step verification",
				"name": "Verification Code Submitted",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "security_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the user is managing Security events",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"two_step_option": {
									"description": "Authenticator App, Yubikey or Mobile Number",
									"enum": [
										"AUTHENTICATOR_APP",
										"MOBILE_NUMBER",
										"YUBIKEY"
									],
									"type": "string"
								}
							},
							"required": [
								"two_step_option",
								"device",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "An identify verification has been performed, which typically means that some PII or documents have been submitted and validated by the provider.",
				"name": "Verification Completed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"onboarding_v1",
							"settings_v1",
							"onboarding_e1"
						],
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"platform": {
									"description": "What platform the verification was started from. (WALLET if product=SWAP and EXCHANGE if product=MERCURY in the  kyc verification table from nabu gateway)",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"provider": {
									"description": "what entity is performing the verification. Typically BLOCKCHAIN or VERIFF",
									"enum": [
										"BLOCKCHAIN",
										"MANUAL",
										"ONFIDO",
										"RDC",
										"RDC_MEDIA",
										"RDC_PEP",
										"VERIFF"
									],
									"type": "string"
								},
								"tier": {
									"description": "The tier the verification is about. 1 (Silver) or 2 (Gold) or 3 (SDD)  ",
									"type": "integer"
								}
							},
							"required": [
								"tier",
								"platform",
								"provider"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "An identify verification has been rejected, which typically means that some PII or documents have been submitted but were not suitable.",
				"name": "Verification Rejected",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"onboarding_v1",
							"settings_v1",
							"onboarding_e1"
						],
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"platform": {
									"description": "What platform the verification was started from. (WALLET if product=SWAP and EXCHANGE if product=MERCURY in the  kyc verification table from nabu gateway)",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"provider": {
									"description": "The entity that verifies the identity",
									"enum": [
										"BLOCKCHAIN",
										"MANUAL",
										"ONFIDO",
										"RDC",
										"RDC_MEDIA",
										"RDC_PEP",
										"VERIFF"
									],
									"type": "string"
								},
								"tier": {
									"description": "The tier the verification is about. 1 (Silver) or 2 (Gold) or 3 (SDD)  ",
									"type": "integer"
								}
							},
							"required": [
								"tier",
								"provider",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "An identify verification has been started : only available for Tier 2 gold. A user is trying to upgrade their verification tier, and is about to send documents or informations. Tier 1 and Tier 3 verification are only in Verification Completed event",
				"name": "Verification Started",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"onboarding_v1",
							"settings_v1",
							"onboarding_e1"
						],
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"platform": {
									"description": "What platform the verification was started from. (WALLET if product=SWAP and EXCHANGE if product=MERCURY in the  kyc verification table from nabu gateway)",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"provider": {
									"description": "The entity that verifies the identity",
									"enum": [
										"BLOCKCHAIN",
										"ONFIDO",
										"RDC",
										"RDC_MANUAL",
										"RDC_MEDIA",
										"RDC_PEP",
										"VERIFF"
									],
									"type": "string"
								},
								"tier": {
									"description": "Only available for tier 2 (Gold). Missing for tier 1 (Silver) and 3 (SDD)",
									"type": "integer"
								}
							},
							"required": [
								"platform",
								"tier"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "An identify verification submission, like video upload, was attempted but a failure happened",
				"name": "Verification Submission Failed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "onboarding_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "what device the verification submission was sent from",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"failure_reason": {
									"description": "why the verification submission failed",
									"enum": [
										"LOCAL_ERROR",
										"NETWORK_ERROR",
										"SERVER_ERROR",
										"UNKNOWN",
										"UPLOAD_ERROR",
										"VIDEO_FAILED"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the verification was started from. (WALLET if product=SWAP and EXCHANGE if product=MERCURY in the  kyc verification table from nabu gateway)",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"provider": {
									"description": "The entity that verifies the identity",
									"enum": [
										"BLOCKCHAIN",
										"MANUAL",
										"ONFIDO",
										"RDC",
										"RDC_MEDIA",
										"RDC_PEP",
										"VERIFF"
									],
									"type": "string"
								},
								"tier": {
									"description": "The tier the verification is about. 1 (Silver) or 2 (Gold) or 3 (SDD)  ",
									"type": "integer"
								}
							},
							"required": [
								"tier",
								"provider",
								"platform",
								"device",
								"failure_reason"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Allowing the following option prevents IP addresses that are known to be part of the Tor anonymizing network from accessing your wallet.",
				"name": "Wallet Access Via Tor Updated",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "security_v1",
						"source": "backend"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"is_blocked": {
									"description": "True if user only allowed login from IP whitelist.",
									"type": "boolean"
								},
								"platform": {
									"description": "From what platform the user is managing Security events\n",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"is_blocked"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "A button inviting the user to discover our Wallet product is clicked.  Note that this does not include the navigation part of the header.",
				"name": "Wallet Hyperlink Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"explorer",
							"dot_com"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"": {
									"description": "",
									"type": "object"
								},
								"device": {
									"description": "What device the event is tracked from",
									"enum": [
										"WEB"
									],
									"type": "string"
								},
								"origin": {
									"description": "From which part of the page was the button clicked",
									"enum": [
										"BODY",
										"LOWER_BANNER",
										"BANNER"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the event is referring to.",
									"enum": [
										"BLOCKCHAIN_COM",
										"EXPLORER"
									],
									"type": "string"
								},
								"platform_path": {
									"description": "Path portion of the URL of the page from where the button is clicked.\n  PRICES: from the explorer general price page with all the coins listed. \n PRICES_CURRENCY : blockchain.com/prices/[currency] : from the explorer price page about a specific crypto. .COM_WALLET :\nblockchain.com/wallet. EXPLORER : https://www.blockchain.com/explorer",
									"enum": [
										" PRICES_CURRENCY",
										".COM_WALLET",
										"EXPLORER",
										"PRICES"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "A user signs up for a Wallet account. Note that this is different from Signed Up which is triggered when a nabu user profile is created. A wallet without a nabu user will be seen as an Anonymous User",
				"name": "Wallet Signed Up",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "sign_up",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"country": {
									"description": "Country, as iso code alpha 2, provided by the user at sign up",
									"pattern": "^[A-Z]{2,2}$",
									"type": "string"
								},
								"country_state": {
									"description": "If applicable, country state, as ISO 3166-2 (US-NY for example),  provided by the user at sign up",
									"pattern": "^[A-Z]{2,2}-[A-Z]{2,2}$",
									"type": "string"
								},
								"device": {
									"description": "What device the user created a wallet from",
									"enum": [
										"APP-Android",
										"APP-iOS",
										"WEB"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is creating his wallet account from.",
									"enum": [
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user selects and submits the amount to be withdrawn. Note: On the web wallet, this is the final step and the user does not have to confirm at a later stage. For the mobile app and web wallet, the user will still have to confirm at a later stage for the withdraw order to be created.",
				"name": "Withdrawal Amount Entered",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"withdraw_v1",
							"trade_e1"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"amount": {
									"description": "The amount the user will withdraw (before fee applies)",
									"type": "number"
								},
								"currency": {
									"description": "the currency the user wants to withdraw",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is withdraw funds from",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"withdrawal_method": {
									"description": "How the funds will be withdrawn : \nBANK_ACCOUNT: funds sent to a bank account. \nBANK_TRANSFER : Funds sent to Linked account via Open Banking or ACH. CRYPTO : withdrawing to a crypto address",
									"enum": [
										"BANK_ACCOUNT",
										"BANK_TRANSFER",
										"CRYPTO"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"currency",
								"withdrawal_method",
								"amount",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user clicked on the widget or button which sets pre selected amounts to the withdrawal. Not available on Exchange Web at the moment.",
				"name": "Withdrawal Amount Helper Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "trade_e1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"amount_currency": {
									"description": "If the button explicitly displays the amount in a specific currency, what is the currency being clicked on for the max amount",
									"type": "number"
								},
								"amount_pct": {
									"description": "What amount percentage the user clicks on (either amount or amount_pct should be specified) Enter 25 if 25% selected",
									"type": "integer"
								},
								"currency": {
									"description": "the currency the user wants to withdraw",
									"pattern": "^[A-Z]{3,5}-[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "From what platform the amount is triggered",
									"enum": [
										"EXCHANGE"
									],
									"type": "string"
								},
								"withdrawal_method": {
									"description": "How the funds will be withdrawn : \nBANK_ACCOUNT: funds sent to a bank account. \nBANK_TRANSFER : Funds sent to Linked account via Open Banking or ACH. CRYPTO : withdrawing to a crypto address",
									"enum": [
										"BANK_ACCOUNT",
										"BANK_TRANSFER",
										"CRYPTO"
									],
									"type": "string"
								}
							},
							"required": [
								"withdrawal_method",
								"amount_pct",
								"device",
								"platform",
								"currency"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user clicked on the widget or button which sets the max amount allowed to withdraw",
				"name": "Withdrawal Amount Max Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "withdraw_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"amount_currency": {
									"description": "If the button explicitly displays the amount in a specific currency, what is the currency being clicked on for the max amount",
									"type": "number"
								},
								"currency": {
									"description": "the currency the user wants to withdraw",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is withdraw funds from",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"withdrawal_method": {
									"description": "How the funds will be withdrawn : \nBANK_ACCOUNT: funds sent to a bank account. \nBANK_TRANSFER : Funds sent to Linked account via Open Banking or ACH. ",
									"enum": [
										"BANK_ACCOUNT",
										"BANK_TRANSFER"
									],
									"type": "string"
								}
							},
							"required": [
								"currency",
								"withdrawal_method",
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user clicked on the widget or button which sets the min amount allowed to withdraw",
				"name": "Withdrawal Amount Min Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": "withdraw_v1",
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"amount_currency": {
									"description": "If the button explicitly displays the amount in a specific currency, what is the currency being clicked on for the max amount",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"currency": {
									"description": "the currency the user wants to withdraw",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is withdraw funds from",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"withdrawal_method": {
									"description": "How the funds will be withdrawn : \nBANK_ACCOUNT: funds sent to a bank account. \nBANK_TRANSFER : Funds sent to Linked account via Open Banking or ACH. ",
									"enum": [
										"BANK_ACCOUNT",
										"BANK_TRANSFER"
									],
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device",
								"currency",
								"withdrawal_method"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Withdrawal button which brings the user to the Withdrawal modal or page is clicked.",
				"name": "Withdrawal Clicked",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"withdraw_v1",
							"trade_e1"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"origin": {
									"description": "What Withdrawal button we are referring to. BALANCE : for the exchange, next to the balance (total account value) info on the main trading page. CURRENCY_PAGE : CTA or menu on the coin page next to balance. LINK_BANK : link a bank flow. LINK_WALLET. PORTFOLIO (exchange) : deposit next to currency balance.\n",
									"enum": [
										"BALANCE",
										"CURRENCY_PAGE",
										"LINK_BANK",
										"LINK_WALLET",
										"PORTFOLIO"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user clicked on the withdrawal ",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								}
							},
							"required": [
								"device",
								"origin",
								"platform"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "The user selects how the funds will be withdrawn, either linked bank or transfer",
				"name": "Withdrawal Method Selected",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"withdraw_v1",
							"trade_e1"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"currency": {
									"description": "the currency the user wants to withdraw",
									"pattern": "^[A-Z]{3,5}$",
									"type": "string"
								},
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"platform": {
									"description": "What platform the user is withdraw funds from",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"to_account_type": {
									"description": "To what type of account the user wants to withdraw funds to. Only makes sense for Exchange. Null otherwise. \nEXCHANGE : Blockchain Exchange wallet \nEXTERNAL : external address outside Blockchain.com. \nSAVINGS : interest saving account. \nTRADING : wallet custodial wallet. \nUSERKEY : Non Custodial, Private Key, wallet",
									"enum": [
										"EXTERNAL",
										"SAVINGS",
										"TRADING",
										"USERKEY",
										null
									],
									"type": [
										"string",
										"null"
									]
								},
								"withdrawal_method": {
									"description": "How the funds will be withdrawn : \nBANK_ACCOUNT: funds sent to a bank account. \nBANK_TRANSFER : Funds sent to Linked account via Open Banking or ACH. CRYPTO : withdrawing to a crypto address",
									"enum": [
										"BANK_ACCOUNT",
										"BANK_TRANSFER",
										"CRYPTO"
									],
									"type": "string"
								}
							},
							"required": [
								"withdrawal_method",
								"platform",
								"currency",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Withdrawal flyover or screen viewed. This should be triggered anytime the page is showed coming from another part of the product",
				"name": "Withdrawal Viewed",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"flow": [
							"withdraw_v1",
							"trade_e1"
						],
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"device": {
									"description": "Device type from where the event was triggered.",
									"enum": [
										"APP-iOS",
										"WEB",
										"APP-Android"
									],
									"type": "string"
								},
								"path": {
									"description": "Path portion of the URL of the page. Equivalent to canonical path which defaults to location.pathname from the DOM API.",
									"type": "string"
								},
								"platform": {
									"description": "What platform the user wants to withdraw from",
									"enum": [
										"EXCHANGE",
										"WALLET"
									],
									"type": "string"
								},
								"referrer": {
									"description": "Full URL of the previous page. Equivalent to document.referrer from the DOM API.",
									"type": "string"
								},
								"search": {
									"description": "Query string portion of the URL of the page. Equivalent to location.search from the DOM API.",
									"type": "string"
								},
								"title": {
									"description": "Title of the page. Equivalent to document.title from the DOM API.",
									"type": "string"
								},
								"url": {
									"description": "Full URL of the page. First we look for the canonical url. If the canonical url is not provided, we use location.href from the DOM API.",
									"type": "string"
								}
							},
							"required": [
								"platform",
								"device"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Wrong XPub change cache stored in the payload is seen.",
				"name": "Wrong Change Cache",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"type": "object"
				},
				"version": 1
			},
			{
				"description": "Wrong XPub receive cache stored in the payload is seen.",
				"name": "Wrong Receive Cache",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"labels": {
						"source": "client"
					},
					"properties": {
						"context": {
						},
						"properties": {
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"type": "object"
				},
				"version": 1
			}
		],
		"global": {
			"$schema": "http://json-schema.org/draft-07/schema#",
			"properties": {
				"context": {
					"type": "object"
				},
				"properties": {
					"type": "object"
				},
				"traits": {
					"type": "object"
				}
			},
			"type": "object"
		},
		"group_traits": [
		],
		"identify": {
			"$schema": "http://json-schema.org/draft-07/schema#",
			"properties": {
				"context": {
				},
				"properties": {
					"type": "object"
				},
				"traits": {
					"properties": {
						"country": {
							"description": "Users' country taken from the address",
							"pattern": "^[A-Z]{2,2}$",
							"type": "string"
						},
						"country_state": {
							"description": "Users' country state taken from the address",
							"pattern": "",
							"type": "string"
						},
						"device": {
							"description": "Users's device",
							"enum": [
								"APP-Android",
								"APP-iOS",
								"WEB"
							],
							"type": "string"
						},
						"email": {
							"description": "",
							"type": "string"
						},
						"exchange_version": {
							"description": "The exchange app version",
							"type": "string"
						},
						"nabu_id": {
							"description": "",
							"type": "string"
						},
						"name": {
							"description": "",
							"type": "string"
						},
						"tier": {
							"description": "",
							"pattern": "^[1-6]$",
							"type": "string"
						},
						"user_tag_institutional": {
							"description": "The user is an institutional client",
							"type": "string"
						},
						"user_tag_internal_testing": {
							"description": "Shows the user is tagged as internal",
							"type": "string"
						},
						"user_tag_market_maker": {
							"description": "The user is a market maker",
							"type": "string"
						},
						"user_tags": {
							"description": "The tags associated with the user",
							"type": "string"
						},
						"users_credentials_id": {
							"description": "Users Credentials id used for exchange users",
							"type": "object"
						},
						"wallet_id": {
							"description": "",
							"type": "string"
						},
						"wallet_version": {
							"description": "The wallet app version",
							"type": "string"
						}
					},
					"type": "object"
				}
			},
			"type": "object"
		},
		"identify_traits": [
		]
	},
	"update_time": "2022-02-01T19:58:42.000Z"
}